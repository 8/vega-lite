import * as tslib_1 from "tslib";
export function extractTitleConfig(titleConfig) {
    var 
    // These are non-mark title config that need to be hardcoded
    anchor = titleConfig.anchor, offset = titleConfig.offset, orient = titleConfig.orient, 
    // color needs to be redirect to fill
    color = titleConfig.color, 
    // The rest are mark config.
    titleMarkConfig = tslib_1.__rest(titleConfig, ["anchor", "offset", "orient", "color"]);
    var mark = tslib_1.__assign({}, titleMarkConfig, color ? { fill: color } : {});
    var nonMark = tslib_1.__assign({}, anchor ? { anchor: anchor } : {}, offset ? { offset: offset } : {}, orient ? { orient: orient } : {});
    return { mark: mark, nonMark: nonMark };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGl0bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdGl0bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQXdDQSxNQUFNLDZCQUE2QixXQUEwQjtJQU16RDtJQURBLDREQUE0RDtJQUM1RCwyQkFBTSxFQUFFLDJCQUFNLEVBQUUsMkJBQU07SUFDdEIscUNBQXFDO0lBQ3JDLHlCQUFLO0lBQ0wsNEJBQTRCO0lBQzVCLHNGQUFrQixDQUNKO0lBRWhCLElBQU0sSUFBSSx3QkFDTCxlQUFlLEVBQ2YsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFDLElBQUksRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUM5QixDQUFDO0lBRUYsSUFBTSxPQUFPLHdCQUNSLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQyxNQUFNLFFBQUEsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQ3RCLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQyxNQUFNLFFBQUEsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQ3RCLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBQyxNQUFNLFFBQUEsRUFBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQzFCLENBQUM7SUFFRixPQUFPLEVBQUMsSUFBSSxNQUFBLEVBQUUsT0FBTyxTQUFBLEVBQUMsQ0FBQztBQUN6QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBbmNob3IsIFRpdGxlT3JpZW50LCBWZ01hcmtDb25maWcsIFZnVGl0bGVDb25maWd9IGZyb20gJy4vdmVnYS5zY2hlbWEnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRpdGxlQmFzZSB7XG4gIC8qKlxuICAgKiBUaGUgb3JpZW50YXRpb24gb2YgdGhlIHRpdGxlIHJlbGF0aXZlIHRvIHRoZSBjaGFydC4gT25lIG9mIGBcInRvcFwiYCAodGhlIGRlZmF1bHQpLCBgXCJib3R0b21cImAsIGBcImxlZnRcImAsIG9yIGBcInJpZ2h0XCJgLlxuICAgKi9cbiAgb3JpZW50PzogVGl0bGVPcmllbnQ7XG5cbiAgLyoqXG4gICAqIFRoZSBhbmNob3IgcG9zaXRpb24gZm9yIHBsYWNpbmcgdGhlIHRpdGxlLiBPbmUgb2YgYFwic3RhcnRcImAsIGBcIm1pZGRsZVwiYCwgb3IgYFwiZW5kXCJgLiBGb3IgZXhhbXBsZSwgd2l0aCBhbiBvcmllbnRhdGlvbiBvZiB0b3AgdGhlc2UgYW5jaG9yIHBvc2l0aW9ucyBtYXAgdG8gYSBsZWZ0LSwgY2VudGVyLSwgb3IgcmlnaHQtYWxpZ25lZCB0aXRsZS5cbiAgICpcbiAgICogX19EZWZhdWx0IHZhbHVlOl9fIGBcIm1pZGRsZVwiYCBmb3IgW3NpbmdsZV0oaHR0cHM6Ly92ZWdhLmdpdGh1Yi5pby92ZWdhLWxpdGUvZG9jcy9zcGVjLmh0bWwpIGFuZCBbbGF5ZXJlZF0oaHR0cHM6Ly92ZWdhLmdpdGh1Yi5pby92ZWdhLWxpdGUvZG9jcy9sYXllci5odG1sKSB2aWV3cy5cbiAgICogYFwic3RhcnRcImAgZm9yIG90aGVyIGNvbXBvc2l0ZSB2aWV3cy5cbiAgICpcbiAgICogX19Ob3RlOl9fIFtGb3Igbm93XShodHRwczovL2dpdGh1Yi5jb20vdmVnYS92ZWdhLWxpdGUvaXNzdWVzLzI4NzUpLCBgYW5jaG9yYCBpcyBvbmx5IGN1c3RvbWl6YWJsZSBvbmx5IGZvciBbc2luZ2xlXShodHRwczovL3ZlZ2EuZ2l0aHViLmlvL3ZlZ2EtbGl0ZS9kb2NzL3NwZWMuaHRtbCkgYW5kIFtsYXllcmVkXShodHRwczovL3ZlZ2EuZ2l0aHViLmlvL3ZlZ2EtbGl0ZS9kb2NzL2xheWVyLmh0bWwpIHZpZXdzLiAgRm9yIG90aGVyIGNvbXBvc2l0ZSB2aWV3cywgYGFuY2hvcmAgaXMgYWx3YXlzIGBcInN0YXJ0XCJgLlxuICAgKi9cbiAgYW5jaG9yPzogQW5jaG9yO1xuXG4gIC8qKlxuICAgKiBUaGUgb3J0aG9nb25hbCBvZmZzZXQgaW4gcGl4ZWxzIGJ5IHdoaWNoIHRvIGRpc3BsYWNlIHRoZSB0aXRsZSBmcm9tIGl0cyBwb3NpdGlvbiBhbG9uZyB0aGUgZWRnZSBvZiB0aGUgY2hhcnQuXG4gICAqL1xuICBvZmZzZXQ/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEEgW21hcmsgc3R5bGUgcHJvcGVydHldKGh0dHBzOi8vdmVnYS5naXRodWIuaW8vdmVnYS1saXRlL2RvY3MvY29uZmlnLmh0bWwjc3R5bGUpIHRvIGFwcGx5IHRvIHRoZSB0aXRsZSB0ZXh0IG1hcmsuXG4gICAqXG4gICAqIF9fRGVmYXVsdCB2YWx1ZTpfXyBgXCJncm91cC10aXRsZVwiYC5cbiAgICovXG4gIHN0eWxlPzogc3RyaW5nIHwgc3RyaW5nW107XG5cbiAgLy8gVE9ETzogbmFtZSwgZW5jb2RlLCBpbnRlcmFjdGl2ZSwgemluZGV4XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGl0bGVQYXJhbXMgZXh0ZW5kcyBUaXRsZUJhc2Uge1xuICAvKipcbiAgICogVGhlIHRpdGxlIHRleHQuXG4gICAqL1xuICB0ZXh0OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0VGl0bGVDb25maWcodGl0bGVDb25maWc6IFZnVGl0bGVDb25maWcpOiB7XG4gIG1hcms6IFZnTWFya0NvbmZpZyxcbiAgbm9uTWFyazogVGl0bGVCYXNlXG59IHtcbiAgY29uc3Qge1xuICAgIC8vIFRoZXNlIGFyZSBub24tbWFyayB0aXRsZSBjb25maWcgdGhhdCBuZWVkIHRvIGJlIGhhcmRjb2RlZFxuICAgIGFuY2hvciwgb2Zmc2V0LCBvcmllbnQsXG4gICAgLy8gY29sb3IgbmVlZHMgdG8gYmUgcmVkaXJlY3QgdG8gZmlsbFxuICAgIGNvbG9yLFxuICAgIC8vIFRoZSByZXN0IGFyZSBtYXJrIGNvbmZpZy5cbiAgICAuLi50aXRsZU1hcmtDb25maWdcbiAgfSA9IHRpdGxlQ29uZmlnO1xuXG4gIGNvbnN0IG1hcms6IFZnTWFya0NvbmZpZyA9IHtcbiAgICAuLi50aXRsZU1hcmtDb25maWcsXG4gICAgLi4uY29sb3IgPyB7ZmlsbDogY29sb3J9IDoge31cbiAgfTtcblxuICBjb25zdCBub25NYXJrOiBUaXRsZUJhc2UgPSB7XG4gICAgLi4uYW5jaG9yID8ge2FuY2hvcn0gOiB7fSxcbiAgICAuLi5vZmZzZXQgPyB7b2Zmc2V0fSA6IHt9LFxuICAgIC4uLm9yaWVudCA/IHtvcmllbnR9IDoge31cbiAgfTtcblxuICByZXR1cm4ge21hcmssIG5vbk1hcmt9O1xufVxuIl19