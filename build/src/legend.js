import * as tslib_1 from "tslib";
import { flagKeys } from './util';
export var defaultLegendConfig = {};
var COMMON_LEGEND_PROPERTY_INDEX = {
    entryPadding: 1,
    format: 1,
    offset: 1,
    orient: 1,
    padding: 1,
    tickCount: 1,
    title: 1,
    type: 1,
    values: 1,
    zindex: 1
};
var VG_LEGEND_PROPERTY_INDEX = tslib_1.__assign({}, COMMON_LEGEND_PROPERTY_INDEX, { 
    // channel scales
    opacity: 1, shape: 1, stroke: 1, fill: 1, size: 1, 
    // encode
    encode: 1 });
export var LEGEND_PROPERTIES = flagKeys(COMMON_LEGEND_PROPERTY_INDEX);
export var VG_LEGEND_PROPERTIES = flagKeys(VG_LEGEND_PROPERTY_INDEX);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVnZW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xlZ2VuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBRUEsT0FBTyxFQUFPLFFBQVEsRUFBQyxNQUFNLFFBQVEsQ0FBQztBQXdFdEMsTUFBTSxDQUFDLElBQU0sbUJBQW1CLEdBQWlCLEVBQUUsQ0FBQztBQUVwRCxJQUFNLDRCQUE0QixHQUFvQztJQUNwRSxZQUFZLEVBQUUsQ0FBQztJQUNmLE1BQU0sRUFBRSxDQUFDO0lBQ1QsTUFBTSxFQUFFLENBQUM7SUFDVCxNQUFNLEVBQUUsQ0FBQztJQUNULE9BQU8sRUFBRSxDQUFDO0lBQ1YsU0FBUyxFQUFFLENBQUM7SUFDWixLQUFLLEVBQUUsQ0FBQztJQUNSLElBQUksRUFBRSxDQUFDO0lBQ1AsTUFBTSxFQUFFLENBQUM7SUFDVCxNQUFNLEVBQUUsQ0FBQztDQUNWLENBQUM7QUFFRixJQUFNLHdCQUF3Qix3QkFDekIsNEJBQTRCO0lBQy9CLGlCQUFpQjtJQUNqQixPQUFPLEVBQUUsQ0FBQyxFQUNWLEtBQUssRUFBRSxDQUFDLEVBQ1IsTUFBTSxFQUFFLENBQUMsRUFDVCxJQUFJLEVBQUUsQ0FBQyxFQUNQLElBQUksRUFBRSxDQUFDO0lBQ1AsU0FBUztJQUNULE1BQU0sRUFBRSxDQUFDLEdBQ1YsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFNLGlCQUFpQixHQUFHLFFBQVEsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO0FBRXhFLE1BQU0sQ0FBQyxJQUFNLG9CQUFvQixHQUFHLFFBQVEsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEYXRlVGltZX0gZnJvbSAnLi9kYXRldGltZSc7XG5pbXBvcnQge0d1aWRlLCBHdWlkZUVuY29kaW5nRW50cnksIFZsT25seUd1aWRlQ29uZmlnfSBmcm9tICcuL2d1aWRlJztcbmltcG9ydCB7RmxhZywgZmxhZ0tleXN9IGZyb20gJy4vdXRpbCc7XG5pbXBvcnQge1ZnTGVnZW5kLCBWZ0xlZ2VuZEJhc2UsIFZnTGVnZW5kQ29uZmlnfSBmcm9tICcuL3ZlZ2Euc2NoZW1hJztcblxuXG5leHBvcnQgaW50ZXJmYWNlIExlZ2VuZENvbmZpZyBleHRlbmRzIFZnTGVnZW5kQ29uZmlnLCBWbE9ubHlHdWlkZUNvbmZpZyB7fVxuXG4vKipcbiAqIFByb3BlcnRpZXMgb2YgYSBsZWdlbmQgb3IgYm9vbGVhbiBmbGFnIGZvciBkZXRlcm1pbmluZyB3aGV0aGVyIHRvIHNob3cgaXQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTGVnZW5kIGV4dGVuZHMgVmdMZWdlbmRCYXNlLCBHdWlkZSB7XG4gIC8qKlxuICAgKiBNYXJrIGRlZmluaXRpb25zIGZvciBjdXN0b20gbGVnZW5kIGVuY29kaW5nLlxuICAgKlxuICAgKiBAaGlkZVxuICAgKi9cbiAgZW5jb2Rpbmc/OiBMZWdlbmRFbmNvZGluZztcblxuICAvKipcbiAgICogVGhlIGRlc2lyZWQgbnVtYmVyIG9mIHRpY2sgdmFsdWVzIGZvciBxdWFudGl0YXRpdmUgbGVnZW5kcy5cbiAgICovXG4gIHRpY2tDb3VudD86IG51bWJlcjtcblxuICAvKipcbiAgICogRXhwbGljaXRseSBzZXQgdGhlIHZpc2libGUgbGVnZW5kIHZhbHVlcy5cbiAgICovXG4gIHZhbHVlcz86IG51bWJlcltdIHwgc3RyaW5nW10gfCBEYXRlVGltZVtdO1xuXG4gIC8qKlxuICAgKiBUaGUgdHlwZSBvZiB0aGUgbGVnZW5kLiBVc2UgYFwic3ltYm9sXCJgIHRvIGNyZWF0ZSBhIGRpc2NyZXRlIGxlZ2VuZCBhbmQgYFwiZ3JhZGllbnRcImAgZm9yIGEgY29udGludW91cyBjb2xvciBncmFkaWVudC5cbiAgICpcbiAgICogX19EZWZhdWx0IHZhbHVlOl9fIGBcImdyYWRpZW50XCJgIGZvciBub24tYmlubmVkIHF1YW50aXRhdGl2ZSBmaWVsZHMgYW5kIHRlbXBvcmFsIGZpZWxkczsgYFwic3ltYm9sXCJgIG90aGVyd2lzZS5cbiAgICovXG4gIHR5cGU/OiAnc3ltYm9sJyB8ICdncmFkaWVudCc7XG5cbiAgLyoqXG4gICAqIEEgbm9uLXBvc2l0aXZlIGludGVnZXIgaW5kaWNhdGluZyB6LWluZGV4IG9mIHRoZSBsZWdlbmQuXG4gICAqIElmIHppbmRleCBpcyAwLCBsZWdlbmQgc2hvdWxkIGJlIGRyYXduIGJlaGluZCBhbGwgY2hhcnQgZWxlbWVudHMuXG4gICAqIFRvIHB1dCB0aGVtIGluIGZyb250LCB1c2UgemluZGV4ID0gMS5cbiAgICogQFRKUy10eXBlIGludGVnZXJcbiAgICogQG1pbmltdW0gMFxuICAgKi9cbiAgemluZGV4PzogbnVtYmVyO1xufVxuXG5leHBvcnQgdHlwZSBMZWdlbmRFbmNvZGluZyA9IHtcbiAgLyoqXG4gICAqIEN1c3RvbSBlbmNvZGluZyBmb3IgdGhlIGxlZ2VuZCBjb250YWluZXIuXG4gICAqIFRoaXMgY2FuIGJlIHVzZWZ1bCBmb3IgY3JlYXRpbmcgbGVnZW5kIHdpdGggY3VzdG9tIHgsIHkgcG9zaXRpb24uXG4gICAqL1xuICBsZWdlbmQ/OiBHdWlkZUVuY29kaW5nRW50cnk7XG5cbiAgLyoqXG4gICAqIEN1c3RvbSBlbmNvZGluZyBmb3IgdGhlIGxlZ2VuZCB0aXRsZSB0ZXh0IG1hcmsuXG4gICAqL1xuICB0aXRsZT86IEd1aWRlRW5jb2RpbmdFbnRyeTtcblxuICAvKipcbiAgICogQ3VzdG9tIGVuY29kaW5nIGZvciBsZWdlbmQgbGFiZWwgdGV4dCBtYXJrcy5cbiAgICovXG4gIGxhYmVscz86IEd1aWRlRW5jb2RpbmdFbnRyeTtcblxuICAvKipcbiAgICogQ3VzdG9tIGVuY29kaW5nIGZvciBsZWdlbmQgc3ltYm9sIG1hcmtzLlxuICAgKi9cbiAgc3ltYm9scz86IEd1aWRlRW5jb2RpbmdFbnRyeTtcblxuICAvKipcbiAgICogQ3VzdG9tIGVuY29kaW5nIGZvciBsZWdlbmQgZ3JhZGllbnQgZmlsbGVkIHJlY3QgbWFya3MuXG4gICAqL1xuICBncmFkaWVudD86IEd1aWRlRW5jb2RpbmdFbnRyeTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0TGVnZW5kQ29uZmlnOiBMZWdlbmRDb25maWcgPSB7fTtcblxuY29uc3QgQ09NTU9OX0xFR0VORF9QUk9QRVJUWV9JTkRFWDogRmxhZzxrZXlvZiAoVmdMZWdlbmQgfCBMZWdlbmQpPiA9IHtcbiAgZW50cnlQYWRkaW5nOiAxLFxuICBmb3JtYXQ6IDEsXG4gIG9mZnNldDogMSxcbiAgb3JpZW50OiAxLFxuICBwYWRkaW5nOiAxLFxuICB0aWNrQ291bnQ6IDEsXG4gIHRpdGxlOiAxLFxuICB0eXBlOiAxLFxuICB2YWx1ZXM6IDEsXG4gIHppbmRleDogMVxufTtcblxuY29uc3QgVkdfTEVHRU5EX1BST1BFUlRZX0lOREVYOiBGbGFnPGtleW9mIFZnTGVnZW5kPiA9IHtcbiAgLi4uQ09NTU9OX0xFR0VORF9QUk9QRVJUWV9JTkRFWCxcbiAgLy8gY2hhbm5lbCBzY2FsZXNcbiAgb3BhY2l0eTogMSxcbiAgc2hhcGU6IDEsXG4gIHN0cm9rZTogMSxcbiAgZmlsbDogMSxcbiAgc2l6ZTogMSxcbiAgLy8gZW5jb2RlXG4gIGVuY29kZTogMVxufTtcblxuZXhwb3J0IGNvbnN0IExFR0VORF9QUk9QRVJUSUVTID0gZmxhZ0tleXMoQ09NTU9OX0xFR0VORF9QUk9QRVJUWV9JTkRFWCk7XG5cbmV4cG9ydCBjb25zdCBWR19MRUdFTkRfUFJPUEVSVElFUyA9IGZsYWdLZXlzKFZHX0xFR0VORF9QUk9QRVJUWV9JTkRFWCk7XG4iXX0=