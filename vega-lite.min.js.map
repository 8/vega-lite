{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/vl","vega-lite.js","node_modules/browserify/node_modules/process/browser.js","node_modules/colorbrewer/colorbrewer.js","node_modules/colorbrewer/index.js","node_modules/d3-color/build/color.js","node_modules/datalib/src/bins/bins.js","node_modules/datalib/src/generate.js","node_modules/datalib/src/import/type.js","node_modules/datalib/src/stats.js","node_modules/datalib/src/time-units.js","node_modules/datalib/src/util.js","src/Encoding.js","src/compiler/aggregate.js","src/compiler/axis.js","src/compiler/bin.js","src/compiler/compiler.js","src/compiler/facet.js","src/compiler/filter.js","src/compiler/group.js","src/compiler/layout.js","src/compiler/legend.js","src/compiler/marks.js","src/compiler/scale.js","src/compiler/sort.js","src/compiler/stack.js","src/compiler/style.js","src/compiler/subfacet.js","src/compiler/template.js","src/compiler/time.js","src/consts.js","src/data.js","src/enc.js","src/field.js","src/globals.js","src/schema/schema.js","src/schema/schemautil.js","src/util.js"],"names":["e","exports","module","define","amd","f","window","global","self","vl","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"util","consts","extend","Encoding","compiler","compile","data","enc","field","schema","toShorthand","shorthand","./Encoding","./compiler/compiler","./consts","./data","./enc","./field","./globals","./schema/schema","./util",2,3,"drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",4,"colorbrewer","YlGn",5,6,7,8,9,"YlGnBu","GnBu","BuGn","PuBuGn","PuBu","BuPu","RdPu","PuRd","OrRd","YlOrRd","YlOrBr","Purples","Blues","Greens","Oranges","Reds","Greys","PuOr",10,11,"BrBG","PRGn","PiYG","RdBu","RdGy","RdYlBu","Spectral","RdYlGn","Accent","Dark2","Paired",12,"Pastel1","Pastel2","Set1","Set2","Set3","this","./colorbrewer.js","Map","prototype","set","k","v","get","has","factory","color","Color","Rgb","g","b","Math","max","min","round","format","isNaN","toString","rgbn","rgb","Hsl","h","hsl2rgb","m1","m2","Lab","xyz2rgb","x","pow","lab2xyz","t1","t2","t0","xyz2lab","t3","rgb2xyz","Hcl","c","Cubehelix","named","_prototype","darker","brighter","arguments","NaN","__prototype","hsl","range","reHex3","reHex6","reRgbInteger","reRgbPercent","reHslPercent","m","trim","toLowerCase","exec","parseInt","___prototype","Kn","Xn","Yn","Zn","y","z","deg2rad","PI","____prototype","lab","sin","cos","rad2deg","hcl","sqrt","atan2","gamma","A","B","C","D","E","ED","EB","BC_DA","cubehelix","bl","lgamma","cosh","sinh","interpolateCubehelixLong","ah","as","al","bh","bs","deltaHue","h0","delta","interpolateCubehelix","interpolateHclLong","ac","bc","interpolateHcl","interpolateLab","aa","ab","ba","bb","interpolateHslLong","interpolateHsl","interpolateRgb","ar","ag","br","bg","bins","opt","step","level","minstep","precision","eps","maxb","maxbins","base","logb","log","div","span","steps","bisect","ceil","floor","start","stop","unit","value","index","lo","hi","mid","cmp","EPSILON","date_value","date","date_index","units","dmin","dmax","minb","minbins","find","spec","raw","../time-units","../util","gen","repeat","val","Array","zeros","Infinity","j","random","uniform","undefined","d","samples","map","integer","normal","mean","stdev","next","rds","annotation","types","TYPES","type","values","$","isString","isValid","isDate","isNumber","isBoolean","typeAll","fields","keys","reduce","infer","TESTS","splice","inferAll","PARSERS","boolean","number","string","Date","parse","all","parsers","stats","unique","results","count","valid","missing","distinct","median","filter","sort","quantile","quartile","q","p","identity","H","sum","variance","isArray","M2","modeskew","avg","med","std","extent","dot","Number","rank","mu","idx","comparator","tie","cor","fn","mua","mub","sda","sdb","ra","rb","dist","X","Y","mat","exp","isFunction","L2","abs","R","M","entropy","counts","LN2","mutual","px","py","I","info","profile","sd","vals","q1","q3","summary","__summary__","./generate","./import/type","STEPS","entries","UTC","getUTCFullYear","getUTCMonth","minuteOfHour","getUTCMinutes","hourOfDay","getUTCHours","dayOfWeek","getUTCDay","dayOfMonth","getUTCDate","monthOfYear","second","minute","hour","day","month","year","timesteps","util_escape_str","replace","escape_str_re","strrep","str","truncateOnWord","rev","cnt","tok","split","truncate_word_re","reverse","w","join","slice","Buffer","isNode","stderr","FNAME","namedfunc","duplicate","obj","JSON","stringify","equal","toMap","list","keystr","String","Object","isObject","isBuffer","array","shift","apply","accessor","mutator","$func","op","$valid","$length","$year","$month","$date","$day","$hour","$minute","$in","sign","numcmp","stablesort","sortBy","keyFn","indices","sa","sb","startsWith","searchString","lastIndexOf","pad","pos","padchar","truncate","word","ellipsis","l1","l2","./time-units","_process","buffer",13,"vlfield","vlenc","theme","defaults","instantiate","specExtended","merge","_data","_marktype","marktype","_enc","encoding","_config","config","_filter","proto","fromShorthand","delim","assign","fromSpec","specFromShorthand","excludeConfig","toSpec","excludeData","subtract","is","encType","et","filterNull","forEach","fieldList","fieldName","Q","containsType","T","O","N","operands","operator","concat","nodata","nofn","fieldRef","_vega2","fieldTitle","isCount","displayName","timeUnit","aggregate","bin","toUpperCase","scale","axis","band","bandSize","useSmallBand","ROW","COL","size","MAXBINS_DEFAULT","legend","isTypes","toggleSort","support","qField","init","role","text","prop","TEXT","font","isType","isOrdinalScale","isDimension","isMeasure","isAggregate","alwaysNoOcclusion","isStack","cardinality","isRaw","hasValues","transpose","oldenc","row","col","direction","mode","toggleFilterNullO","nulls",14,"aggregates","dataTable","dims","meas","detail","facets","transform","groupby","details","aggregated","../globals",15,"axis_title","def","layout","maxlength","cellWidth","cellHeight","setter","angle","align","baseline","dy","height","titleOffset","axisTitleOffset","axis_labels","time","hasScale","textTemplatePath","maxLabelLength","getter","names","props","defs","isCol","isRow","rowOffset","cellPadding","grid","layer","offset","stroke","opacity","x2","group","mult","orient","ticks","./time",16,"binning","output",17,"marks","facet","stack","style","subfacet","template","compileEncoding","rawTable","addFilters","aggResult","sorting","mark","mdefs","mdef","lineType","line","hasDetails","from","by","legends","scales","properties","update","axes","filterLessThanZero","../Encoding","./aggregate","./axis","./bin","./facet","./filter","./group","./layout","./legend","./marks","./scale","./sort","./stack","./style","./subfacet","./template","datalib/src/stats",18,"faceting","axesGrp","enter","facetKeys","cellAxes","hasRow","hasCol","fill","error","unshift","groupdef","width","trans",19,"BINARY",">",">=","=","!=","<","<=","filters","condition","op1","op2","console","warn","test",20,"_name",21,"vllayout","box","hasX","hasY","xCardinality","yCardinality","padding","colCardinality","rowCardinality","getMaxLength","maxLength",22,"COLOR","SIZE","SHAPE","shape","labels",23,"bar_props","xc","y2","yc","ALPHA","point_props","strokeWidth","line_props","area_props","tick_props","filled_point_props","text_props","fontSize","fontWeight","fontStyle","TABLE","bar","requiredEncoding","supportedEncoding","alpha","area","tick","circle","square","point",24,"scale_range","bandWidth","zero","nice","outerPadding","points","domain","STACKED","prefn","getDataset","ordinalPalette","palette","ps","interpolate","end","interpolator","d3-color",25,"addSortTransforms","datasetMapping","counter","byClause","dataName","transforms","source","RAW","../field",26,"stacking","dim","isXMeasure","isYMeasure","stacked","y1","y0",27,"estimateOpacity","numPoints","numMultiples",28,"subfaceting",29,"table","dataUrl","dataType","url",30,"timeFields","timeUnits","tf","fieldFn","func","stat","yearstat","formula","expr","labelLength","substr","isOrdinalFn","isColor",31,"encodingTypes","DETAIL",32,"vldata",33,"encTypes","countRetinal","fieldDef","arr","indexOf","enctype",34,"shorthands","timefns","tu","typeOrder","G","order","typeThenName","original","typeThenCardinality","getbins","./compiler/time",35,"INDEX",36,"enum","supportedEnums","supportedTypes","minimum","default","getSupportedRole","supportedRole","defaultTimeFn","scale_type","clone","typicalField","description","onlyOrdinalField","dimension","axisMixin","supportedMarktypes","sortMixin","items","required","bandMixin","legendMixin","textMixin","margin","weight","family","sizeMixin","colorMixin","alphaMixin","maximum","shapeMixin","detailMixin","rowMixin","colMixin","facetMixin","requiredNameType","multiRoleField","measure","quantitativeField","onlyQuantitativeField","formatType","additionalProperties","viewport","gridColor","gridOpacity","singleHeight","singleWidth","largeBandSize","smallBandSize","largeBandMaxCardinality","cellGridColor","cellGridOpacity","cellBackgroundColor","textCellWidth","singleBarOffset","c10palette","c20palette","timeScaleLabelLength","characterWidth","$schema","./schemautil",37,"dest","src","hasOwnProperty","constructor","schemautil","isEmpty","instance","changes","ins",38,"isin","item","thisArg","any","noaugment","msg","datalib/src/bins/bins","datalib/src/generate","datalib/src/util"],"mappings":"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","file":"vega-lite.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nrequire('./globals');\n\nvar util = require('./util'),\n    consts = require('./consts');\n\nvar vl = {};\n\nutil.extend(vl, consts, util);\n\nvl.Encoding = require('./Encoding');\nvl.compiler = require('./compiler/compiler');\nvl.compile = vl.compiler.compile;\nvl.data = require('./data');\nvl.enc = require('./enc');\nvl.field = require('./field');\nvl.schema = require('./schema/schema');\nvl.toShorthand = vl.Encoding.shorthand;\n\nmodule.exports = vl;","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.vl=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar util = require('./util'),\n    consts = require('./consts');\n\nvar vl = {};\n\nutil.extend(vl, consts, util);\n\nvl.Encoding = require('./Encoding');\nvl.compiler = require('./compiler/compiler');\nvl.compile = vl.compiler.compile;\nvl.data = require('./data');\nvl.enc = require('./enc');\nvl.field = require('./field');\nvl.schema = require('./schema/schema');\nvl.toShorthand = vl.Encoding.shorthand;\n\nmodule.exports = vl;\n},{\"./Encoding\":13,\"./compiler/compiler\":17,\"./consts\":31,\"./data\":32,\"./enc\":33,\"./field\":34,\"./globals\":35,\"./schema/schema\":36,\"./util\":38}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],4:[function(require,module,exports){\n// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).\n// JavaScript specs as packaged in the D3 library (d3js.org). Please see license at http://colorbrewer.org/export/LICENSE.txt\n!function() {\n\nvar colorbrewer = {YlGn: {\n3: [\"#f7fcb9\",\"#addd8e\",\"#31a354\"],\n4: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#238443\"],\n5: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#31a354\",\"#006837\"],\n6: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#31a354\",\"#006837\"],\n7: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n8: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n9: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"]\n},YlGnBu: {\n3: [\"#edf8b1\",\"#7fcdbb\",\"#2c7fb8\"],\n4: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#225ea8\"],\n5: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n6: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n7: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n8: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n9: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"]\n},GnBu: {\n3: [\"#e0f3db\",\"#a8ddb5\",\"#43a2ca\"],\n4: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#2b8cbe\"],\n5: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n6: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n7: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n8: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n9: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"]\n},BuGn: {\n3: [\"#e5f5f9\",\"#99d8c9\",\"#2ca25f\"],\n4: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#238b45\"],\n5: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n6: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n7: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n8: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n9: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},PuBuGn: {\n3: [\"#ece2f0\",\"#a6bddb\",\"#1c9099\"],\n4: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#02818a\"],\n5: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n6: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n7: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n8: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n9: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"]\n},PuBu: {\n3: [\"#ece7f2\",\"#a6bddb\",\"#2b8cbe\"],\n4: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#0570b0\"],\n5: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n6: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n7: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n8: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n9: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"]\n},BuPu: {\n3: [\"#e0ecf4\",\"#9ebcda\",\"#8856a7\"],\n4: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#88419d\"],\n5: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n6: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n7: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n8: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n9: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"]\n},RdPu: {\n3: [\"#fde0dd\",\"#fa9fb5\",\"#c51b8a\"],\n4: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#ae017e\"],\n5: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n6: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n7: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n8: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n9: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"]\n},PuRd: {\n3: [\"#e7e1ef\",\"#c994c7\",\"#dd1c77\"],\n4: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#ce1256\"],\n5: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n6: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n7: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n8: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n9: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"]\n},OrRd: {\n3: [\"#fee8c8\",\"#fdbb84\",\"#e34a33\"],\n4: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#d7301f\"],\n5: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n6: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n7: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n8: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n9: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"]\n},YlOrRd: {\n3: [\"#ffeda0\",\"#feb24c\",\"#f03b20\"],\n4: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#e31a1c\"],\n5: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n6: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n7: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n8: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n9: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"]\n},YlOrBr: {\n3: [\"#fff7bc\",\"#fec44f\",\"#d95f0e\"],\n4: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#cc4c02\"],\n5: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n6: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n7: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n8: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n9: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"]\n},Purples: {\n3: [\"#efedf5\",\"#bcbddc\",\"#756bb1\"],\n4: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#6a51a3\"],\n5: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n6: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n7: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n8: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n9: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"]\n},Blues: {\n3: [\"#deebf7\",\"#9ecae1\",\"#3182bd\"],\n4: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#2171b5\"],\n5: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n6: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n7: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n8: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n9: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"]\n},Greens: {\n3: [\"#e5f5e0\",\"#a1d99b\",\"#31a354\"],\n4: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#238b45\"],\n5: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n6: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n7: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n8: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n9: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},Oranges: {\n3: [\"#fee6ce\",\"#fdae6b\",\"#e6550d\"],\n4: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#d94701\"],\n5: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n6: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n7: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n8: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n9: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"]\n},Reds: {\n3: [\"#fee0d2\",\"#fc9272\",\"#de2d26\"],\n4: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#cb181d\"],\n5: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n6: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n7: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n8: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n9: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"]\n},Greys: {\n3: [\"#f0f0f0\",\"#bdbdbd\",\"#636363\"],\n4: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#525252\"],\n5: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#636363\",\"#252525\"],\n6: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#636363\",\"#252525\"],\n7: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n8: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n9: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"]\n},PuOr: {\n3: [\"#f1a340\",\"#f7f7f7\",\"#998ec3\"],\n4: [\"#e66101\",\"#fdb863\",\"#b2abd2\",\"#5e3c99\"],\n5: [\"#e66101\",\"#fdb863\",\"#f7f7f7\",\"#b2abd2\",\"#5e3c99\"],\n6: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n7: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n8: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n9: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n10: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],\n11: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"]\n},BrBG: {\n3: [\"#d8b365\",\"#f5f5f5\",\"#5ab4ac\"],\n4: [\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\"],\n5: [\"#a6611a\",\"#dfc27d\",\"#f5f5f5\",\"#80cdc1\",\"#018571\"],\n6: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n7: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n8: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n9: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n10: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],\n11: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"]\n},PRGn: {\n3: [\"#af8dc3\",\"#f7f7f7\",\"#7fbf7b\"],\n4: [\"#7b3294\",\"#c2a5cf\",\"#a6dba0\",\"#008837\"],\n5: [\"#7b3294\",\"#c2a5cf\",\"#f7f7f7\",\"#a6dba0\",\"#008837\"],\n6: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n7: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n8: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n9: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n10: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],\n11: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"]\n},PiYG: {\n3: [\"#e9a3c9\",\"#f7f7f7\",\"#a1d76a\"],\n4: [\"#d01c8b\",\"#f1b6da\",\"#b8e186\",\"#4dac26\"],\n5: [\"#d01c8b\",\"#f1b6da\",\"#f7f7f7\",\"#b8e186\",\"#4dac26\"],\n6: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n7: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n8: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n9: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n10: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],\n11: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"]\n},RdBu: {\n3: [\"#ef8a62\",\"#f7f7f7\",\"#67a9cf\"],\n4: [\"#ca0020\",\"#f4a582\",\"#92c5de\",\"#0571b0\"],\n5: [\"#ca0020\",\"#f4a582\",\"#f7f7f7\",\"#92c5de\",\"#0571b0\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n},RdGy: {\n3: [\"#ef8a62\",\"#ffffff\",\"#999999\"],\n4: [\"#ca0020\",\"#f4a582\",\"#bababa\",\"#404040\"],\n5: [\"#ca0020\",\"#f4a582\",\"#ffffff\",\"#bababa\",\"#404040\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"]\n},RdYlBu: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91bfdb\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abd9e9\",\"#2c7bb6\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abd9e9\",\"#2c7bb6\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"]\n},Spectral: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#99d594\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abdda4\",\"#2b83ba\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abdda4\",\"#2b83ba\"],\n6: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n7: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n8: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n9: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n10: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],\n11: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"]\n},RdYlGn: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91cf60\"],\n4: [\"#d7191c\",\"#fdae61\",\"#a6d96a\",\"#1a9641\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#a6d96a\",\"#1a9641\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"]\n},Accent: {\n3: [\"#7fc97f\",\"#beaed4\",\"#fdc086\"],\n4: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\"],\n5: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\"],\n6: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\"],\n7: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\"],\n8: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"]\n},Dark2: {\n3: [\"#1b9e77\",\"#d95f02\",\"#7570b3\"],\n4: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\"],\n5: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\"],\n6: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\"],\n7: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\"],\n8: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"]\n},Paired: {\n3: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\"],\n4: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\"],\n5: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\"],\n6: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\"],\n7: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\"],\n8: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\"],\n9: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\"],\n10: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\"],\n11: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\"],\n12: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]\n},Pastel1: {\n3: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\"],\n4: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\"],\n5: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\"],\n6: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\"],\n7: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\"],\n8: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\"],\n9: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]\n},Pastel2: {\n3: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\"],\n4: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\"],\n5: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\"],\n6: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\"],\n7: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\"],\n8: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"]\n},Set1: {\n3: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\"],\n4: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\"],\n5: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\"],\n6: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\"],\n7: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\"],\n8: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\"],\n9: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"]\n},Set2: {\n3: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\"],\n4: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\"],\n5: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\"],\n6: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\"],\n7: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\"],\n8: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n},Set3: {\n3: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\"],\n4: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\"],\n5: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\"],\n6: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\"],\n7: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\"],\n8: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\"],\n9: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\"],\n10: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\"],\n11: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\"],\n12: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"]\n}};\n\nif (typeof define === \"function\" && define.amd) {\n    define(colorbrewer);\n} else if (typeof module === \"object\" && module.exports) {\n    module.exports = colorbrewer;\n} else {\n    this.colorbrewer = colorbrewer;\n}\n\n}();\n\n},{}],5:[function(require,module,exports){\nmodule.exports = require('./colorbrewer.js');\n\n},{\"./colorbrewer.js\":4}],6:[function(require,module,exports){\nif (typeof Map === \"undefined\") {\n  Map = function() {};\n  Map.prototype = {\n    set: function(k, v) { this[\"$\" + k] = v; return this; },\n    get: function(k) { return this[\"$\" + k]; },\n    has: function(k) { return \"$\" + k in this; }\n  };\n}\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.color = {}));\n}(this, function (exports) { 'use strict';\n\n  function Color() {}\n\n  Color.prototype = {\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  };\n\n  var named = (new Map)\n      .set(\"aliceblue\", 0xf0f8ff)\n      .set(\"antiquewhite\", 0xfaebd7)\n      .set(\"aqua\", 0x00ffff)\n      .set(\"aquamarine\", 0x7fffd4)\n      .set(\"azure\", 0xf0ffff)\n      .set(\"beige\", 0xf5f5dc)\n      .set(\"bisque\", 0xffe4c4)\n      .set(\"black\", 0x000000)\n      .set(\"blanchedalmond\", 0xffebcd)\n      .set(\"blue\", 0x0000ff)\n      .set(\"blueviolet\", 0x8a2be2)\n      .set(\"brown\", 0xa52a2a)\n      .set(\"burlywood\", 0xdeb887)\n      .set(\"cadetblue\", 0x5f9ea0)\n      .set(\"chartreuse\", 0x7fff00)\n      .set(\"chocolate\", 0xd2691e)\n      .set(\"coral\", 0xff7f50)\n      .set(\"cornflowerblue\", 0x6495ed)\n      .set(\"cornsilk\", 0xfff8dc)\n      .set(\"crimson\", 0xdc143c)\n      .set(\"cyan\", 0x00ffff)\n      .set(\"darkblue\", 0x00008b)\n      .set(\"darkcyan\", 0x008b8b)\n      .set(\"darkgoldenrod\", 0xb8860b)\n      .set(\"darkgray\", 0xa9a9a9)\n      .set(\"darkgreen\", 0x006400)\n      .set(\"darkgrey\", 0xa9a9a9)\n      .set(\"darkkhaki\", 0xbdb76b)\n      .set(\"darkmagenta\", 0x8b008b)\n      .set(\"darkolivegreen\", 0x556b2f)\n      .set(\"darkorange\", 0xff8c00)\n      .set(\"darkorchid\", 0x9932cc)\n      .set(\"darkred\", 0x8b0000)\n      .set(\"darksalmon\", 0xe9967a)\n      .set(\"darkseagreen\", 0x8fbc8f)\n      .set(\"darkslateblue\", 0x483d8b)\n      .set(\"darkslategray\", 0x2f4f4f)\n      .set(\"darkslategrey\", 0x2f4f4f)\n      .set(\"darkturquoise\", 0x00ced1)\n      .set(\"darkviolet\", 0x9400d3)\n      .set(\"deeppink\", 0xff1493)\n      .set(\"deepskyblue\", 0x00bfff)\n      .set(\"dimgray\", 0x696969)\n      .set(\"dimgrey\", 0x696969)\n      .set(\"dodgerblue\", 0x1e90ff)\n      .set(\"firebrick\", 0xb22222)\n      .set(\"floralwhite\", 0xfffaf0)\n      .set(\"forestgreen\", 0x228b22)\n      .set(\"fuchsia\", 0xff00ff)\n      .set(\"gainsboro\", 0xdcdcdc)\n      .set(\"ghostwhite\", 0xf8f8ff)\n      .set(\"gold\", 0xffd700)\n      .set(\"goldenrod\", 0xdaa520)\n      .set(\"gray\", 0x808080)\n      .set(\"green\", 0x008000)\n      .set(\"greenyellow\", 0xadff2f)\n      .set(\"grey\", 0x808080)\n      .set(\"honeydew\", 0xf0fff0)\n      .set(\"hotpink\", 0xff69b4)\n      .set(\"indianred\", 0xcd5c5c)\n      .set(\"indigo\", 0x4b0082)\n      .set(\"ivory\", 0xfffff0)\n      .set(\"khaki\", 0xf0e68c)\n      .set(\"lavender\", 0xe6e6fa)\n      .set(\"lavenderblush\", 0xfff0f5)\n      .set(\"lawngreen\", 0x7cfc00)\n      .set(\"lemonchiffon\", 0xfffacd)\n      .set(\"lightblue\", 0xadd8e6)\n      .set(\"lightcoral\", 0xf08080)\n      .set(\"lightcyan\", 0xe0ffff)\n      .set(\"lightgoldenrodyellow\", 0xfafad2)\n      .set(\"lightgray\", 0xd3d3d3)\n      .set(\"lightgreen\", 0x90ee90)\n      .set(\"lightgrey\", 0xd3d3d3)\n      .set(\"lightpink\", 0xffb6c1)\n      .set(\"lightsalmon\", 0xffa07a)\n      .set(\"lightseagreen\", 0x20b2aa)\n      .set(\"lightskyblue\", 0x87cefa)\n      .set(\"lightslategray\", 0x778899)\n      .set(\"lightslategrey\", 0x778899)\n      .set(\"lightsteelblue\", 0xb0c4de)\n      .set(\"lightyellow\", 0xffffe0)\n      .set(\"lime\", 0x00ff00)\n      .set(\"limegreen\", 0x32cd32)\n      .set(\"linen\", 0xfaf0e6)\n      .set(\"magenta\", 0xff00ff)\n      .set(\"maroon\", 0x800000)\n      .set(\"mediumaquamarine\", 0x66cdaa)\n      .set(\"mediumblue\", 0x0000cd)\n      .set(\"mediumorchid\", 0xba55d3)\n      .set(\"mediumpurple\", 0x9370db)\n      .set(\"mediumseagreen\", 0x3cb371)\n      .set(\"mediumslateblue\", 0x7b68ee)\n      .set(\"mediumspringgreen\", 0x00fa9a)\n      .set(\"mediumturquoise\", 0x48d1cc)\n      .set(\"mediumvioletred\", 0xc71585)\n      .set(\"midnightblue\", 0x191970)\n      .set(\"mintcream\", 0xf5fffa)\n      .set(\"mistyrose\", 0xffe4e1)\n      .set(\"moccasin\", 0xffe4b5)\n      .set(\"navajowhite\", 0xffdead)\n      .set(\"navy\", 0x000080)\n      .set(\"oldlace\", 0xfdf5e6)\n      .set(\"olive\", 0x808000)\n      .set(\"olivedrab\", 0x6b8e23)\n      .set(\"orange\", 0xffa500)\n      .set(\"orangered\", 0xff4500)\n      .set(\"orchid\", 0xda70d6)\n      .set(\"palegoldenrod\", 0xeee8aa)\n      .set(\"palegreen\", 0x98fb98)\n      .set(\"paleturquoise\", 0xafeeee)\n      .set(\"palevioletred\", 0xdb7093)\n      .set(\"papayawhip\", 0xffefd5)\n      .set(\"peachpuff\", 0xffdab9)\n      .set(\"peru\", 0xcd853f)\n      .set(\"pink\", 0xffc0cb)\n      .set(\"plum\", 0xdda0dd)\n      .set(\"powderblue\", 0xb0e0e6)\n      .set(\"purple\", 0x800080)\n      .set(\"rebeccapurple\", 0x663399)\n      .set(\"red\", 0xff0000)\n      .set(\"rosybrown\", 0xbc8f8f)\n      .set(\"royalblue\", 0x4169e1)\n      .set(\"saddlebrown\", 0x8b4513)\n      .set(\"salmon\", 0xfa8072)\n      .set(\"sandybrown\", 0xf4a460)\n      .set(\"seagreen\", 0x2e8b57)\n      .set(\"seashell\", 0xfff5ee)\n      .set(\"sienna\", 0xa0522d)\n      .set(\"silver\", 0xc0c0c0)\n      .set(\"skyblue\", 0x87ceeb)\n      .set(\"slateblue\", 0x6a5acd)\n      .set(\"slategray\", 0x708090)\n      .set(\"slategrey\", 0x708090)\n      .set(\"snow\", 0xfffafa)\n      .set(\"springgreen\", 0x00ff7f)\n      .set(\"steelblue\", 0x4682b4)\n      .set(\"tan\", 0xd2b48c)\n      .set(\"teal\", 0x008080)\n      .set(\"thistle\", 0xd8bfd8)\n      .set(\"tomato\", 0xff6347)\n      .set(\"turquoise\", 0x40e0d0)\n      .set(\"violet\", 0xee82ee)\n      .set(\"wheat\", 0xf5deb3)\n      .set(\"white\", 0xffffff)\n      .set(\"whitesmoke\", 0xf5f5f5)\n      .set(\"yellow\", 0xffff00)\n      .set(\"yellowgreen\", 0x9acd32);\n\n  function Rgb(r, g, b) {\n    this.r = Math.max(0, Math.min(255, Math.round(r)));\n    this.g = Math.max(0, Math.min(255, Math.round(g)));\n    this.b = Math.max(0, Math.min(255, Math.round(b)));\n  }\n\n  var _prototype = Rgb.prototype = new Color;\n\n  var darker = .7;\n\n  _prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  var brighter = 1 / darker;\n\n  _prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  _prototype.rgb = function() {\n    return this;\n  };\n\n  function format(r, g, b) {\n    if (isNaN(r)) r = 0;\n    if (isNaN(g)) g = 0;\n    if (isNaN(b)) b = 0;\n    return \"#\"\n        + (r < 16 ? \"0\" + r.toString(16) : r.toString(16))\n        + (g < 16 ? \"0\" + g.toString(16) : g.toString(16))\n        + (b < 16 ? \"0\" + b.toString(16) : b.toString(16));\n  }\n\n  _prototype.toString = function() {\n    return format(this.r, this.g, this.b);\n  };\n\n  var rgb = function(r, g, b) {\n    if (arguments.length === 1) {\n      if (!(r instanceof Color)) r = color(r);\n      if (r) {\n        r = r.rgb();\n        b = r.b;\n        g = r.g;\n        r = r.r;\n      } else {\n        r = g = b = NaN;\n      }\n    }\n    return new Rgb(r, g, b);\n  }\n\n  function rgbn(n) {\n    return rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff);\n  }\n\n  function Hsl(h, s, l) {\n    this.h = +h;\n    this.s = Math.max(0, Math.min(1, +s));\n    this.l = Math.max(0, Math.min(1, +l));\n  }\n\n  var __prototype = Hsl.prototype = new Color;\n\n  __prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };\n\n  __prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };/* From FvD 13.37, CSS Color Module Level 3 */\n\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  __prototype.rgb = function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l <= .5 ? l * (1 + s) : l + s - l * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2)\n    );\n  };\n\n  var hsl = function(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hsl) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Color)) h = color(h);\n        if (h) {\n          if (h instanceof Hsl) return h;\n          h = h.rgb();\n          var r = h.r / 255,\n              g = h.g / 255,\n              b = h.b / 255,\n              min = Math.min(r, g, b),\n              max = Math.max(r, g, b),\n              range = max - min;\n          l = (max + min) / 2;\n          if (range) {\n            s = l < .5 ? range / (max + min) : range / (2 - max - min);\n            if (r === max) h = (g - b) / range + (g < b) * 6;\n            else if (g === max) h = (b - r) / range + 2;\n            else h = (r - g) / range + 4;\n            h *= 60;\n          } else {\n            h = NaN;\n            s = l > 0 && l < 1 ? 0 : h;\n          }\n        } else {\n          h = s = l = NaN;\n        }\n      }\n    }\n    return new Hsl(h, s, l);\n  }\n\n  var reHex3 = /^#([0-9a-f]{3})$/,\n      reHex6 = /^#([0-9a-f]{6})$/,\n      reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/,\n      reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/,\n      reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\n  var color = function(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf))) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? rgb(m[1], m[2], m[3]) // rgb(255,0,0)\n        : (m = reRgbPercent.exec(format)) ? rgb(m[1] * 2.55, m[2] * 2.55, m[3] * 2.55) // rgb(100%,0%,0%)\n        : (m = reHslPercent.exec(format)) ? hsl(m[1], m[2] * .01, m[3] * .01) // hsl(120,50%,50%)\n        : named.has(format) ? rgbn(named.get(format))\n        : null;\n  }// Done lazily to avoid circular dependency between Color, Rgb and Hsl.\n\n  color.prototype = Color.prototype;\n  rgb.prototype = Rgb.prototype;\n  hsl.prototype = Hsl.prototype;\n\n  function Lab(l, a, b) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n  }\n\n  var ___prototype = Lab.prototype = new Color;\n\n  var Kn = 18;\n\n  ___prototype.brighter = function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  ___prototype.darker = function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  var Xn = 0.950470, // D65 standard referent\n      Yn = 1,\n      Zn = 1.088830,\n      t0 = 4 / 29,\n      t1 = 6 / 29,\n      t2 = 3 * t1 * t1,\n      t3 = t1 * t1 * t1;\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  ___prototype.rgb = function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z)\n    );\n  };\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  var deg2rad = Math.PI / 180;\n\n  function Hcl(h, c, l) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n  }\n\n  var ____prototype = Hcl.prototype = new Color;\n\n  ____prototype.brighter = function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k));\n  };\n\n  ____prototype.darker = function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k));\n  };\n\n  ____prototype.rgb = function() {\n    return lab(this).rgb();\n  };\n\n  var lab = function(l, a, b) {\n    if (arguments.length === 1) {\n      if (l instanceof Lab) {\n        b = l.b;\n        a = l.a;\n        l = l.l;\n      } else if (l instanceof Hcl) {\n        var h = l.h * deg2rad;\n        b = Math.sin(h) * l.c;\n        a = Math.cos(h) * l.c;\n        l = l.l;\n      } else {\n        if (!(l instanceof Rgb)) l = rgb(l);\n        var r = rgb2xyz(l.r),\n            g = rgb2xyz(l.g),\n            b = rgb2xyz(l.b),\n            x = xyz2lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn),\n            y = xyz2lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Yn),\n            z = xyz2lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Zn);\n        b = 200 * (y - z);\n        a = 500 * (x - y);\n        l = 116 * y - 16;\n      }\n    }\n    return new Lab(l, a, b);\n  }\n  lab.prototype = Lab.prototype;\n  var rad2deg = 180 / Math.PI;\n\n  var hcl = function(h, c, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hcl) {\n        l = h.l;\n        c = h.c;\n        h = h.h;\n      } else {\n        if (!(h instanceof Lab)) h = lab(h);\n        l = h.l;\n        c = Math.sqrt(h.a * h.a + h.b * h.b);\n        h = Math.atan2(h.b, h.a) * rad2deg;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Hcl(h, c, l);\n  }\n  hcl.prototype = Hcl.prototype;\n\n  function Cubehelix(h, s, l) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n  }\n\n  var prototype = Cubehelix.prototype = new Color;\n\n  prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  var gamma = 1, // Default gamma. TODO Customize.\n      A = -0.14861,\n      B = +1.78277,\n      C = -0.29227,\n      D = -0.90649,\n      E = +1.97294,\n      ED = E * D,\n      EB = E * B,\n      BC_DA = B * C - D * A;\n\n  var cubehelix = function(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Cubehelix) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Rgb)) h = rgb(h);\n        var r = h.r / 255, g = h.g / 255, b = h.b / 255;\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB);\n        var bl = b - l, k = (E * (g - l) - C * bl) / D, lgamma = Math.pow(l, gamma);\n        s = Math.sqrt(k * k + bl * bl) / (E * lgamma * (1 - lgamma)); // NaN if lgamma=0 or lgamma=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Cubehelix(h, s, l);\n  }\n\n  prototype.rgb = function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = Math.pow(this.l, gamma),\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh))\n    );\n  };\n  cubehelix.prototype = Cubehelix.prototype;\n\n  var interpolateCubehelixLong = function(a, b) {\n    a = cubehelix(a);\n    b = cubehelix(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n  var deltaHue = function(h, h0) {\n    var delta = (h - h0) % 360;\n    return delta + (delta > 180 ? -360 : delta < -180 ? 360 : 0);\n  }\n\n  var interpolateCubehelix = function(a, b) {\n    a = cubehelix(a);\n    b = cubehelix(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateHclLong = function(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateHcl = function(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateLab = function(a, b) {\n    a = lab(a);\n    b = lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function(t) {\n      a.l = al + bl * t;\n      a.a = aa + ba * t;\n      a.b = ab + bb * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateHslLong = function(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateHsl = function(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateRgb = function(a, b) {\n    a = rgb(a);\n    b = rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function(t) {\n      return format(Math.round(ar + br * t), Math.round(ag + bg * t), Math.round(ab + bb * t));\n    };\n  }\n\n  exports.color = color;\n  exports.rgb = rgb;\n  exports.hsl = hsl;\n  exports.lab = lab;\n  exports.hcl = hcl;\n  exports.cubehelix = cubehelix;\n  exports.interpolateRgb = interpolateRgb;\n  exports.interpolateHsl = interpolateHsl;\n  exports.interpolateHslLong = interpolateHslLong;\n  exports.interpolateLab = interpolateLab;\n  exports.interpolateHcl = interpolateHcl;\n  exports.interpolateHclLong = interpolateHclLong;\n  exports.interpolateCubehelix = interpolateCubehelix;\n  exports.interpolateCubehelixLong = interpolateCubehelixLong;\n\n}));\n},{}],7:[function(require,module,exports){\nvar util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n\n},{\"../time-units\":11,\"../util\":12}],8:[function(require,module,exports){\nvar gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n},{}],9:[function(require,module,exports){\nvar util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;\n},{\"../util\":12}],10:[function(require,module,exports){\nvar util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;\n},{\"./generate\":8,\"./import/type\":9,\"./util\":12}],11:[function(require,module,exports){\nvar STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n\n},{}],12:[function(require,module,exports){\n(function (process){\nvar Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n\n}).call(this,require('_process'))\n\n},{\"./time-units\":11,\"_process\":3,\"buffer\":2}],13:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  util = require('./util'),\n  vlfield = require('./field'),\n  vlenc = require('./enc'),\n  schema = require('./schema/schema');\n\nmodule.exports = (function() {\n  function Encoding(spec, theme) {\n    var defaults = schema.instantiate(),\n      specExtended = schema.util.merge(defaults, theme || {}, spec) ;\n\n    this._data = specExtended.data;\n    this._marktype = specExtended.marktype;\n    this._enc = specExtended.encoding;\n    this._config = specExtended.config;\n    this._filter = specExtended.filter;\n    // this._vega2 = true;\n  }\n\n  var proto = Encoding.prototype;\n\n  Encoding.fromShorthand = function(shorthand, data, config, theme) {\n    var c = consts.shorthand,\n        split = shorthand.split(c.delim),\n        marktype = split.shift().split(c.assign)[1].trim(),\n        enc = vlenc.fromShorthand(split);\n\n    return new Encoding({\n      data: data,\n      marktype: marktype,\n      encoding: enc,\n      config: config,\n      filter: []\n    }, theme);\n  };\n\n  Encoding.fromSpec = function(spec, theme) {\n    return new Encoding(spec, theme);\n  };\n\n  proto.toShorthand = function() {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + this._marktype +\n      c.delim + vlenc.shorthand(this._enc);\n  };\n\n  Encoding.shorthand = function (spec) {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + spec.marktype +\n      c.delim + vlenc.shorthand(spec.encoding);\n  };\n\n  Encoding.specFromShorthand = function(shorthand, data, config, excludeConfig) {\n    return Encoding.fromShorthand(shorthand, data, config).toSpec(excludeConfig);\n  };\n\n  proto.toSpec = function(excludeConfig, excludeData) {\n    var enc = util.duplicate(this._enc),\n      spec;\n\n    spec = {\n      marktype: this._marktype,\n      encoding: enc,\n      filter: this._filter\n    };\n\n    if (!excludeConfig) {\n      spec.config = util.duplicate(this._config);\n    }\n\n    if (!excludeData) {\n      spec.data = util.duplicate(this._data);\n    }\n\n    // remove defaults\n    var defaults = schema.instantiate();\n    return schema.util.subtract(spec, defaults);\n  };\n\n\n  proto.marktype = function() {\n    return this._marktype;\n  };\n\n  proto.is = function(m) {\n    return this._marktype === m;\n  };\n\n  proto.has = function(encType) {\n    // equivalent to calling vlenc.has(this._enc, encType)\n    return this._enc[encType].name !== undefined;\n  };\n\n  proto.enc = function(et) {\n    return this._enc[et];\n  };\n\n  proto.filter = function() {\n    var filterNull = [],\n      fields = this.fields(),\n      self = this;\n\n    util.forEach(fields, function(fieldList, fieldName) {\n      if (fieldName === '*') return; //count\n\n      if ((self.config('filterNull').Q && fieldList.containsType[Q]) ||\n          (self.config('filterNull').T && fieldList.containsType[T]) ||\n          (self.config('filterNull').O && fieldList.containsType[O]) ||\n          (self.config('filterNull').N && fieldList.containsType[N])) {\n        filterNull.push({\n          operands: [fieldName],\n          operator: 'notNull'\n        });\n      }\n    });\n\n    return filterNull.concat(this._filter);\n  };\n\n  // get \"field\" property for vega\n  proto.field = function(et, nodata, nofn) {\n    if (!this.has(et)) return null;\n    return vlfield.fieldRef(this._enc[et], {\n      nofn: nofn,\n      data: !this._vega2 && !nodata\n    });\n  };\n\n  proto.fieldRef = function(et, opt) {\n    opt = opt || {};\n    opt.data = !this._vega2 && (opt.data !== false);\n    return vlfield.fieldRef(this._enc[et], opt);\n  };\n\n  proto.fieldName = function(et) {\n    return this._enc[et].name;\n  };\n\n  /*\n   * return key-value pairs of field name and list of fields of that field name\n   */\n  proto.fields = function() {\n    return vlenc.fields(this._enc);\n  };\n\n  proto.fieldTitle = function(et) {\n    if (vlfield.isCount(this._enc[et])) {\n      return vlfield.count.displayName;\n    }\n    var timeUnit = this._enc[et].aggregate || this._enc[et].timeUnit || (this._enc[et].bin && 'bin');\n    if (timeUnit) {\n      return timeUnit.toUpperCase() + '(' + this._enc[et].name + ')';\n    } else {\n      return this._enc[et].name;\n    }\n  };\n\n  proto.scale = function(et) {\n    return this._enc[et].scale || {};\n  };\n\n  proto.axis = function(et) {\n    return this._enc[et].axis || {};\n  };\n\n  proto.band = function(et) {\n    return this._enc[et].band || {};\n  };\n\n  proto.bandSize = function(encType, useSmallBand) {\n    useSmallBand = useSmallBand ||\n      //isBandInSmallMultiples\n      (encType === Y && this.has(ROW) && this.has(Y)) ||\n      (encType === X && this.has(COL) && this.has(X));\n\n    // if band.size is explicitly specified, follow the specification, otherwise draw value from config.\n    return this.band(encType).size ||\n      this.config(useSmallBand ? 'smallBandSize' : 'largeBandSize');\n  };\n\n  proto.aggregate = function(et) {\n    return this._enc[et].aggregate;\n  };\n\n  // returns false if binning is disabled, otherwise an object with binning properties\n  proto.bin = function(et) {\n    var bin = this._enc[et].bin;\n    if (bin === {})\n      return false;\n    if (bin === true)\n      return {\n        maxbins: schema.MAXBINS_DEFAULT\n      };\n    return bin;\n  };\n\n  proto.legend = function(et) {\n    return this._enc[et].legend;\n  };\n\n  proto.value = function(et) {\n    return this._enc[et].value;\n  };\n\n  proto.timeUnit = function(et) {\n    return this._enc[et].timeUnit;\n  };\n\n  proto.sort = function(et, stats) {\n    var sort = this._enc[et].sort,\n      enc = this._enc,\n      isTypes = vlfield.isTypes;\n\n    if ((!sort || sort.length===0) &&\n        // FIXME\n        Encoding.toggleSort.support({encoding:this._enc}, stats, true) && //HACK\n        this.config('toggleSort') === Q\n      ) {\n      var qField = isTypes(enc.x, [N, O]) ? enc.y : enc.x;\n\n      if (isTypes(enc[et], [N, O])) {\n        sort = [{\n          name: qField.name,\n          aggregate: qField.aggregate,\n          type: qField.type,\n          reverse: true\n        }];\n      }\n    }\n\n    return sort;\n  };\n\n  proto.length = function() {\n    return util.keys(this._enc).length;\n  };\n\n  proto.map = function(f) {\n    return vlenc.map(this._enc, f);\n  };\n\n  proto.reduce = function(f, init) {\n    return vlenc.reduce(this._enc, f, init);\n  };\n\n  proto.forEach = function(f) {\n    return vlenc.forEach(this._enc, f);\n  };\n\n  proto.type = function(et) {\n    return this.has(et) ? this._enc[et].type : null;\n  };\n\n  proto.role = function(et) {\n    return this.has(et) ? vlfield.role(this._enc[et]) : null;\n  };\n\n  proto.text = function(prop) {\n    var text = this._enc[TEXT].text;\n    return prop ? text[prop] : text;\n  };\n\n  proto.font = function(prop) {\n    var font = this._enc[TEXT].font;\n    return prop ? font[prop] : font;\n  };\n\n  proto.isType = function(et, type) {\n    var field = this.enc(et);\n    return field && vlfield.isType(field, type);\n  };\n\n  proto.isTypes = function(et, type) {\n    var field = this.enc(et);\n    return field && vlfield.isTypes(field, type);\n  };\n\n  Encoding.isOrdinalScale = function(encoding, encType) {\n    return vlfield.isOrdinalScale(encoding.enc(encType));\n  };\n\n  Encoding.isDimension = function(encoding, encType) {\n    return vlfield.isDimension(encoding.enc(encType));\n  };\n\n  Encoding.isMeasure = function(encoding, encType) {\n    return vlfield.isMeasure(encoding.enc(encType));\n  };\n\n  proto.isOrdinalScale = function(encType) {\n    return this.has(encType) && Encoding.isOrdinalScale(this, encType);\n  };\n\n  proto.isDimension = function(encType) {\n    return this.has(encType) && Encoding.isDimension(this, encType);\n  };\n\n  proto.isMeasure = function(encType) {\n    return this.has(encType) && Encoding.isMeasure(this, encType);\n  };\n\n  proto.isAggregate = function() {\n    return vlenc.isAggregate(this._enc);\n  };\n\n  Encoding.isAggregate = function(spec) {\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.alwaysNoOcclusion = function(spec) {\n    // FIXME raw OxQ with # of rows = # of O\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.isStack = function(spec) {\n    // FIXME update this once we have control for stack ...\n    return (spec.marktype === 'bar' || spec.marktype === 'area') &&\n      spec.encoding.color;\n  };\n\n  proto.isStack = function() {\n    // FIXME update this once we have control for stack ...\n    return (this.is('bar') || this.is('area')) && this.has('color');\n  };\n\n  proto.cardinality = function(encType, stats) {\n    return vlfield.cardinality(this.enc(encType), stats, this.config('filterNull'));\n  };\n\n  proto.isRaw = function() {\n    return !this.isAggregate();\n  };\n\n  proto.data = function(name) {\n    return name ? this._data[name] : this._data;\n  };\n\n   // returns whether the encoding has values embedded\n  proto.hasValues = function() {\n    var vals = this.data('values');\n    return vals && vals.length;\n  };\n\n  proto.config = function(name) {\n    return this._config[name];\n  };\n\n  Encoding.transpose = function(spec) {\n    var oldenc = spec.encoding,\n      enc = util.duplicate(spec.encoding);\n    enc.x = oldenc.y;\n    enc.y = oldenc.x;\n    enc.row = oldenc.col;\n    enc.col = oldenc.row;\n    spec.encoding = enc;\n    return spec;\n  };\n\n  // FIXME: REMOVE everything below here\n\n  Encoding.toggleSort = function(spec) {\n    spec.config = spec.config || {};\n    spec.config.toggleSort = spec.config.toggleSort === Q ? N : Q;\n    return spec;\n  };\n\n\n  Encoding.toggleSort.direction = function(spec) {\n    if (!Encoding.toggleSort.support(spec)) { return; }\n    var enc = spec.encoding;\n    return enc.x.type === N ? 'x' : 'y';\n  };\n\n  Encoding.toggleSort.mode = function(spec) {\n    return spec.config.toggleSort;\n  };\n\n  Encoding.toggleSort.support = function(spec, stats) {\n    var enc = spec.encoding,\n      isTypes = vlfield.isTypes;\n\n    if (vlenc.has(enc, ROW) || vlenc.has(enc, COL) ||\n      !vlenc.has(enc, X) || !vlenc.has(enc, Y) ||\n      !Encoding.alwaysNoOcclusion(spec, stats)) {\n      return false;\n    }\n\n    return ( isTypes(enc.x, [N,O]) && vlfield.isMeasure(enc.y)) ? 'x' :\n      ( isTypes(enc.y, [N,O]) && vlfield.isMeasure(enc.x)) ? 'y' : false;\n  };\n\n  Encoding.toggleFilterNullO = function(spec) {\n    spec.config = spec.config || {};\n    spec.config.filterNull = spec.config.filterNull || { //FIXME\n      T: true,\n      Q: true\n    };\n    spec.config.filterNull.O = !spec.config.filterNull.O;\n    return spec;\n  };\n\n  Encoding.toggleFilterNullO.support = function(spec, stats) {\n    var fields = vlenc.fields(spec.encoding);\n    for (var fieldName in fields) {\n      var fieldList = fields[fieldName];\n      if (fieldList.containsType.O && fieldName in stats && stats[fieldName].nulls > 0) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  return Encoding;\n})();\n\n},{\"./consts\":31,\"./enc\":33,\"./field\":34,\"./globals\":35,\"./schema/schema\":36,\"./util\":38}],14:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar util = require('../util');\n\nmodule.exports = aggregates;\n\nfunction aggregates(dataTable, encoding, opt) {\n  opt = opt || {};\n\n  var dims = {}, meas = {}, detail = {}, facets = {};\n\n  encoding.forEach(function(field, encType) {\n    if (field.aggregate) {\n      if (field.aggregate === 'count') {\n        meas.count = {op: 'count', field: '*'};\n      }else {\n        meas[field.aggregate + '|'+ field.name] = {\n          op: field.aggregate,\n          field: encoding.fieldRef(encType, {nofn: true})\n        };\n      }\n    } else {\n      dims[field.name] = encoding.field(encType);\n      if (encType == ROW || encType == COL) {\n        facets[field.name] = dims[field.name];\n      }else if (encType !== X && encType !== Y) {\n        detail[field.name] = dims[field.name];\n      }\n    }\n  });\n  dims = util.vals(dims);\n  meas = util.vals(meas);\n\n  if (meas.length > 0) {\n    if (!dataTable.transform) dataTable.transform = [];\n    dataTable.transform.push({\n      type: 'aggregate',\n      groupby: dims,\n      fields: meas\n    });\n  }\n  return {\n    details: util.vals(detail),\n    dims: dims,\n    facets: util.vals(facets),\n    aggregated: meas.length > 0\n  };\n}\n\n},{\"../globals\":35,\"../util\":38}],15:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter,\n  getter = util.getter,\n  time = require('./time');\n\nvar axis = module.exports = {};\n\naxis.names = function(props) {\n  return util.keys(util.keys(props).reduce(function(a, x) {\n    var s = props[x].scale;\n    if (s === X || s === Y) a[props[x].scale] = 1;\n    return a;\n  }, {}));\n};\n\naxis.defs = function(names, encoding, layout, stats, opt) {\n  return names.reduce(function(a, name) {\n    a.push(axis.def(name, encoding, layout, stats, opt));\n    return a;\n  }, []);\n};\n\naxis.def = function(name, encoding, layout, stats, opt) {\n  var type = name;\n  var isCol = name == COL, isRow = name == ROW;\n  var rowOffset = axisTitleOffset(encoding, layout, Y) + 20,\n    cellPadding = layout.cellPadding;\n\n\n  if (isCol) type = 'x';\n  if (isRow) type = 'y';\n\n  var def = {\n    type: type,\n    scale: name\n  };\n\n  if (encoding.axis(name).grid) {\n    def.grid = true;\n    def.layer = 'back';\n\n    if (isCol) {\n      // set grid property -- put the lines on the right the cell\n      setter(def, ['properties', 'grid'], {\n        x: {\n          offset: layout.cellWidth * (1+ cellPadding/2.0),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'col'\n        },\n        y: {\n          value: -layout.cellHeight * (cellPadding/2),\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        opacity: { value: encoding.config('cellGridOpacity') }\n      });\n    } else if (isRow) {\n      // set grid property -- put the lines on the top\n      setter(def, ['properties', 'grid'], {\n        y: {\n          offset: -layout.cellHeight * (cellPadding/2),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'row'\n        },\n        x: {\n          value: rowOffset\n        },\n        x2: {\n          offset: rowOffset + (layout.cellWidth * 0.05),\n          // default value(s) -- vega doesn't do recursive merge\n          group: 'mark.group.width',\n          mult: 1\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        opacity: { value: encoding.config('cellGridOpacity') }\n      });\n    } else {\n      setter(def, ['properties', 'grid'], {\n        stroke: { value: encoding.config('gridColor') },\n        opacity: { value: encoding.config('gridOpacity') }\n      });\n    }\n  }\n\n  if (encoding.axis(name).title) {\n    def = axis_title(def, name, encoding, layout, opt);\n  }\n\n  if (isRow || isCol) {\n    setter(def, ['properties', 'ticks'], {\n      opacity: {value: 0}\n    });\n    setter(def, ['properties', 'majorTicks'], {\n      opacity: {value: 0}\n    });\n    setter(def, ['properties', 'axis'], {\n      opacity: {value: 0}\n    });\n  }\n\n  if (isCol) {\n    def.orient = 'top';\n  }\n\n  if (isRow) {\n    def.offset = rowOffset;\n  }\n\n  if (name == X) {\n    if (encoding.has(Y) && encoding.isOrdinalScale(Y) && encoding.cardinality(Y, stats) > 30) {\n      def.orient = 'top';\n    }\n\n    if (encoding.isDimension(X) || encoding.isType(X, T)) {\n      setter(def, ['properties','labels'], {\n        angle: {value: 270},\n        align: {value: 'right'},\n        baseline: {value: 'middle'}\n      });\n    } else { // Q\n      def.ticks = 5;\n    }\n  }\n\n  def = axis_labels(def, name, encoding, layout, opt);\n\n  return def;\n};\n\nfunction axis_title(def, name, encoding, layout, opt) {\n  // jshint unused:false\n\n  var maxlength = null,\n    fieldTitle = encoding.fieldTitle(name);\n  if (name===X) {\n    maxlength = layout.cellWidth / encoding.config('characterWidth');\n  } else if (name === Y) {\n    maxlength = layout.cellHeight / encoding.config('characterWidth');\n  }\n\n  def.title = maxlength ? util.truncate(fieldTitle, maxlength) : fieldTitle;\n\n  if (name === ROW) {\n    setter(def, ['properties','title'], {\n      angle: {value: 0},\n      align: {value: 'right'},\n      baseline: {value: 'middle'},\n      dy: {value: (-layout.height/2) -20}\n    });\n  }\n\n  def.titleOffset = axisTitleOffset(encoding, layout, name);\n  return def;\n}\n\nfunction axis_labels(def, name, encoding, layout, opt) {\n  // jshint unused:false\n\n  var timeUnit;\n  // add custom label for time type\n  if (encoding.isType(name, T) && (timeUnit = encoding.timeUnit(name)) && (time.hasScale(timeUnit))) {\n    setter(def, ['properties','labels','text','scale'], 'time-'+ timeUnit);\n  }\n\n  var textTemplatePath = ['properties','labels','text','template'];\n  if (encoding.axis(name).format) {\n    def.format = encoding.axis(name).format;\n  } else if (encoding.isType(name, Q)) {\n    setter(def, textTemplatePath, '{{data | number:\\'.3s\\'}}');\n  } else if (encoding.isType(name, T)) {\n    if (!encoding.timeUnit(name)) {\n      setter(def, textTemplatePath, '{{data | time:\\'%Y-%m-%d\\'}}');\n    } else if (encoding.timeUnit(name) === 'year') {\n      setter(def, textTemplatePath, '{{data | number:\\'d\\'}}');\n    }\n  } else if (encoding.isTypes(name, [N, O]) && encoding.axis(name).maxLabelLength) {\n    setter(def, textTemplatePath, '{{data | truncate:' + encoding.axis(name).maxLabelLength + '}}');\n  } else {\n    // nothing\n  }\n\n  return def;\n}\n\nfunction axisTitleOffset(encoding, layout, name) {\n  var value = encoding.axis(name).titleOffset;\n  if (value) {\n    return value;\n  }\n  switch (name) {\n    case ROW: return 0;\n    case COL: return 35;\n  }\n  return getter(layout, [name, 'axisTitleOffset']);\n}\n\n},{\"../globals\":35,\"../util\":38,\"./time\":30}],16:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nmodule.exports = binning;\n\nfunction binning(dataTable, encoding, opt) {\n  opt = opt || {};\n\n  if (!dataTable.transform) dataTable.transform = [];\n\n  encoding.forEach(function(field, encType) {\n    if (encoding.bin(encType)) {\n      dataTable.transform.push({\n        type: 'bin',\n        field: encoding.field(encType, false, /*nofn*/ true),\n        output: encoding.field(encType),\n        maxbins: encoding.bin(encType).maxbins\n      });\n    }\n  });\n\n  return dataTable;\n}\n\n},{\"../globals\":35}],17:[function(require,module,exports){\n'use strict';\n\nvar summary = module.exports = require('datalib/src/stats').summary;\n\nrequire('../globals');\n\nvar compiler = module.exports = {};\n\nvar Encoding = require('../Encoding'),\n  axis = compiler.axis = require('./axis'),\n  filter = compiler.filter = require('./filter'),\n  legend = compiler.legend = require('./legend'),\n  marks = compiler.marks = require('./marks'),\n  scale = compiler.scale = require('./scale');\n\ncompiler.aggregate = require('./aggregate');\ncompiler.bin = require('./bin');\ncompiler.facet = require('./facet');\ncompiler.group = require('./group');\ncompiler.layout = require('./layout');\ncompiler.sort = require('./sort');\ncompiler.stack = require('./stack');\ncompiler.style = require('./style');\ncompiler.subfacet = require('./subfacet');\ncompiler.template = require('./template');\ncompiler.time = require('./time');\n\ncompiler.compile = function (spec, stats, theme) {\n  return compiler.compileEncoding(Encoding.fromSpec(spec, theme), stats);\n};\n\ncompiler.shorthand = function (shorthand, stats, config, theme) {\n  return compiler.compileEncoding(Encoding.fromShorthand(shorthand, config, theme), stats);\n};\n\ncompiler.compileEncoding = function (encoding, stats) {\n  // no need to pass stats if you pass in the data\n  if (!stats && encoding.hasValues()) {\n    stats = summary(encoding.data('values')).reduce(function(s, p) {\n      s[p.field] = p;\n      return s;\n    }, {});\n  }\n\n  var layout = compiler.layout(encoding, stats),\n    spec = compiler.template(encoding, layout, stats);\n\n  // .data related stuff\n  var rawTable = spec.data[0],\n    dataTable = spec.data[1];\n\n  rawTable = filter.addFilters(rawTable, encoding); // modify rawTable\n  dataTable = compiler.bin(dataTable, encoding);     // modify dataTable\n  spec = compiler.time(spec, encoding);              // modify dataTable, add scales\n  var aggResult = compiler.aggregate(dataTable, encoding); // modify dataTable\n  var sorting = compiler.sort(spec.data, encoding, stats); // append new data\n\n  // marks\n  var style = compiler.style(encoding, stats),\n    group = spec.marks[0],\n    mark = marks[encoding.marktype()],\n    mdefs = marks.def(mark, encoding, layout, style),\n    mdef = mdefs[0];  // TODO: remove this dirty hack by refactoring the whole flow\n\n  for (var i = 0; i < mdefs.length; i++) {\n    group.marks.push(mdefs[i]);\n  }\n\n  var lineType = marks[encoding.marktype()].line;\n\n  // handle subfacets\n\n  var details = aggResult.details,\n    hasDetails = details && details.length > 0,\n    stack = hasDetails && compiler.stack(spec.data, encoding, mdef, aggResult.facets); // modify spec.data, mdef.{from,properties}\n\n  if (hasDetails && (stack || lineType)) {\n    //subfacet to group stack / line together in one group\n    compiler.subfacet(group, mdef, details, stack, encoding);\n  }\n\n  // auto-sort line/area values\n  //TODO(kanitw): have some config to turn off auto-sort for line (for line chart that encodes temporal information)\n  if (lineType) {\n    var f = (encoding.isMeasure(X) && encoding.isDimension(Y)) ? Y : X;\n    if (!mdef.from) mdef.from = {};\n    // TODO: why - ?\n    mdef.from.transform = [{type: 'sort', by: '-' + encoding.field(f)}];\n  }\n\n  // Small Multiples\n  if (encoding.has(ROW) || encoding.has(COL)) {\n    spec = compiler.facet(group, encoding, layout, style, sorting, spec, mdef, stack, stats);\n    spec.legends = legend.defs(encoding);\n  } else {\n    group.scales = scale.defs(scale.names(mdef.properties.update), encoding, layout, stats, style, sorting, {stack: stack});\n    group.axes = axis.defs(axis.names(mdef.properties.update), encoding, layout, stats);\n    group.legends = legend.defs(encoding);\n  }\n\n  filter.filterLessThanZero(dataTable, encoding);\n\n  return spec;\n};\n\n\n},{\"../Encoding\":13,\"../globals\":35,\"./aggregate\":14,\"./axis\":15,\"./bin\":16,\"./facet\":18,\"./filter\":19,\"./group\":20,\"./layout\":21,\"./legend\":22,\"./marks\":23,\"./scale\":24,\"./sort\":25,\"./stack\":26,\"./style\":27,\"./subfacet\":28,\"./template\":29,\"./time\":30,\"datalib/src/stats\":10}],18:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar util = require('../util');\n\nvar axis = require('./axis'),\n  groupdef = require('./group').def,\n  scale = require('./scale');\n\nmodule.exports = faceting;\n\nfunction faceting(group, encoding, layout, style, sorting, spec, mdef, stack, stats) {\n  var enter = group.properties.enter;\n  var facetKeys = [], cellAxes = [], from, axesGrp;\n\n  var hasRow = encoding.has(ROW), hasCol = encoding.has(COL);\n\n  enter.fill = {value: encoding.config('cellBackgroundColor')};\n\n  //move \"from\" to cell level and add facet transform\n  group.from = {data: group.marks[0].from.data};\n\n  // Hack, this needs to be refactored\n  for (var i = 0; i < group.marks.length; i++) {\n    var mark = group.marks[i];\n    if (mark.from.transform) {\n      delete mark.from.data; //need to keep transform for subfacetting case\n    } else {\n      delete mark.from;\n    }\n  }\n\n  if (hasRow) {\n    if (!encoding.isDimension(ROW)) {\n      util.error('Row encoding should be ordinal.');\n    }\n    enter.y = {scale: ROW, field: 'keys.' + facetKeys.length};\n    enter.height = {'value': layout.cellHeight}; // HACK\n\n    facetKeys.push(encoding.field(ROW));\n\n    if (hasCol) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', keys: [encoding.field(COL)]});\n    }\n\n    axesGrp = groupdef('x-axes', {\n        axes: encoding.has(X) ? axis.defs(['x'], encoding, layout, stats) : undefined,\n        x: hasCol ? {scale: COL, field: 'keys.0'} : {value: 0},\n        width: hasCol && {'value': layout.cellWidth}, //HACK?\n        from: from\n      });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push.apply(spec.axes, axis.defs(['row'], encoding, layout, stats));\n  } else { // doesn't have row\n    if (encoding.has(X)) {\n      //keep x axis in the cell\n      cellAxes.push.apply(cellAxes, axis.defs(['x'], encoding, layout, stats));\n    }\n  }\n\n  if (hasCol) {\n    if (!encoding.isDimension(COL)) {\n      util.error('Col encoding should be ordinal.');\n    }\n    enter.x = {scale: COL, field: 'keys.' + facetKeys.length};\n    enter.width = {'value': layout.cellWidth}; // HACK\n\n    facetKeys.push(encoding.field(COL));\n\n    if (hasRow) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', keys: [encoding.field(ROW)]});\n    }\n\n    axesGrp = groupdef('y-axes', {\n      axes: encoding.has(Y) ? axis.defs(['y'], encoding, layout, stats) : undefined,\n      y: hasRow && {scale: ROW, field: 'keys.0'},\n      x: hasRow && {value: 0},\n      height: hasRow && {'value': layout.cellHeight}, //HACK?\n      from: from\n    });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push.apply(spec.axes, axis.defs(['col'], encoding, layout, stats));\n  } else { // doesn't have col\n    if (encoding.has(Y)) {\n      cellAxes.push.apply(cellAxes, axis.defs(['y'], encoding, layout, stats));\n    }\n  }\n\n  // assuming equal cellWidth here\n  // TODO: support heterogenous cellWidth (maybe by using multiple scales?)\n  spec.scales = (spec.scales || []).concat(scale.defs(\n    scale.names(enter).concat(scale.names(mdef.properties.update)),\n    encoding,\n    layout,\n    stats,\n    style,\n    sorting,\n    {stack: stack, facet: true}\n  )); // row/col scales + cell scales\n\n  if (cellAxes.length > 0) {\n    group.axes = cellAxes;\n  }\n\n  // add facet transform\n  var trans = (group.from.transform || (group.from.transform = []));\n  trans.unshift({type: 'facet', keys: facetKeys});\n\n  return spec;\n}\n\n},{\"../globals\":35,\"../util\":38,\"./axis\":15,\"./group\":20,\"./scale\":24}],19:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar filter = module.exports = {};\n\nvar BINARY = {\n  '>':  true,\n  '>=': true,\n  '=':  true,\n  '!=': true,\n  '<':  true,\n  '<=': true\n};\n\nfilter.addFilters = function(rawTable, encoding) {\n  var filters = encoding.filter();  // apply filters to raw data before aggregation\n\n  if (!rawTable.transform)\n    rawTable.transform = [];\n\n  // add custom filters\n  for (var i in filters) {\n    var filter = filters[i];\n\n    var condition = '';\n    var operator = filter.operator;\n    var operands = filter.operands;\n\n    var d = 'd.' + (encoding._vega2 ? '' : 'data.');\n\n    if (BINARY[operator]) {\n      // expects a field and a value\n      if (operator === '=') {\n        operator = '==';\n      }\n\n      var op1 = operands[0];\n      var op2 = operands[1];\n      condition = d + op1 + operator + op2;\n    } else if (operator === 'notNull') {\n      // expects a number of fields\n      for (var j in operands) {\n        condition += d + operands[j] + '!==null';\n        if (j < operands.length - 1) {\n          condition += ' && ';\n        }\n      }\n    } else {\n      console.warn('Unsupported operator: ', operator);\n    }\n\n    rawTable.transform.push({\n      type: 'filter',\n      test: condition\n    });\n  }\n\n  return rawTable;\n};\n\n// remove less than 0 values if we use log function\nfilter.filterLessThanZero = function(dataTable, encoding) {\n  encoding.forEach(function(field, encType) {\n    if (encoding.scale(encType).type === 'log') {\n      dataTable.transform.push({\n        type: 'filter',\n        test: 'd.' + encoding.field(encType) + '>0'\n      });\n    }\n  });\n};\n\n\n},{\"../globals\":35}],20:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  def: groupdef\n};\n\nfunction groupdef(name, opt) {\n  opt = opt || {};\n  return {\n    _name: name || undefined,\n    type: 'group',\n    from: opt.from,\n    properties: {\n      enter: {\n        x: opt.x || undefined,\n        y: opt.y || undefined,\n        width: opt.width || {group: 'width'},\n        height: opt.height || {group: 'height'}\n      }\n    },\n    scales: opt.scales || undefined,\n    axes: opt.axes || undefined,\n    marks: opt.marks || []\n  };\n}\n\n},{}],21:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter;\n\nmodule.exports = vllayout;\n\nfunction vllayout(encoding, stats) {\n  var layout = box(encoding, stats);\n  layout = offset(encoding, stats, layout);\n  return layout;\n}\n\n/*\n  HACK to set chart size\n  NOTE: this fails for plots driven by derived values (e.g., aggregates)\n  One solution is to update Vega to support auto-sizing\n  In the meantime, auto-padding (mostly) does the trick\n */\nfunction box(encoding, stats) {\n  var hasRow = encoding.has(ROW),\n      hasCol = encoding.has(COL),\n      hasX = encoding.has(X),\n      hasY = encoding.has(Y),\n      marktype = encoding.marktype();\n\n  // FIXME/HACK we need to take filter into account\n  var xCardinality = hasX && encoding.isDimension(X) ? encoding.cardinality(X, stats) : 1,\n    yCardinality = hasY && encoding.isDimension(Y) ? encoding.cardinality(Y, stats) : 1;\n\n  var useSmallBand = xCardinality > encoding.config('largeBandMaxCardinality') ||\n    yCardinality > encoding.config('largeBandMaxCardinality');\n\n  var cellWidth, cellHeight, cellPadding = encoding.config('cellPadding');\n\n  // set cellWidth\n  if (hasX) {\n    if (encoding.isOrdinalScale(X)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellWidth = (xCardinality + encoding.band(X).padding) * encoding.bandSize(X, useSmallBand);\n    } else {\n      cellWidth = hasCol || hasRow ? encoding.enc(COL).width :  encoding.config('singleWidth');\n    }\n  } else {\n    if (marktype === TEXT) {\n      cellWidth = encoding.config('textCellWidth');\n    } else {\n      cellWidth = encoding.bandSize(X);\n    }\n  }\n\n  // set cellHeight\n  if (hasY) {\n    if (encoding.isOrdinalScale(Y)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellHeight = (yCardinality + encoding.band(Y).padding) * encoding.bandSize(Y, useSmallBand);\n    } else {\n      cellHeight = hasCol || hasRow ? encoding.enc(ROW).height :  encoding.config('singleHeight');\n    }\n  } else {\n    cellHeight = encoding.bandSize(Y);\n  }\n\n  // Cell bands use rangeBands(). There are n-1 padding.  Outerpadding = 0 for cells\n\n  var width = cellWidth, height = cellHeight;\n  if (hasCol) {\n    var colCardinality = encoding.cardinality(COL, stats);\n    width = cellWidth * ((1 + cellPadding) * (colCardinality - 1) + 1);\n  }\n  if (hasRow) {\n    var rowCardinality =  encoding.cardinality(ROW, stats);\n    height = cellHeight * ((1 + cellPadding) * (rowCardinality - 1) + 1);\n  }\n\n  return {\n    // width and height of the whole cell\n    cellWidth: cellWidth,\n    cellHeight: cellHeight,\n    cellPadding: cellPadding,\n    // width and height of the chart\n    width: width,\n    height: height,\n    // information about x and y, such as band size\n    x: {useSmallBand: useSmallBand},\n    y: {useSmallBand: useSmallBand}\n  };\n}\n\nfunction getMaxLength(encoding, stats, et) {\n  // FIXME determine constant for Q and T in a nicer way\n  if (encoding.bin(et)) {\n    return 5;\n  } else if (encoding.isType(et, Q)) {\n    return 10;\n  } else if (encoding.isType(et, T)) {\n    return 15;\n  } else if (encoding.isTypes(et, [N, O]) && encoding.axis(et).maxLabelLength) {\n    return Math.min(stats[encoding.fieldName(et)].max, encoding.axis(et).maxLabelLength);\n  }\n  return stats[encoding.fieldName(et)].max;\n}\n\nfunction offset(encoding, stats, layout) {\n  [X, Y].forEach(function (x) {\n    var maxLength;\n    if (encoding.isDimension(x) || encoding.isType(x, T)) {\n      maxLength =  getMaxLength(encoding, stats, x);\n    } else if (encoding.aggregate(x) === 'count') {\n      //assign default value for count as it won't have stats\n      maxLength =  3;\n    } else if (encoding.isType(x, Q)) {\n      if (x===X) {\n        maxLength = 3;\n      } else { // Y\n        //assume that default formating is always shorter than 7\n        maxLength = Math.min(getMaxLength(encoding, stats, x), 7);\n      }\n    } else {\n      // nothing\n    }\n    setter(layout,[x, 'axisTitleOffset'], encoding.config('characterWidth') *  maxLength + 20);\n  });\n  return layout;\n}\n\n},{\"../globals\":35,\"../util\":38}],22:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar time = require('./time');\n\nvar legend = module.exports = {};\n\nlegend.defs = function(encoding) {\n  var defs = [];\n  // TODO: support alpha\n\n  if (encoding.has(COLOR) && encoding.legend(COLOR)) {\n    defs.push(legend.def(COLOR, encoding, {\n      fill: COLOR,\n      orient: 'right'\n    }));\n  }\n\n  if (encoding.has(SIZE) && encoding.legend(SIZE)) {\n    defs.push(legend.def(SIZE, encoding, {\n      size: SIZE,\n      orient: defs.length === 1 ? 'left' : 'right'\n    }));\n  }\n\n  if (encoding.has(SHAPE) && encoding.legend(SHAPE)) {\n    if (defs.length === 2) {\n      // TODO: fix this\n      console.error('Vega-lite currently only supports two legends');\n      return defs;\n    }\n    defs.push(legend.def(SHAPE, encoding, {\n      shape: SHAPE,\n      orient: defs.length === 1 ? 'left' : 'right'\n    }));\n  }\n\n  return defs;\n};\n\nlegend.def = function(name, encoding, props) {\n  var def = props, timeUnit;\n\n  def.title = encoding.fieldTitle(name);\n\n  if (encoding.isType(name, T) && (timeUnit = encoding.timeUnit(name)) &&\n    time.hasScale(timeUnit)) {\n    var properties = def.properties = def.properties || {},\n      labels = properties.labels = properties.labels || {},\n      text = labels.text = labels.text || {};\n\n    text.scale = 'time-'+ timeUnit;\n  }\n\n  return def;\n};\n\n},{\"../globals\":35,\"./time\":30}],23:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar marks = module.exports = {};\n\nmarks.def = function(mark, encoding, layout, style) {\n  var defs = [];\n\n  // to add a background to text, we need to add it before the text\n  if (encoding.marktype() === TEXT && encoding.has(COLOR)) {\n    var bg = {\n      x: {value: 0},\n      y: {value: 0},\n      x2: {value: layout.cellWidth},\n      y2: {value: layout.cellHeight},\n      fill: {scale: COLOR, field: encoding.field(COLOR)}\n    };\n    defs.push({\n      type: 'rect',\n      from: {data: TABLE},\n      properties: {enter: bg, update: bg}\n    });\n  }\n\n  // add the mark def for the main thing\n  var p = mark.prop(encoding, layout, style);\n  defs.push({\n    type: mark.type,\n    from: {data: TABLE},\n    properties: {enter: p, update: p}\n  });\n\n  return defs;\n};\n\nmarks.bar = {\n  type: 'rect',\n  stack: true,\n  prop: bar_props,\n  requiredEncoding: ['x', 'y'],\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1}\n};\n\nmarks.line = {\n  type: 'line',\n  line: true,\n  prop: line_props,\n  requiredEncoding: ['x', 'y'],\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1, detail:1}\n};\n\nmarks.area = {\n  type: 'area',\n  stack: true,\n  line: true,\n  requiredEncoding: ['x', 'y'],\n  prop: area_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1}\n};\n\nmarks.tick = {\n  type: 'rect',\n  prop: tick_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1, detail: 1}\n};\n\nmarks.circle = {\n  type: 'symbol',\n  prop: filled_point_props('circle'),\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1, detail: 1}\n};\n\nmarks.square = {\n  type: 'symbol',\n  prop: filled_point_props('square'),\n  supportedEncoding: marks.circle.supportedEncoding\n};\n\nmarks.point = {\n  type: 'symbol',\n  prop: point_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1, shape: 1, detail: 1}\n};\n\nmarks.text = {\n  type: 'text',\n  prop: text_props,\n  requiredEncoding: ['text'],\n  supportedEncoding: {row: 1, col: 1, size: 1, color: 1, alpha: 1, text: 1}\n};\n\nfunction bar_props(e, layout, style) {\n  // jshint unused:false\n\n  var p = {};\n\n  // x's and width\n  if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (!e.has(Y) || e.isDimension(Y)) {\n      p.x2 = {value: 0};\n    }\n  } else {\n    if (e.has(X)) { // is ordinal\n       p.xc = {scale: X, field: e.field(X)};\n    } else {\n       p.x = {value: 0, offset: e.config('singleBarOffset')};\n    }\n  }\n\n  // width\n  if (!p.x2) {\n    if (!e.has(X) || e.isOrdinalScale(X)) { // no X or X is ordinal\n      if (e.has(SIZE)) {\n        p.width = {scale: SIZE, field: e.field(SIZE)};\n      } else {\n        p.width = {\n          value: e.bandSize(X, layout.x.useSmallBand),\n          offset: -1\n        };\n      }\n    } else { // X is Quant or Time Scale\n      p.width = {value: 2};\n    }\n  }\n\n  // y's & height\n  if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    p.y2 = {group: 'height'};\n  } else {\n    if (e.has(Y)) { // is ordinal\n      p.yc = {scale: Y, field: e.field(Y)};\n    } else {\n      p.y2 = {group: 'height', offset: -e.config('singleBarOffset')};\n    }\n\n    if (e.has(SIZE)) {\n      p.height = {scale: SIZE, field: e.field(SIZE)};\n    } else {\n      p.height = {\n        value: e.bandSize(Y, layout.y.useSmallBand),\n        offset: -1\n      };\n    }\n  }\n\n\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  return p;\n}\n\nfunction point_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.size = {scale: SIZE, field: e.field(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.size = {value: e.value(SIZE)};\n  }\n\n  // shape\n  if (e.has(SHAPE)) {\n    p.shape = {scale: SHAPE, field: e.field(SHAPE)};\n  } else if (!e.has(SHAPE)) {\n    p.shape = {value: e.value(SHAPE)};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.stroke = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.stroke = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else if (!e.has(COLOR)) {\n    p.opacity = {value: style.opacity};\n  }\n\n  p.strokeWidth = {value: e.config('strokeWidth')};\n\n  return p;\n}\n\nfunction line_props(e,layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {group: 'height'};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.stroke = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.stroke = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  p.strokeWidth = {value: e.config('strokeWidth')};\n\n  return p;\n}\n\nfunction area_props(e, layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (e.isDimension(Y)) {\n      p.x2 = {scale: X, value: 0};\n      p.orient = {value: 'horizontal'};\n    }\n  } else if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    p.y2 = {scale: Y, value: 0};\n  } else if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else {\n    p.y = {group: 'height'};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  return p;\n}\n\nfunction tick_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (e.isDimension(X)) {\n      p.x.offset = -e.bandSize(X, layout.x.useSmallBand) / 3;\n    }\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    if (e.isDimension(Y)) {\n      p.y.offset = -e.bandSize(Y, layout.y.useSmallBand) / 3;\n    }\n  } else if (!e.has(Y)) {\n    p.y = {value: 0};\n  }\n\n  // width\n  if (!e.has(X) || e.isDimension(X)) {\n    p.width = {value: e.bandSize(X, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.width = {value: 1};\n  }\n\n  // height\n  if (!e.has(Y) || e.isDimension(Y)) {\n    p.height = {value: e.bandSize(Y, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.height = {value: 1};\n  }\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else if (!e.has(COLOR)) {\n    p.opacity = {value: style.opacity};\n  }\n\n  return p;\n}\n\nfunction filled_point_props(shape) {\n  return function(e, layout, style) {\n    var p = {};\n\n    // x\n    if (e.has(X)) {\n      p.x = {scale: X, field: e.field(X)};\n    } else if (!e.has(X)) {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n\n    // y\n    if (e.has(Y)) {\n      p.y = {scale: Y, field: e.field(Y)};\n    } else if (!e.has(Y)) {\n      p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n    }\n\n    // size\n    if (e.has(SIZE)) {\n      p.size = {scale: SIZE, field: e.field(SIZE)};\n    } else if (!e.has(X)) {\n      p.size = {value: e.value(SIZE)};\n    }\n\n    // shape\n    p.shape = {value: shape};\n\n    // fill\n    if (e.has(COLOR)) {\n      p.fill = {scale: COLOR, field: e.field(COLOR)};\n    } else if (!e.has(COLOR)) {\n      p.fill = {value: e.value(COLOR)};\n    }\n\n    // alpha\n    if (e.has(ALPHA)) {\n      p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n    } else if (e.value(ALPHA) !== undefined) {\n      p.opacity = {value: e.value(ALPHA)};\n    } else if (!e.has(COLOR)) {\n      p.opacity = {value: style.opacity};\n    }\n\n    return p;\n  };\n}\n\nfunction text_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    if (e.has(TEXT) && e.isType(TEXT, Q)) {\n      p.x = {value: layout.cellWidth-5};\n    } else {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.fontSize = {scale: SIZE, field: e.field(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.fontSize = {value: e.font('size')};\n  }\n\n  // fill\n  // color should be set to background\n  p.fill = {value: 'black'};\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else {\n    p.opacity = {value: style.opacity};\n  }\n\n  // text\n  if (e.has(TEXT)) {\n    if (e.isType(TEXT, Q)) {\n      p.text = {template: '{{' + e.field(TEXT) + ' | number:\\'.3s\\'}}'};\n      p.align = {value: 'right'};\n    } else {\n      p.text = {field: e.field(TEXT)};\n    }\n  } else {\n    p.text = {value: 'Abc'};\n  }\n\n  p.font = {value: e.font('family')};\n  p.fontWeight = {value: e.font('weight')};\n  p.fontStyle = {value: e.font('style')};\n  p.baseline = {value: e.text('baseline')};\n\n  return p;\n}\n\n},{\"../globals\":35}],24:[function(require,module,exports){\n'use strict';\nrequire('../globals');\nvar util = require('../util'),\n  time = require('./time'),\n  colorbrewer = require('colorbrewer'),\n  interpolateLab = require('d3-color').interpolateLab;\n\nvar scale = module.exports = {};\n\nscale.names = function(props) {\n  return util.keys(util.keys(props).reduce(function(a, x) {\n    if (props[x] && props[x].scale) a[props[x].scale] = 1;\n    return a;\n  }, {}));\n};\n\nscale.defs = function(names, encoding, layout, stats, style, sorting, opt) {\n  opt = opt || {};\n\n  return names.reduce(function(a, name) {\n    var s = {\n      name: name,\n      type: scale.type(name, encoding),\n      domain: scale.domain(name, encoding, sorting, opt)\n    };\n    if (s.type === 'ordinal' && !encoding.bin(name) && encoding.sort(name).length === 0) {\n      s.sort = true;\n    }\n\n    scale_range(s, encoding, layout, stats, style, opt);\n\n    return (a.push(s), a);\n  }, []);\n};\n\nscale.type = function(name, encoding) {\n\n  switch (encoding.type(name)) {\n    case N: //fall through\n    case O: return 'ordinal';\n    case T:\n      var timeUnit = encoding.timeUnit(name);\n      return (timeUnit && time.scale.type(timeUnit, name)) || 'time';\n    case Q:\n      if (encoding.bin(name)) {\n        return name === COLOR ? 'linear' : 'ordinal';\n      }\n      return encoding.scale(name).type;\n  }\n};\n\nscale.domain = function (name, encoding, sorting, opt) {\n  if (encoding.isType(name, T)) {\n    var range = time.scale.domain(encoding.timeUnit(name), name);\n    if(range) return range;\n  }\n\n  if (name == opt.stack) {\n    return {\n      data: STACKED,\n      field: encoding.fieldRef(name, {\n        data: !encoding._vega2,\n        prefn: (opt.facet ? 'max_' : '') + 'sum_'\n      })\n    };\n  }\n  return {data: sorting.getDataset(name), field: encoding.field(name)};\n};\n\n\nfunction scale_range(s, encoding, layout, stats, style, opt) {\n  // jshint unused:false\n  var spec = encoding.scale(s.name);\n  switch (s.name) {\n    case X:\n      if (s.type === 'ordinal') {\n        s.bandWidth = encoding.bandSize(X, layout.x.useSmallBand);\n      } else {\n        s.range = layout.cellWidth ? [0, layout.cellWidth] : 'width';\n\n        if (encoding.isType(s.name,T) && encoding.timeUnit(s.name) === 'year') {\n          s.zero = false;\n        } else {\n          s.zero = spec.zero === undefined ? true : spec.zero;\n        }\n\n        s.reverse = spec.reverse;\n      }\n      s.round = true;\n      if (s.type === 'time') {\n        s.nice = encoding.timeUnit(s.name);\n      }else {\n        s.nice = true;\n      }\n      break;\n    case Y:\n      if (s.type === 'ordinal') {\n        s.bandWidth = encoding.bandSize(Y, layout.y.useSmallBand);\n      } else {\n        s.range = layout.cellHeight ? [layout.cellHeight, 0] : 'height';\n\n        if (encoding.isType(s.name,T) && encoding.timeUnit(s.name) === 'year') {\n          s.zero = false;\n        } else {\n          s.zero = spec.zero === undefined ? true : spec.zero;\n        }\n\n        s.reverse = spec.reverse;\n      }\n\n      s.round = true;\n\n      if (s.type === 'time') {\n        s.nice = encoding.timeUnit(s.name) || encoding.config('timeScaleNice');\n      }else {\n        s.nice = true;\n      }\n      break;\n    case ROW: // support only ordinal\n      s.bandWidth = layout.cellHeight;\n      s.round = true;\n      s.nice = true;\n      break;\n    case COL: // support only ordinal\n      s.bandWidth = layout.cellWidth;\n      s.round = true;\n      s.nice = true;\n      break;\n    case SIZE:\n      if (encoding.is('bar')) {\n        // FIXME this is definitely incorrect\n        // but let's fix it later since bar size is a bad encoding anyway\n        s.range = [3, Math.max(encoding.bandSize(X), encoding.bandSize(Y))];\n      } else if (encoding.is(TEXT)) {\n        s.range = [8, 40];\n      } else { //point\n        var bandSize = Math.min(encoding.bandSize(X), encoding.bandSize(Y)) - 1;\n        s.range = [10, 0.8 * bandSize*bandSize];\n      }\n      s.round = true;\n      s.zero = false;\n      break;\n    case SHAPE:\n      s.range = 'shapes';\n      break;\n    case COLOR:\n      s.range = scale.color(s, encoding, stats);\n      break;\n    case ALPHA:\n      s.range = [0.2, 1.0];\n      break;\n    default:\n      throw new Error('Unknown encoding name: '+ s.name);\n  }\n\n  switch (s.name) {\n    case ROW:\n    case COL:\n      s.padding = encoding.config('cellPadding');\n      s.outerPadding = 0;\n      break;\n    case X:\n    case Y:\n      if (s.type === 'ordinal') { //&& !s.bandWidth\n        s.points = true;\n        s.padding = encoding.band(s.name).padding;\n      }\n  }\n}\n\nscale.color = function(s, encoding, stats) {\n  var range = encoding.scale(COLOR).range,\n    cardinality = encoding.cardinality(COLOR, stats),\n    type = encoding.type(COLOR);\n\n  if (range === undefined) {\n    var ordinalPalette = encoding.config('ordinalPalette');\n    if (s.type === 'ordinal') {\n      if (type === N) {\n        // use categorical color scale\n        if (cardinality <= 10) {\n          range = encoding.config('c10palette');\n        } else {\n          range = encoding.config('c20palette');\n        }\n      } else {\n        if (cardinality <= 2) {\n          range = [colorbrewer[ordinalPalette][3][0], colorbrewer[ordinalPalette][3][2]];\n        } else {\n          range = ordinalPalette;\n        }\n      }\n    } else { //time or quantitative\n      var palette = colorbrewer[ordinalPalette][9];\n      range = [palette[0], palette[8]];\n      s.zero = false;\n    }\n  }\n  return scale.color.palette(range, cardinality, type);\n};\n\nscale.color.palette = function(range, cardinality, type) {\n  switch (range) {\n    case 'category10k':\n      // tableau's category 10, ordered by perceptual kernel study results\n      // https://github.com/uwdata/perceptual-kernels\n      return ['#2ca02c', '#e377c2', '#7f7f7f', '#17becf', '#8c564b', '#d62728', '#bcbd22', '#9467bd', '#ff7f0e', '#1f77b4'];\n\n    // d3/tableau category10/20/20b/20c\n    case 'category10':\n      return ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'];\n\n    case 'category20':\n      return ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\n\n    case 'category20b':\n      return ['#393b79', '#5254a3', '#6b6ecf', '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31', '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b', '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\n\n    case 'category20c':\n      return ['#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n  }\n\n  if (range in colorbrewer) {\n    var palette = colorbrewer[range],\n      ps = 5;\n\n    // if cardinality pre-defined, use it.\n    if (cardinality in palette) return palette[cardinality];\n\n    // if not, use the highest cardinality one for nominal\n    if (type === N) {\n      return palette[Math.max.apply(null, util.keys(palette))];\n    }\n\n    // otherwise, interpolate\n    return scale.color.interpolate(palette[ps][0], palette[ps][ps-1], cardinality);\n  }\n\n  return range;\n};\n\nscale.color.interpolate = function (start, end, cardinality) {\n  var interpolator = interpolateLab(start, end);\n  return util.range(cardinality).map(function(i) { return interpolator(i*1.0/(cardinality-1)); });\n};\n\n\n},{\"../globals\":35,\"../util\":38,\"./time\":30,\"colorbrewer\":5,\"d3-color\":6}],25:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar vlfield = require('../field');\n\nmodule.exports = addSortTransforms;\n\n// adds new transforms that produce sorted fields\nfunction addSortTransforms(data, encoding, stats, opt) {\n  // jshint unused:false\n\n  var datasetMapping = {};\n  var counter = 0;\n\n  encoding.forEach(function(field, encType) {\n    var sortBy = encoding.sort(encType, stats);\n    if (sortBy.length > 0) {\n      var fields = sortBy.map(function(d) {\n        return {\n          op: d.aggregate,\n          field: vlfield.fieldRef(d, {nofn: true, data: !encoding._vega2})\n        };\n      });\n\n      var byClause = sortBy.map(function(d) {\n        var reverse = (d.reverse ? '-' : '');\n        return reverse + vlfield.fieldRef(d, {data: !encoding._vega2});\n      });\n\n      var dataName = 'sorted' + counter++;\n\n      var transforms = [\n        {\n          type: 'aggregate',\n          groupby: [ encoding.fieldRef(encType) ],\n          fields: fields\n        },\n        {\n          type: 'sort',\n          by: byClause\n        }\n      ];\n\n      data.push({\n        name: dataName,\n        source: RAW,\n        transform: transforms\n      });\n\n      datasetMapping[encType] = dataName;\n    }\n  });\n\n  return {\n    getDataset: function(encType) {\n      var data = datasetMapping[encType];\n      if (!data) {\n        return TABLE;\n      }\n      return data;\n    }\n  };\n}\n\n\n},{\"../field\":34,\"../globals\":35}],26:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar  marks = require('./marks');\n\nmodule.exports = stacking;\n\nfunction stacking(data, encoding, mdef, facets) {\n  if (!marks[encoding.marktype()].stack) return false;\n\n  // TODO: add || encoding.has(LOD) here once LOD is implemented\n  if (!encoding.has(COLOR)) return false;\n\n  var dim=null, val=null, idx =null,\n    isXMeasure = encoding.isMeasure(X),\n    isYMeasure = encoding.isMeasure(Y);\n\n  if (isXMeasure && !isYMeasure) {\n    dim = Y;\n    val = X;\n    idx = 0;\n  } else if (isYMeasure && !isXMeasure) {\n    dim = X;\n    val = Y;\n    idx = 1;\n  } else {\n    return null; // no stack encoding\n  }\n\n  // add transform to compute sums for scale\n  var stacked = {\n    name: STACKED,\n    source: TABLE,\n    transform: [{\n      type: 'aggregate',\n      groupby: [encoding.field(dim)].concat(facets), // dim and other facets\n      fields: [{op: 'sum', field: encoding.field(val)}] // TODO check if field with aggregate is correct?\n    }]\n  };\n\n  if (facets && facets.length > 0) {\n    stacked.transform.push({ //calculate max for each facet\n      type: 'aggregate',\n      groupby: facets,\n      fields: [{\n        op: 'max',\n        field: encoding.fieldName(val, {fn: 'sum'})\n      }]\n    });\n  }\n\n  data.push(stacked);\n\n  // add stack transform to mark\n  mdef.from.transform = [{\n    type: 'stack',\n    point: encoding.field(dim),\n    height: encoding.field(val),\n    output: {y1: val, y0: val + '2'}\n  }];\n\n  // TODO: This is super hack-ish -- consolidate into modular mark properties?\n  mdef.properties.update[val] = mdef.properties.enter[val] = {scale: val, field: val};\n  mdef.properties.update[val + '2'] = mdef.properties.enter[val + '2'] = {scale: val, field: val + '2'};\n\n  return val; //return stack encoding\n}\n\n},{\"../globals\":35,\"./marks\":23}],27:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar vlfield = require('../field');\n\nmodule.exports = function(encoding, stats) {\n  return {\n    opacity: estimateOpacity(encoding, stats),\n  };\n};\n\nfunction estimateOpacity(encoding,stats) {\n  if (!stats) {\n    return 1;\n  }\n\n  var numPoints = 0;\n\n  if (encoding.isAggregate()) { // aggregate plot\n    numPoints = 1;\n\n    //  get number of points in each \"cell\"\n    //  by calculating product of cardinality\n    //  for each non faceting and non-ordinal X / Y fields\n    //  note that ordinal x,y are not include since we can\n    //  consider that ordinal x are subdividing the cell into subcells anyway\n    encoding.forEach(function(field, encType) {\n\n      if (encType !== ROW && encType !== COL &&\n          !((encType === X || encType === Y) &&\n          vlfield.isOrdinalScale(field))\n        ) {\n        numPoints *= encoding.cardinality(encType, stats);\n      }\n    });\n\n  } else { // raw plot\n    numPoints = stats.count;\n\n    // small multiples divide number of points\n    var numMultiples = 1;\n    if (encoding.has(ROW)) {\n      numMultiples *= encoding.cardinality(ROW, stats);\n    }\n    if (encoding.has(COL)) {\n      numMultiples *= encoding.cardinality(COL, stats);\n    }\n    numPoints /= numMultiples;\n  }\n\n  var opacity = 0;\n  if (numPoints < 20) {\n    opacity = 1;\n  } else if (numPoints < 200) {\n    opacity = 0.7;\n  } else if (numPoints < 1000 || encoding.is('tick')) {\n    opacity = 0.6;\n  } else {\n    opacity = 0.3;\n  }\n\n  return opacity;\n}\n\n\n},{\"../field\":34,\"../globals\":35}],28:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar groupdef = require('./group').def;\n\nmodule.exports = subfaceting;\n\nfunction subfaceting(group, mdef, details, stack, encoding) {\n  var m = group.marks,\n    g = groupdef('subfacet', {marks: m});\n\n  group.marks = [g];\n  g.from = mdef.from;\n  delete mdef.from;\n\n  //TODO test LOD -- we should support stack / line without color (LOD) field\n  var trans = (g.from.transform || (g.from.transform = []));\n  trans.unshift({type: 'facet', keys: details});\n\n  if (stack && encoding.has(COLOR)) {\n    trans.unshift({type: 'sort', by: encoding.field(COLOR)});\n  }\n}\n\n},{\"../globals\":35,\"./group\":20}],29:[function(require,module,exports){\n'use strict';\n\nrequire('../globals');\n\nvar groupdef = require('./group').def,\n  vlfield = require('../field');\n\nmodule.exports = template;\n\nfunction template(encoding, layout, stats) {\n  // jshint unused:false\n\n  var data = {name: RAW, format: {}},\n    table = {name: TABLE, source: RAW},\n    dataUrl = encoding.data('url'),\n    dataType = encoding.data('formatType'),\n    values = encoding.data('values');\n\n  if (encoding.hasValues()) {\n    data.values = values;\n  } else {\n    data.url = dataUrl;\n    data.format.type = dataType;\n  }\n\n  encoding.forEach(function(field, encType) {\n    var name;\n    if (field.type == T) {\n      data.format.parse = data.format.parse || {};\n      data.format.parse[field.name] = 'date';\n    } else if (field.type == Q) {\n      data.format.parse = data.format.parse || {};\n      if (vlfield.isCount(field)) {\n        name = 'count';\n      } else {\n        name = field.name;\n      }\n      data.format.parse[name] = 'number';\n    }\n  });\n\n  return {\n    width: layout.width,\n    height: layout.height,\n    padding: 'auto',\n    data: [data, table],\n    marks: [groupdef('cell', {\n      width: layout.cellWidth ? {value: layout.cellWidth} : undefined,\n      height: layout.cellHeight ? {value: layout.cellHeight} : undefined\n    })]\n  };\n}\n\n},{\"../field\":34,\"../globals\":35,\"./group\":20}],30:[function(require,module,exports){\n'use strict';\n\nvar util = require('../util');\n\nmodule.exports = time;\n\nfunction time(spec, encoding, opt) { // FIXME refactor to reduce side effect #276\n  // jshint unused:false\n  var timeFields = {}, timeUnits = {};\n\n  // find unique formula transformation and bin function\n  encoding.forEach(function(field, encType) {\n    if (field.type === T && field.timeUnit) {\n      timeFields[encoding.field(encType)] = {\n        field: field,\n        encType: encType\n      };\n      timeUnits[field.timeUnit] = true;\n    }\n  });\n\n  // add formula transform\n  var data = spec.data[1],\n    transform = data.transform = data.transform || [];\n\n  for (var f in timeFields) {\n    var tf = timeFields[f];\n    time.transform(transform, encoding, tf.encType, tf.field);\n  }\n\n  // add scales\n  var scales = spec.scales = spec.scales || [];\n  for (var timeUnit in timeUnits) {\n    time.scale(scales, timeUnit, encoding);\n  }\n  return spec;\n}\n\n\n\ntime.cardinality = function(field, stats, filterNull, type) {\n  var timeUnit = field.timeUnit;\n  switch (timeUnit) {\n    case 'seconds': return 60;\n    case 'minutes': return 60;\n    case 'hours': return 24;\n    case 'day': return 7;\n    case 'date': return 31;\n    case 'month': return 12;\n    case 'year':\n      var stat = stats[field.name],\n        yearstat = stats['year_'+field.name];\n\n      if (!yearstat) { return null; }\n\n      return yearstat.distinct -\n        (stat.nulls > 0 && filterNull[type] ? 1 : 0);\n  }\n\n  return null;\n};\n\nfunction fieldFn(func, field) {\n  return 'utc' + func + '(d.data.'+ field.name +')';\n}\n\n/**\n * @return {String} date binning formula of the given field\n */\ntime.formula = function(field) {\n  return fieldFn(field.timeUnit, field);\n};\n\n/** add formula transforms to data */\ntime.transform = function(transform, encoding, encType, field) {\n  transform.push({\n    type: 'formula',\n    field: encoding.field(encType),\n    expr: time.formula(field)\n  });\n};\n\n/** append custom time scales for axis label */\ntime.scale = function(scales, timeUnit, encoding) {\n  var labelLength = encoding.config('timeScaleLabelLength');\n  // TODO add option for shorter scale / custom range\n  switch (timeUnit) {\n    case 'day':\n      scales.push({\n        name: 'time-'+timeUnit,\n        type: 'ordinal',\n        domain: util.range(0, 7),\n        range: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map(\n          function(s) { return s.substr(0, labelLength);}\n        )\n      });\n      break;\n    case 'month':\n      scales.push({\n        name: 'time-'+timeUnit,\n        type: 'ordinal',\n        domain: util.range(0, 12),\n        range: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map(\n            function(s) { return s.substr(0, labelLength);}\n          )\n      });\n      break;\n  }\n};\n\ntime.isOrdinalFn = function(timeUnit) {\n  switch (timeUnit) {\n    case 'seconds':\n    case 'minutes':\n    case 'hours':\n    case 'day':\n    case 'date':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n\ntime.scale.type = function(timeUnit, name) {\n  if (name === COLOR) {\n    return 'linear'; // this has order\n  }\n\n  return time.isOrdinalFn(timeUnit) || name === COL || name === ROW ? 'ordinal' : 'linear';\n};\n\ntime.scale.domain = function(timeUnit, name) {\n  var isColor = name === COLOR;\n  switch (timeUnit) {\n    case 'seconds':\n    case 'minutes': return isColor ? [0,59] : util.range(0, 60);\n    case 'hours': return isColor ? [0,23] : util.range(0, 24);\n    case 'day': return isColor ? [0,6] : util.range(0, 7);\n    case 'date': return isColor ? [1,31] : util.range(1, 32);\n    case 'month': return isColor ? [0,11] : util.range(0, 12);\n  }\n  return null;\n};\n\n/** whether a particular time function has custom scale for labels implemented in time.scale */\ntime.hasScale = function(timeUnit) {\n  switch (timeUnit) {\n    case 'day':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n\n\n\n},{\"../util\":38}],31:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar consts = module.exports = {};\n\nconsts.encodingTypes = [X, Y, ROW, COL, SIZE, SHAPE, COLOR, ALPHA, TEXT, DETAIL];\n\nconsts.shorthand = {\n  delim:  '|',\n  assign: '=',\n  type:   ',',\n  func:   '_'\n};\n\n},{\"./globals\":35}],32:[function(require,module,exports){\n'use strict';\n\nrequire('./globals');\n\nvar stats = require('datalib/src/stats');\n\nvar vldata = module.exports = {};\n\n/** Mapping from datalib's inferred type to Vega-lite's type */\nvldata.types = {\n  'boolean': N,\n  'number': Q,\n  'integer': Q,\n  'date': T,\n  'string': N\n};\n\nvldata.stats = function(data) {\n  var summary = stats.summary(data);\n\n  return summary.reduce(function(s, profile) {\n    s[profile.field] = profile;\n    return s;\n  }, {count: data.length});\n};\n},{\"./globals\":35,\"datalib/src/stats\":10}],33:[function(require,module,exports){\n// utility for enc\n\n'use strict';\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  vlfield = require('./field'),\n  util = require('./util'),\n  schema = require('./schema/schema'),\n  encTypes = schema.encTypes;\n\nvar vlenc = module.exports = {};\n\nvlenc.countRetinal = function(enc) {\n  var count = 0;\n  if (enc.color) count++;\n  if (enc.alpha) count++;\n  if (enc.size) count++;\n  if (enc.shape) count++;\n  return count;\n};\n\nvlenc.has = function(enc, encType) {\n  var fieldDef = enc && enc[encType];\n  return fieldDef && fieldDef.name;\n};\n\nvlenc.isAggregate = function(enc) {\n  for (var k in enc) {\n    if (vlenc.has(enc, k) && enc[k].aggregate) {\n      return true;\n    }\n  }\n  return false;\n};\n\nvlenc.forEach = function(enc, f) {\n  var i = 0;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      f(enc[k], k, i++);\n    }\n  });\n};\n\nvlenc.map = function(enc, f) {\n  var arr = [];\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      arr.push(f(enc[k], k, enc));\n    }\n  });\n  return arr;\n};\n\nvlenc.reduce = function(enc, f, init) {\n  var r = init;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      r = f(r, enc[k], k,  enc);\n    }\n  });\n  return r;\n};\n\n/*\n * return key-value pairs of field name and list of fields of that field name\n */\nvlenc.fields = function(enc) {\n  return vlenc.reduce(enc, function (m, field) {\n    var fieldList = m[field.name] = m[field.name] || [],\n      containsType = fieldList.containsType = fieldList.containsType || {};\n\n    if (fieldList.indexOf(field) === -1) {\n      fieldList.push(field);\n      // augment the array with containsType.Q / O / N / T\n      containsType[field.type] = true;\n    }\n    return m;\n  }, {});\n};\n\nvlenc.shorthand = function(enc) {\n  return vlenc.map(enc, function(field, et) {\n    return et + c.assign + vlfield.shorthand(field);\n  }).join(c.delim);\n};\n\nvlenc.fromShorthand = function(shorthand) {\n  var enc = util.isArray(shorthand) ? shorthand : shorthand.split(c.delim);\n  return enc.reduce(function(m, e) {\n    var split = e.split(c.assign),\n        enctype = split[0].trim(),\n        field = split[1];\n\n    m[enctype] = vlfield.fromShorthand(field);\n    return m;\n  }, {});\n};\n},{\"./consts\":31,\"./field\":34,\"./schema/schema\":36,\"./util\":38}],34:[function(require,module,exports){\n'use strict';\n\n// utility for field\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  time = require('./compiler/time'),\n  util = require('./util'),\n  schema = require('./schema/schema');\n\nvar vlfield = module.exports = {};\n\n/**\n * @param field\n * @param opt\n *   opt.nofn -- exclude bin, aggregate, timeUnit\n *   opt.data - include 'data.'\n *   opt.fn - replace fn with custom function prefix\n *   opt.prefn - prepend fn with custom function prefix\n\n * @return {[type]}       [description]\n */\nvlfield.fieldRef = function(field, opt) {\n  opt = opt || {};\n\n  var f = (opt.data ? 'data.' : '') + (opt.prefn || ''),\n    nofn = opt.nofn || opt.fn,\n    name = field.name;\n\n  if (vlfield.isCount(field)) {\n    return f + 'count';\n  } else if (!nofn && field.bin) {\n    return f + 'bin_' + name;\n  } else if (!nofn && field.aggregate) {\n    return f + field.aggregate + '_' + name;\n  } else if (!nofn && field.timeUnit) {\n    return f + field.timeUnit + '_' + name;\n  } else if (opt.fn) {\n    return f + opt.fn + '_' + name;\n  } else {\n    return f + name;\n  }\n};\n\nvlfield.shorthand = function(f) {\n  var c = consts.shorthand;\n  return (f.aggregate ? f.aggregate + c.func : '') +\n    (f.timeUnit ? f.timeUnit + c.func : '') +\n    (f.bin ? 'bin' + c.func : '') +\n    (f.name || '') + c.type + f.type;\n};\n\nvlfield.shorthands = function(fields, delim) {\n  delim = delim || c.delim;\n  return fields.map(vlfield.shorthand).join(delim);\n};\n\nvlfield.fromShorthand = function(shorthand) {\n  var split = shorthand.split(c.type), i;\n  var o = {\n    name: split[0].trim(),\n    type: split[1].trim()\n  };\n\n  // check aggregate type\n  for (i in schema.aggregate.enum) {\n    var a = schema.aggregate.enum[i];\n    if (o.name.indexOf(a + '_') === 0) {\n      o.name = o.name.substr(a.length + 1);\n      if (a == 'count' && o.name.length === 0) o.name = '*';\n      o.aggregate = a;\n      break;\n    }\n  }\n\n  // check time timeUnit\n  for (i in schema.timefns) {\n    var tu = schema.timefns[i];\n    if (o.name && o.name.indexOf(tu + '_') === 0) {\n      o.name = o.name.substr(o.length + 1);\n      o.timeUnit = tu;\n      break;\n    }\n  }\n\n  // check bin\n  if (o.name && o.name.indexOf('bin_') === 0) {\n    o.name = o.name.substr(4);\n    o.bin = true;\n  }\n\n  return o;\n};\n\nvar typeOrder = {\n  N: 0,\n  O: 1,\n  G: 2,\n  T: 3,\n  Q: 4\n};\n\nvlfield.order = {};\n\nvlfield.order.type = function(field) {\n  if (field.aggregate==='count') return 4;\n  return typeOrder[field.type];\n};\n\nvlfield.order.typeThenName = function(field) {\n  return vlfield.order.type(field) + '_' +\n    (field.aggregate === 'count' ? '~' : field.name.toLowerCase());\n    // ~ is the last character in ASCII\n};\n\nvlfield.order.original = function() {\n  return 0; // no swap will occur\n};\n\nvlfield.order.name = function(field) {\n  return field.name;\n};\n\nvlfield.order.typeThenCardinality = function(field, stats){\n  return stats[field.name].distinct;\n};\n\nvar isType = vlfield.isType = function (fieldDef, type) {\n  return fieldDef.type === type;\n};\n\nvar isTypes = vlfield.isTypes = function (fieldDef, types) {\n  for (var t=0; t<types.length; t++) {\n    if(fieldDef.type === types[t]) return true;\n  }\n  return false;\n};\n\n/*\n * Most fields that use ordinal scale are dimensions.\n * However, YEAR(T), YEARMONTH(T) use time scale, not ordinal but are dimensions too.\n */\nvlfield.isOrdinalScale = function(field) {\n  return  isTypes(field, [N, O]) || field.bin ||\n    ( isType(field, T) && field.timeUnit && time.isOrdinalFn(field.timeUnit) );\n};\n\nfunction isDimension(field) {\n  return  isTypes(field, [N, O]) || !!field.bin ||\n    ( isType(field, T) && !!field.timeUnit );\n}\n\n/**\n * For encoding, use encoding.isDimension() to avoid confusion.\n * Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.isDimension = function(field) {\n  return field && isDimension(field);\n};\n\nvlfield.isMeasure = function(field) {\n  return field && !isDimension(field);\n};\n\nvlfield.role = function(field) {\n  return isDimension(field) ? 'dimension' : 'measure';\n};\n\nvlfield.count = function() {\n  return {name:'*', aggregate: 'count', type: Q, displayName: vlfield.count.displayName};\n};\n\nvlfield.count.displayName = 'Number of Records';\n\nvlfield.isCount = function(field) {\n  return field.aggregate === 'count';\n};\n\n/**\n * For encoding, use encoding.cardinality() to avoid confusion.  Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.cardinality = function(field, stats, filterNull) {\n  // FIXME need to take filter into account\n\n  var stat = stats[field.name];\n  var type = field.type;\n\n  filterNull = filterNull || {};\n\n  if (field.bin) {\n    var bins = util.getbins(stat, field.bin.maxbins || schema.MAXBINS_DEFAULT);\n    return (bins.stop - bins.start) / bins.step;\n  }\n  if (isType(field, T)) {\n    var cardinality = time.cardinality(field, stats, filterNull, type);\n    if(cardinality !== null) return cardinality;\n    //otherwise use calculation below\n  }\n  if (field.aggregate) {\n    return 1;\n  }\n\n  // remove null\n  return stat.distinct -\n    (stat.nulls > 0 && filterNull[type] ? 1 : 0);\n};\n\n},{\"./compiler/time\":30,\"./consts\":31,\"./globals\":35,\"./schema/schema\":36,\"./util\":38}],35:[function(require,module,exports){\n(function (global){\n'use strict';\n\n// declare global constant\nvar g = global || window;\n\ng.TABLE = 'table';\ng.RAW = 'raw';\ng.STACKED = 'stacked';\ng.INDEX = 'index';\n\ng.X = 'x';\ng.Y = 'y';\ng.ROW = 'row';\ng.COL = 'col';\ng.SIZE = 'size';\ng.SHAPE = 'shape';\ng.COLOR = 'color';\ng.ALPHA = 'alpha';\ng.TEXT = 'text';\ng.DETAIL = 'detail';\n\ng.N = 'N';\ng.O = 'O';\ng.Q = 'Q';\ng.T = 'T';\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],36:[function(require,module,exports){\n// Package of defining Vega-lite Specification's json schema\n'use strict';\n\nrequire('../globals');\n\nvar schema = module.exports = {},\n  util = require('../util'),\n  toMap = util.toMap,\n  colorbrewer = require('colorbrewer');\n\nschema.util = require('./schemautil');\n\nschema.marktype = {\n  type: 'string',\n  enum: ['point', 'tick', 'bar', 'line', 'area', 'circle', 'square', 'text']\n};\n\nschema.aggregate = {\n  type: 'string',\n  enum: ['avg', 'sum', 'median', 'min', 'max', 'count'],\n  supportedEnums: {\n    Q: ['avg', 'median', 'sum', 'min', 'max', 'count'],\n    O: ['median','min','max'],\n    N: [],\n    T: ['avg', 'median', 'min', 'max'],\n    '': ['count']\n  },\n  supportedTypes: toMap([Q, N, O, T, ''])\n};\nschema.band = {\n  type: 'object',\n  properties: {\n    size: {\n      type: 'integer',\n      minimum: 0\n    },\n    padding: {\n      type: 'integer',\n      minimum: 0,\n      default: 1\n    }\n  }\n};\n\nschema.getSupportedRole = function(encType) {\n  return schema.schema.properties.encoding.properties[encType].supportedRole;\n};\n\nschema.timeUnits = ['year', 'month', 'day', 'date', 'hours', 'minutes', 'seconds'];\n\nschema.defaultTimeFn = 'month';\n\nschema.timeUnit = {\n  type: 'string',\n  enum: schema.timeUnits,\n  supportedTypes: toMap([T])\n};\n\n//TODO(kanitw): add other type of function here\n\nschema.scale_type = {\n  type: 'string',\n  enum: ['linear', 'log', 'pow', 'sqrt', 'quantile'],\n  default: 'linear',\n  supportedTypes: toMap([Q])\n};\n\nschema.field = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string'\n    }\n  }\n};\n\nvar clone = util.duplicate;\nvar merge = schema.util.merge;\n\nschema.MAXBINS_DEFAULT = 15;\n\nvar bin = {\n  type: ['boolean', 'object'],\n  default: false,\n  properties: {\n    maxbins: {\n      type: 'integer',\n      default: schema.MAXBINS_DEFAULT,\n      minimum: 2\n    }\n  },\n  supportedTypes: toMap([Q]) // TODO: add O after finishing #81\n};\n\nvar typicalField = merge(clone(schema.field), {\n  type: 'object',\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T]\n    },\n    aggregate: schema.aggregate,\n    timeUnit: schema.timeUnit,\n    bin: bin,\n    scale: {\n      type: 'object',\n      properties: {\n        type: schema.scale_type,\n        reverse: {\n          type: 'boolean',\n          default: false,\n          supportedTypes: toMap([Q, T])\n        },\n        zero: {\n          type: 'boolean',\n          description: 'Include zero',\n          default: true,\n          supportedTypes: toMap([Q, T])\n        },\n        nice: {\n          type: 'string',\n          enum: ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'],\n          supportedTypes: toMap([T])\n        }\n      }\n    }\n  }\n});\n\nvar onlyOrdinalField = merge(clone(schema.field), {\n  type: 'object',\n  supportedRole: {\n    dimension: true\n  },\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T] // ordinal-only field supports Q when bin is applied and T when time unit is applied.\n    },\n    timeUnit: schema.timeUnit,\n    bin: bin,\n    aggregate: {\n      type: 'string',\n      enum: ['count'],\n      supportedTypes: toMap([N, O]) // FIXME this looks weird to me\n    }\n  }\n});\n\nvar axisMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true},\n  properties: {\n    axis: {\n      type: 'object',\n      properties: {\n        grid: {\n          type: 'boolean',\n          default: true,\n          description: 'A flag indicate if gridlines should be created in addition to ticks.'\n        },\n        title: {\n          type: 'boolean',\n          default: true,\n          description: 'A title for the axis.'\n        },\n        titleOffset: {\n          type: 'integer',\n          default: undefined,  // auto\n          description: 'A title offset value for the axis.'\n        },\n        format: {\n          type: 'string',\n          default: undefined,  // auto\n          description: 'The formatting pattern for axis labels.'\n        },\n        maxLabelLength: {\n          type: 'integer',\n          default: 25,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        }\n      }\n    }\n  }\n};\n\nvar sortMixin = {\n  type: 'object',\n  properties: {\n    sort: {\n      type: 'array',\n      default: [],\n      items: {\n        type: 'object',\n        supportedTypes: toMap([N, O]),\n        required: ['name', 'aggregate'],\n        name: {\n          type: 'string'\n        },\n        aggregate: {\n          type: 'string',\n          enum: ['avg', 'sum', 'min', 'max', 'count']\n        },\n        reverse: {\n          type: 'boolean',\n          default: false\n        }\n      }\n    }\n  }\n};\n\nvar bandMixin = {\n  type: 'object',\n  properties: {\n    band: schema.band\n  }\n};\n\nvar legendMixin = {\n  type: 'object',\n  properties: {\n    legend: {\n      type: 'boolean',\n      default: true\n    }\n  }\n};\n\nvar textMixin = {\n  type: 'object',\n  supportedMarktypes: {'text': true},\n  properties: {\n    text: {\n      type: 'object',\n      properties: {\n        align: {\n          type: 'string',\n          default: 'left'\n        },\n        baseline: {\n          type: 'string',\n          default: 'middle'\n        },\n        margin: {\n          type: 'integer',\n          default: 4,\n          minimum: 0\n        }\n      }\n    },\n    font: {\n      type: 'object',\n      properties: {\n        weight: {\n          type: 'string',\n          enum: ['normal', 'bold'],\n          default: 'normal'\n        },\n        size: {\n          type: 'integer',\n          default: 10,\n          minimum: 0\n        },\n        family: {\n          type: 'string',\n          default: 'Helvetica Neue'\n        },\n        style: {\n          type: 'string',\n          default: 'normal',\n          enum: ['normal', 'italic']\n        }\n      }\n    }\n  }\n};\n\nvar sizeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, bar: true, circle: true, square: true, text: true},\n  properties: {\n    value: {\n      type: 'integer',\n      default: 30,\n      minimum: 0\n    }\n  }\n};\n\nvar colorMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true},\n  properties: {\n    value: {\n      type: 'string',\n      role: 'color',\n      default: 'steelblue'\n    },\n    scale: {\n      type: 'object',\n      properties: {\n        range: {\n          type: ['string', 'array']\n        }\n      }\n    }\n  }\n};\n\nvar alphaMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true},\n  properties: {\n    value: {\n      type: 'number',\n      default: undefined,  // auto\n      minimum: 0,\n      maximum: 1\n    }\n  }\n};\n\nvar shapeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, circle: true, square: true},\n  properties: {\n    value: {\n      type: 'string',\n      enum: ['circle', 'square', 'cross', 'diamond', 'triangle-up', 'triangle-down'],\n      default: 'circle'\n    }\n  }\n};\n\nvar detailMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, line: true, circle: true, square: true}\n};\n\nvar rowMixin = {\n  properties: {\n    height: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    },\n    grid: {\n      type: 'boolean',\n      default: true,\n      description: 'A flag indicate if gridlines should be created in addition to ticks.'\n    },\n  }\n};\n\nvar colMixin = {\n  properties: {\n    width: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    },\n    axis: {\n      properties: {\n        maxLabelLength: {\n          type: 'integer',\n          default: 12,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        }\n      }\n    }\n  }\n};\n\nvar facetMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, text: true},\n  properties: {\n    padding: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.1\n    }\n  }\n};\n\nvar requiredNameType = {\n  required: ['name', 'type']\n};\n\nvar multiRoleField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: true\n  }\n});\n\nvar quantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: 'ordinal-only' // using alpha / size to encoding category lead to order interpretation\n  }\n});\n\nvar onlyQuantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true\n  }\n});\n\nvar x = merge(clone(multiRoleField), axisMixin, bandMixin, requiredNameType, sortMixin);\nvar y = clone(x);\n\nvar facet = merge(clone(onlyOrdinalField), requiredNameType, facetMixin, sortMixin);\nvar row = merge(clone(facet), axisMixin, rowMixin);\nvar col = merge(clone(facet), axisMixin, colMixin);\n\nvar size = merge(clone(quantitativeField), legendMixin, sizeMixin, sortMixin);\nvar color = merge(clone(multiRoleField), legendMixin, colorMixin, sortMixin);\nvar alpha = merge(clone(quantitativeField), alphaMixin, sortMixin);\nvar shape = merge(clone(onlyOrdinalField), legendMixin, shapeMixin, sortMixin);\nvar detail = merge(clone(onlyOrdinalField), detailMixin, sortMixin);\n\n// we only put aggregated measure in pivot table\nvar text = merge(clone(onlyQuantitativeField), textMixin, sortMixin);\n\n// TODO add label\n\nvar filter = {\n  type: 'array',\n  items: {\n    type: 'object',\n    properties: {\n      operands: {\n        type: 'array',\n        items: {\n          type: ['string', 'boolean', 'integer', 'number']\n        }\n      },\n      operator: {\n        type: 'string',\n        enum: ['>', '>=', '=', '!=', '<', '<=', 'notNull']\n      }\n    }\n  }\n};\n\nvar data = {\n  type: 'object',\n  properties: {\n    // data source\n    formatType: {\n      type: 'string',\n      enum: ['json', 'csv'],\n      default: 'json'\n    },\n    url: {\n      type: 'string',\n      default: undefined\n    },\n    values: {\n      type: 'array',\n      default: undefined,\n      description: 'Pass array of objects instead of a url to a file.',\n      items: {\n        type: 'object',\n        additionalProperties: true\n      }\n    }\n  }\n};\n\nvar config = {\n  type: 'object',\n  properties: {\n    // template\n    width: {\n      type: 'integer',\n      default: undefined\n    },\n    height: {\n      type: 'integer',\n      default: undefined\n    },\n    viewport: {\n      type: 'array',\n      items: {\n        type: 'integer'\n      },\n      default: undefined\n    },\n    gridColor: {\n      type: 'string',\n      role: 'color',\n      default: 'black'\n    },\n    gridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.08\n    },\n\n    // filter null\n    filterNull: {\n      type: 'object',\n      properties: {\n        O: {type:'boolean', default: false},\n        Q: {type:'boolean', default: true},\n        T: {type:'boolean', default: true}\n      }\n    },\n    toggleSort: {\n      type: 'string',\n      default: O\n    },\n\n    // single plot\n    singleHeight: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    singleWidth: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    // band size\n    largeBandSize: {\n      type: 'integer',\n      default: 21,\n      minimum: 0\n    },\n    smallBandSize: {\n      //small multiples or single plot with high cardinality\n      type: 'integer',\n      default: 12,\n      minimum: 0\n    },\n    largeBandMaxCardinality: {\n      type: 'integer',\n      default: 10\n    },\n    // small multiples\n    cellPadding: {\n      type: 'number',\n      default: 0.1\n    },\n    cellGridColor: {\n      type: 'string',\n      role: 'color',\n      default: 'black'\n    },\n    cellGridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.15\n    },\n    cellBackgroundColor: {\n      type: 'string',\n      role: 'color',\n      default: 'transparent'\n    },\n    textCellWidth: {\n      type: 'integer',\n      default: 90,\n      minimum: 0\n    },\n\n    // marks\n    strokeWidth: {\n      type: 'integer',\n      default: 2,\n      minimum: 0\n    },\n    singleBarOffset: {\n      type: 'integer',\n      default: 5,\n      minimum: 0\n    },\n\n    // color\n    c10palette: {\n      type: 'string',\n      default: 'category10',\n      enum: [\n        // Tableau\n        'category10', 'category10k',\n        // Color Brewer\n        'Pastel1', 'Pastel2', 'Set1', 'Set2', 'Set3'\n      ]\n    },\n    c20palette: {\n      type: 'string',\n      default: 'category20',\n      enum: ['category20', 'category20b', 'category20c']\n    },\n    ordinalPalette: {\n      type: 'string',\n      default: 'BuGn',\n      enum: util.keys(colorbrewer)\n    },\n\n    // scales\n    timeScaleLabelLength: {\n      type: 'integer',\n      default: 3,\n      minimum: 0\n    },\n    // other\n    characterWidth: {\n      type: 'integer',\n      default: 6\n    }\n  }\n};\n\n/** @type Object Schema of a vega-lite specification */\nschema.schema = {\n  $schema: 'http://json-schema.org/draft-04/schema#',\n  description: 'Schema for Vega-lite specification',\n  type: 'object',\n  required: ['marktype', 'encoding', 'data'],\n  properties: {\n    data: data,\n    marktype: schema.marktype,\n    encoding: {\n      type: 'object',\n      properties: {\n        x: x,\n        y: y,\n        row: row,\n        col: col,\n        size: size,\n        color: color,\n        alpha: alpha,\n        shape: shape,\n        text: text,\n        detail: detail\n      }\n    },\n    filter: filter,\n    config: config\n  }\n};\n\nschema.encTypes = util.keys(schema.schema.properties.encoding.properties);\n\n/** Instantiate a verbose vl spec from the schema */\nschema.instantiate = function() {\n  return schema.util.instantiate(schema.schema);\n};\n\n},{\"../globals\":35,\"../util\":38,\"./schemautil\":37,\"colorbrewer\":5}],37:[function(require,module,exports){\n'use strict';\n\nvar schemautil = module.exports = {},\n  util = require('../util');\n\nvar isEmpty = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\nschemautil.extend = function(instance, schema) {\n  return schemautil.merge(schemautil.instantiate(schema), instance);\n};\n\n// instantiate a schema\nschemautil.instantiate = function(schema) {\n  var val;\n  if (schema === undefined) {\n    return undefined;\n  } else if ('default' in schema) {\n    val = schema.default;\n    return util.isObject(val) ? util.duplicate(val) : val;\n  } else if (schema.type === 'object') {\n    var instance = {};\n    for (var name in schema.properties) {\n      val = schemautil.instantiate(schema.properties[name]);\n      if (val !== undefined) {\n        instance[name] = val;\n      }\n    }\n    return instance;\n  } else if (schema.type === 'array') {\n    return [];\n  }\n  return undefined;\n};\n\n// remove all defaults from an instance\nschemautil.subtract = function(instance, defaults) {\n  var changes = {};\n  for (var prop in instance) {\n    var def = defaults[prop];\n    var ins = instance[prop];\n    // Note: does not properly subtract arrays\n    if (!defaults || def !== ins) {\n      if (typeof ins === 'object' && !util.isArray(ins) && def) {\n        var c = schemautil.subtract(ins, def);\n        if (!isEmpty(c))\n          changes[prop] = c;\n      } else if (!util.isArray(ins) || ins.length > 0) {\n        changes[prop] = ins;\n      }\n    }\n  }\n  return changes;\n};\n\nschemautil.merge = function(/*dest*, src0, src1, ...*/){\n  var dest = arguments[0];\n  for (var i=1 ; i<arguments.length; i++) {\n    dest = merge(dest, arguments[i]);\n  }\n  return dest;\n};\n\n// recursively merges src into dest\nfunction merge(dest, src) {\n  if (typeof src !== 'object' || src === null) {\n    return dest;\n  }\n\n  for (var p in src) {\n    if (!src.hasOwnProperty(p)) {\n      continue;\n    }\n    if (src[p] === undefined) {\n      continue;\n    }\n    if (typeof src[p] !== 'object' || src[p] === null) {\n      dest[p] = src[p];\n    } else if (typeof dest[p] !== 'object' || dest[p] === null) {\n      dest[p] = merge(src[p].constructor === Array ? [] : {}, src[p]);\n    } else {\n      merge(dest[p], src[p]);\n    }\n  }\n  return dest;\n}\n},{\"../util\":38}],38:[function(require,module,exports){\n'use strict';\n\nvar util = module.exports = require('datalib/src/util');\n\nutil.extend(util, require('datalib/src/generate'));\nutil.extend(util, require('datalib/src/stats'));\nutil.bin = require('datalib/src/bins/bins');\n\nutil.isin = function(item, array) {\n  return array.indexOf(item) !== -1;\n};\n\nutil.forEach = function(obj, f, thisArg) {\n  if (obj.forEach) {\n    obj.forEach.call(thisArg, f);\n  } else {\n    for (var k in obj) {\n      f.call(thisArg, obj[k], k , obj);\n    }\n  }\n};\n\nutil.reduce = function(obj, f, init, thisArg) {\n  if (obj.reduce) {\n    return obj.reduce.call(thisArg, f, init);\n  } else {\n    for (var k in obj) {\n      init = f.call(thisArg, init, obj[k], k, obj);\n    }\n    return init;\n  }\n};\n\nutil.map = function(obj, f, thisArg) {\n  if (obj.map) {\n    return obj.map.call(thisArg, f);\n  } else {\n    var output = [];\n    for (var k in obj) {\n      output.push( f.call(thisArg, obj[k], k, obj));\n    }\n  }\n};\n\nutil.any = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (f(arr[k], k, i++)) return true;\n  }\n  return false;\n};\n\nutil.all = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (!f(arr[k], k, i++)) return false;\n  }\n  return true;\n};\n\nutil.getbins = function(stats, maxbins) {\n  return util.bin({\n    min: stats.min,\n    max: stats.max,\n    maxbins: maxbins\n  });\n};\n\n/**\n * x[p[0]]...[p[n]] = val\n * @param noaugment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.setter = function(x, p, val, noaugment) {\n  for (var i=0; i<p.length-1; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  x[p[i]] = val;\n};\n\n\n/**\n * returns x[p[0]]...[p[n]]\n * @param augment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.getter = function(x, p, noaugment) {\n  for (var i=0; i<p.length; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  return x;\n};\n\nutil.error = function(msg) {\n  console.error('[VL Error]', msg);\n};\n\n\n},{\"datalib/src/bins/bins\":7,\"datalib/src/generate\":8,\"datalib/src/stats\":10,\"datalib/src/util\":12}]},{},[1])(1)\n});\n//# sourceMappingURL=data:application/json;base64,\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// This product includes color specifications and designs developed by Cynthia Brewer (http://colorbrewer.org/).\n// JavaScript specs as packaged in the D3 library (d3js.org). Please see license at http://colorbrewer.org/export/LICENSE.txt\n!function() {\n\nvar colorbrewer = {YlGn: {\n3: [\"#f7fcb9\",\"#addd8e\",\"#31a354\"],\n4: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#238443\"],\n5: [\"#ffffcc\",\"#c2e699\",\"#78c679\",\"#31a354\",\"#006837\"],\n6: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#31a354\",\"#006837\"],\n7: [\"#ffffcc\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n8: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#005a32\"],\n9: [\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"]\n},YlGnBu: {\n3: [\"#edf8b1\",\"#7fcdbb\",\"#2c7fb8\"],\n4: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#225ea8\"],\n5: [\"#ffffcc\",\"#a1dab4\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n6: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#2c7fb8\",\"#253494\"],\n7: [\"#ffffcc\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n8: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#0c2c84\"],\n9: [\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"]\n},GnBu: {\n3: [\"#e0f3db\",\"#a8ddb5\",\"#43a2ca\"],\n4: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#2b8cbe\"],\n5: [\"#f0f9e8\",\"#bae4bc\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n6: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#43a2ca\",\"#0868ac\"],\n7: [\"#f0f9e8\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n8: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#08589e\"],\n9: [\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"]\n},BuGn: {\n3: [\"#e5f5f9\",\"#99d8c9\",\"#2ca25f\"],\n4: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#238b45\"],\n5: [\"#edf8fb\",\"#b2e2e2\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n6: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#2ca25f\",\"#006d2c\"],\n7: [\"#edf8fb\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n8: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#005824\"],\n9: [\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},PuBuGn: {\n3: [\"#ece2f0\",\"#a6bddb\",\"#1c9099\"],\n4: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#02818a\"],\n5: [\"#f6eff7\",\"#bdc9e1\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n6: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#1c9099\",\"#016c59\"],\n7: [\"#f6eff7\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n8: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016450\"],\n9: [\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"]\n},PuBu: {\n3: [\"#ece7f2\",\"#a6bddb\",\"#2b8cbe\"],\n4: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#0570b0\"],\n5: [\"#f1eef6\",\"#bdc9e1\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n6: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#2b8cbe\",\"#045a8d\"],\n7: [\"#f1eef6\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n8: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#034e7b\"],\n9: [\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"]\n},BuPu: {\n3: [\"#e0ecf4\",\"#9ebcda\",\"#8856a7\"],\n4: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#88419d\"],\n5: [\"#edf8fb\",\"#b3cde3\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n6: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8856a7\",\"#810f7c\"],\n7: [\"#edf8fb\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n8: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#6e016b\"],\n9: [\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"]\n},RdPu: {\n3: [\"#fde0dd\",\"#fa9fb5\",\"#c51b8a\"],\n4: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#ae017e\"],\n5: [\"#feebe2\",\"#fbb4b9\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n6: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#c51b8a\",\"#7a0177\"],\n7: [\"#feebe2\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n8: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\"],\n9: [\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"]\n},PuRd: {\n3: [\"#e7e1ef\",\"#c994c7\",\"#dd1c77\"],\n4: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#ce1256\"],\n5: [\"#f1eef6\",\"#d7b5d8\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n6: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#dd1c77\",\"#980043\"],\n7: [\"#f1eef6\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n8: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#91003f\"],\n9: [\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"]\n},OrRd: {\n3: [\"#fee8c8\",\"#fdbb84\",\"#e34a33\"],\n4: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#d7301f\"],\n5: [\"#fef0d9\",\"#fdcc8a\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n6: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#e34a33\",\"#b30000\"],\n7: [\"#fef0d9\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n8: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#990000\"],\n9: [\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"]\n},YlOrRd: {\n3: [\"#ffeda0\",\"#feb24c\",\"#f03b20\"],\n4: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#e31a1c\"],\n5: [\"#ffffb2\",\"#fecc5c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n6: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"],\n7: [\"#ffffb2\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n8: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#b10026\"],\n9: [\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"]\n},YlOrBr: {\n3: [\"#fff7bc\",\"#fec44f\",\"#d95f0e\"],\n4: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#cc4c02\"],\n5: [\"#ffffd4\",\"#fed98e\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n6: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#d95f0e\",\"#993404\"],\n7: [\"#ffffd4\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n8: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#8c2d04\"],\n9: [\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"]\n},Purples: {\n3: [\"#efedf5\",\"#bcbddc\",\"#756bb1\"],\n4: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#6a51a3\"],\n5: [\"#f2f0f7\",\"#cbc9e2\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n6: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#756bb1\",\"#54278f\"],\n7: [\"#f2f0f7\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n8: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#4a1486\"],\n9: [\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"]\n},Blues: {\n3: [\"#deebf7\",\"#9ecae1\",\"#3182bd\"],\n4: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#2171b5\"],\n5: [\"#eff3ff\",\"#bdd7e7\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n6: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#3182bd\",\"#08519c\"],\n7: [\"#eff3ff\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n8: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#084594\"],\n9: [\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"]\n},Greens: {\n3: [\"#e5f5e0\",\"#a1d99b\",\"#31a354\"],\n4: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#238b45\"],\n5: [\"#edf8e9\",\"#bae4b3\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n6: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#31a354\",\"#006d2c\"],\n7: [\"#edf8e9\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n8: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#005a32\"],\n9: [\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"]\n},Oranges: {\n3: [\"#fee6ce\",\"#fdae6b\",\"#e6550d\"],\n4: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#d94701\"],\n5: [\"#feedde\",\"#fdbe85\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n6: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#e6550d\",\"#a63603\"],\n7: [\"#feedde\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n8: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#8c2d04\"],\n9: [\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"]\n},Reds: {\n3: [\"#fee0d2\",\"#fc9272\",\"#de2d26\"],\n4: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#cb181d\"],\n5: [\"#fee5d9\",\"#fcae91\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n6: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#de2d26\",\"#a50f15\"],\n7: [\"#fee5d9\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n8: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#99000d\"],\n9: [\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"]\n},Greys: {\n3: [\"#f0f0f0\",\"#bdbdbd\",\"#636363\"],\n4: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#525252\"],\n5: [\"#f7f7f7\",\"#cccccc\",\"#969696\",\"#636363\",\"#252525\"],\n6: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#636363\",\"#252525\"],\n7: [\"#f7f7f7\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n8: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\"],\n9: [\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"]\n},PuOr: {\n3: [\"#f1a340\",\"#f7f7f7\",\"#998ec3\"],\n4: [\"#e66101\",\"#fdb863\",\"#b2abd2\",\"#5e3c99\"],\n5: [\"#e66101\",\"#fdb863\",\"#f7f7f7\",\"#b2abd2\",\"#5e3c99\"],\n6: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n7: [\"#b35806\",\"#f1a340\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#998ec3\",\"#542788\"],\n8: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n9: [\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\"],\n10: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],\n11: [\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"]\n},BrBG: {\n3: [\"#d8b365\",\"#f5f5f5\",\"#5ab4ac\"],\n4: [\"#a6611a\",\"#dfc27d\",\"#80cdc1\",\"#018571\"],\n5: [\"#a6611a\",\"#dfc27d\",\"#f5f5f5\",\"#80cdc1\",\"#018571\"],\n6: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n7: [\"#8c510a\",\"#d8b365\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#5ab4ac\",\"#01665e\"],\n8: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n9: [\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\"],\n10: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],\n11: [\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"]\n},PRGn: {\n3: [\"#af8dc3\",\"#f7f7f7\",\"#7fbf7b\"],\n4: [\"#7b3294\",\"#c2a5cf\",\"#a6dba0\",\"#008837\"],\n5: [\"#7b3294\",\"#c2a5cf\",\"#f7f7f7\",\"#a6dba0\",\"#008837\"],\n6: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n7: [\"#762a83\",\"#af8dc3\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#7fbf7b\",\"#1b7837\"],\n8: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n9: [\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\"],\n10: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],\n11: [\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"]\n},PiYG: {\n3: [\"#e9a3c9\",\"#f7f7f7\",\"#a1d76a\"],\n4: [\"#d01c8b\",\"#f1b6da\",\"#b8e186\",\"#4dac26\"],\n5: [\"#d01c8b\",\"#f1b6da\",\"#f7f7f7\",\"#b8e186\",\"#4dac26\"],\n6: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n7: [\"#c51b7d\",\"#e9a3c9\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#a1d76a\",\"#4d9221\"],\n8: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n9: [\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\"],\n10: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],\n11: [\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"]\n},RdBu: {\n3: [\"#ef8a62\",\"#f7f7f7\",\"#67a9cf\"],\n4: [\"#ca0020\",\"#f4a582\",\"#92c5de\",\"#0571b0\"],\n5: [\"#ca0020\",\"#f4a582\",\"#f7f7f7\",\"#92c5de\",\"#0571b0\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#67a9cf\",\"#2166ac\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"]\n},RdGy: {\n3: [\"#ef8a62\",\"#ffffff\",\"#999999\"],\n4: [\"#ca0020\",\"#f4a582\",\"#bababa\",\"#404040\"],\n5: [\"#ca0020\",\"#f4a582\",\"#ffffff\",\"#bababa\",\"#404040\"],\n6: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n7: [\"#b2182b\",\"#ef8a62\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#999999\",\"#4d4d4d\"],\n8: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n9: [\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\"],\n10: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],\n11: [\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"]\n},RdYlBu: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91bfdb\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abd9e9\",\"#2c7bb6\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abd9e9\",\"#2c7bb6\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#91bfdb\",\"#4575b4\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"]\n},Spectral: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#99d594\"],\n4: [\"#d7191c\",\"#fdae61\",\"#abdda4\",\"#2b83ba\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#abdda4\",\"#2b83ba\"],\n6: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n7: [\"#d53e4f\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#99d594\",\"#3288bd\"],\n8: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n9: [\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\"],\n10: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],\n11: [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"]\n},RdYlGn: {\n3: [\"#fc8d59\",\"#ffffbf\",\"#91cf60\"],\n4: [\"#d7191c\",\"#fdae61\",\"#a6d96a\",\"#1a9641\"],\n5: [\"#d7191c\",\"#fdae61\",\"#ffffbf\",\"#a6d96a\",\"#1a9641\"],\n6: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n7: [\"#d73027\",\"#fc8d59\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#91cf60\",\"#1a9850\"],\n8: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n9: [\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\"],\n10: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],\n11: [\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"]\n},Accent: {\n3: [\"#7fc97f\",\"#beaed4\",\"#fdc086\"],\n4: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\"],\n5: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\"],\n6: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\"],\n7: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\"],\n8: [\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"]\n},Dark2: {\n3: [\"#1b9e77\",\"#d95f02\",\"#7570b3\"],\n4: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\"],\n5: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\"],\n6: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\"],\n7: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\"],\n8: [\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"]\n},Paired: {\n3: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\"],\n4: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\"],\n5: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\"],\n6: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\"],\n7: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\"],\n8: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\"],\n9: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\"],\n10: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\"],\n11: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\"],\n12: [\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"]\n},Pastel1: {\n3: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\"],\n4: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\"],\n5: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\"],\n6: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\"],\n7: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\"],\n8: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\"],\n9: [\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]\n},Pastel2: {\n3: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\"],\n4: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\"],\n5: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\"],\n6: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\"],\n7: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\"],\n8: [\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"]\n},Set1: {\n3: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\"],\n4: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\"],\n5: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\"],\n6: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\"],\n7: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\"],\n8: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\"],\n9: [\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"]\n},Set2: {\n3: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\"],\n4: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\"],\n5: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\"],\n6: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\"],\n7: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\"],\n8: [\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"]\n},Set3: {\n3: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\"],\n4: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\"],\n5: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\"],\n6: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\"],\n7: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\"],\n8: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\"],\n9: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\"],\n10: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\"],\n11: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\"],\n12: [\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"]\n}};\n\nif (typeof define === \"function\" && define.amd) {\n    define(colorbrewer);\n} else if (typeof module === \"object\" && module.exports) {\n    module.exports = colorbrewer;\n} else {\n    this.colorbrewer = colorbrewer;\n}\n\n}();\n","module.exports = require('./colorbrewer.js');\n","if (typeof Map === \"undefined\") {\n  Map = function() {};\n  Map.prototype = {\n    set: function(k, v) { this[\"$\" + k] = v; return this; },\n    get: function(k) { return this[\"$\" + k]; },\n    has: function(k) { return \"$\" + k in this; }\n  };\n}\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  factory((global.color = {}));\n}(this, function (exports) { 'use strict';\n\n  function Color() {}\n\n  Color.prototype = {\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  };\n\n  var named = (new Map)\n      .set(\"aliceblue\", 0xf0f8ff)\n      .set(\"antiquewhite\", 0xfaebd7)\n      .set(\"aqua\", 0x00ffff)\n      .set(\"aquamarine\", 0x7fffd4)\n      .set(\"azure\", 0xf0ffff)\n      .set(\"beige\", 0xf5f5dc)\n      .set(\"bisque\", 0xffe4c4)\n      .set(\"black\", 0x000000)\n      .set(\"blanchedalmond\", 0xffebcd)\n      .set(\"blue\", 0x0000ff)\n      .set(\"blueviolet\", 0x8a2be2)\n      .set(\"brown\", 0xa52a2a)\n      .set(\"burlywood\", 0xdeb887)\n      .set(\"cadetblue\", 0x5f9ea0)\n      .set(\"chartreuse\", 0x7fff00)\n      .set(\"chocolate\", 0xd2691e)\n      .set(\"coral\", 0xff7f50)\n      .set(\"cornflowerblue\", 0x6495ed)\n      .set(\"cornsilk\", 0xfff8dc)\n      .set(\"crimson\", 0xdc143c)\n      .set(\"cyan\", 0x00ffff)\n      .set(\"darkblue\", 0x00008b)\n      .set(\"darkcyan\", 0x008b8b)\n      .set(\"darkgoldenrod\", 0xb8860b)\n      .set(\"darkgray\", 0xa9a9a9)\n      .set(\"darkgreen\", 0x006400)\n      .set(\"darkgrey\", 0xa9a9a9)\n      .set(\"darkkhaki\", 0xbdb76b)\n      .set(\"darkmagenta\", 0x8b008b)\n      .set(\"darkolivegreen\", 0x556b2f)\n      .set(\"darkorange\", 0xff8c00)\n      .set(\"darkorchid\", 0x9932cc)\n      .set(\"darkred\", 0x8b0000)\n      .set(\"darksalmon\", 0xe9967a)\n      .set(\"darkseagreen\", 0x8fbc8f)\n      .set(\"darkslateblue\", 0x483d8b)\n      .set(\"darkslategray\", 0x2f4f4f)\n      .set(\"darkslategrey\", 0x2f4f4f)\n      .set(\"darkturquoise\", 0x00ced1)\n      .set(\"darkviolet\", 0x9400d3)\n      .set(\"deeppink\", 0xff1493)\n      .set(\"deepskyblue\", 0x00bfff)\n      .set(\"dimgray\", 0x696969)\n      .set(\"dimgrey\", 0x696969)\n      .set(\"dodgerblue\", 0x1e90ff)\n      .set(\"firebrick\", 0xb22222)\n      .set(\"floralwhite\", 0xfffaf0)\n      .set(\"forestgreen\", 0x228b22)\n      .set(\"fuchsia\", 0xff00ff)\n      .set(\"gainsboro\", 0xdcdcdc)\n      .set(\"ghostwhite\", 0xf8f8ff)\n      .set(\"gold\", 0xffd700)\n      .set(\"goldenrod\", 0xdaa520)\n      .set(\"gray\", 0x808080)\n      .set(\"green\", 0x008000)\n      .set(\"greenyellow\", 0xadff2f)\n      .set(\"grey\", 0x808080)\n      .set(\"honeydew\", 0xf0fff0)\n      .set(\"hotpink\", 0xff69b4)\n      .set(\"indianred\", 0xcd5c5c)\n      .set(\"indigo\", 0x4b0082)\n      .set(\"ivory\", 0xfffff0)\n      .set(\"khaki\", 0xf0e68c)\n      .set(\"lavender\", 0xe6e6fa)\n      .set(\"lavenderblush\", 0xfff0f5)\n      .set(\"lawngreen\", 0x7cfc00)\n      .set(\"lemonchiffon\", 0xfffacd)\n      .set(\"lightblue\", 0xadd8e6)\n      .set(\"lightcoral\", 0xf08080)\n      .set(\"lightcyan\", 0xe0ffff)\n      .set(\"lightgoldenrodyellow\", 0xfafad2)\n      .set(\"lightgray\", 0xd3d3d3)\n      .set(\"lightgreen\", 0x90ee90)\n      .set(\"lightgrey\", 0xd3d3d3)\n      .set(\"lightpink\", 0xffb6c1)\n      .set(\"lightsalmon\", 0xffa07a)\n      .set(\"lightseagreen\", 0x20b2aa)\n      .set(\"lightskyblue\", 0x87cefa)\n      .set(\"lightslategray\", 0x778899)\n      .set(\"lightslategrey\", 0x778899)\n      .set(\"lightsteelblue\", 0xb0c4de)\n      .set(\"lightyellow\", 0xffffe0)\n      .set(\"lime\", 0x00ff00)\n      .set(\"limegreen\", 0x32cd32)\n      .set(\"linen\", 0xfaf0e6)\n      .set(\"magenta\", 0xff00ff)\n      .set(\"maroon\", 0x800000)\n      .set(\"mediumaquamarine\", 0x66cdaa)\n      .set(\"mediumblue\", 0x0000cd)\n      .set(\"mediumorchid\", 0xba55d3)\n      .set(\"mediumpurple\", 0x9370db)\n      .set(\"mediumseagreen\", 0x3cb371)\n      .set(\"mediumslateblue\", 0x7b68ee)\n      .set(\"mediumspringgreen\", 0x00fa9a)\n      .set(\"mediumturquoise\", 0x48d1cc)\n      .set(\"mediumvioletred\", 0xc71585)\n      .set(\"midnightblue\", 0x191970)\n      .set(\"mintcream\", 0xf5fffa)\n      .set(\"mistyrose\", 0xffe4e1)\n      .set(\"moccasin\", 0xffe4b5)\n      .set(\"navajowhite\", 0xffdead)\n      .set(\"navy\", 0x000080)\n      .set(\"oldlace\", 0xfdf5e6)\n      .set(\"olive\", 0x808000)\n      .set(\"olivedrab\", 0x6b8e23)\n      .set(\"orange\", 0xffa500)\n      .set(\"orangered\", 0xff4500)\n      .set(\"orchid\", 0xda70d6)\n      .set(\"palegoldenrod\", 0xeee8aa)\n      .set(\"palegreen\", 0x98fb98)\n      .set(\"paleturquoise\", 0xafeeee)\n      .set(\"palevioletred\", 0xdb7093)\n      .set(\"papayawhip\", 0xffefd5)\n      .set(\"peachpuff\", 0xffdab9)\n      .set(\"peru\", 0xcd853f)\n      .set(\"pink\", 0xffc0cb)\n      .set(\"plum\", 0xdda0dd)\n      .set(\"powderblue\", 0xb0e0e6)\n      .set(\"purple\", 0x800080)\n      .set(\"rebeccapurple\", 0x663399)\n      .set(\"red\", 0xff0000)\n      .set(\"rosybrown\", 0xbc8f8f)\n      .set(\"royalblue\", 0x4169e1)\n      .set(\"saddlebrown\", 0x8b4513)\n      .set(\"salmon\", 0xfa8072)\n      .set(\"sandybrown\", 0xf4a460)\n      .set(\"seagreen\", 0x2e8b57)\n      .set(\"seashell\", 0xfff5ee)\n      .set(\"sienna\", 0xa0522d)\n      .set(\"silver\", 0xc0c0c0)\n      .set(\"skyblue\", 0x87ceeb)\n      .set(\"slateblue\", 0x6a5acd)\n      .set(\"slategray\", 0x708090)\n      .set(\"slategrey\", 0x708090)\n      .set(\"snow\", 0xfffafa)\n      .set(\"springgreen\", 0x00ff7f)\n      .set(\"steelblue\", 0x4682b4)\n      .set(\"tan\", 0xd2b48c)\n      .set(\"teal\", 0x008080)\n      .set(\"thistle\", 0xd8bfd8)\n      .set(\"tomato\", 0xff6347)\n      .set(\"turquoise\", 0x40e0d0)\n      .set(\"violet\", 0xee82ee)\n      .set(\"wheat\", 0xf5deb3)\n      .set(\"white\", 0xffffff)\n      .set(\"whitesmoke\", 0xf5f5f5)\n      .set(\"yellow\", 0xffff00)\n      .set(\"yellowgreen\", 0x9acd32);\n\n  function Rgb(r, g, b) {\n    this.r = Math.max(0, Math.min(255, Math.round(r)));\n    this.g = Math.max(0, Math.min(255, Math.round(g)));\n    this.b = Math.max(0, Math.min(255, Math.round(b)));\n  }\n\n  var _prototype = Rgb.prototype = new Color;\n\n  var darker = .7;\n\n  _prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  var brighter = 1 / darker;\n\n  _prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k);\n  };\n\n  _prototype.rgb = function() {\n    return this;\n  };\n\n  function format(r, g, b) {\n    if (isNaN(r)) r = 0;\n    if (isNaN(g)) g = 0;\n    if (isNaN(b)) b = 0;\n    return \"#\"\n        + (r < 16 ? \"0\" + r.toString(16) : r.toString(16))\n        + (g < 16 ? \"0\" + g.toString(16) : g.toString(16))\n        + (b < 16 ? \"0\" + b.toString(16) : b.toString(16));\n  }\n\n  _prototype.toString = function() {\n    return format(this.r, this.g, this.b);\n  };\n\n  var rgb = function(r, g, b) {\n    if (arguments.length === 1) {\n      if (!(r instanceof Color)) r = color(r);\n      if (r) {\n        r = r.rgb();\n        b = r.b;\n        g = r.g;\n        r = r.r;\n      } else {\n        r = g = b = NaN;\n      }\n    }\n    return new Rgb(r, g, b);\n  }\n\n  function rgbn(n) {\n    return rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff);\n  }\n\n  function Hsl(h, s, l) {\n    this.h = +h;\n    this.s = Math.max(0, Math.min(1, +s));\n    this.l = Math.max(0, Math.min(1, +l));\n  }\n\n  var __prototype = Hsl.prototype = new Color;\n\n  __prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };\n\n  __prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k);\n  };/* From FvD 13.37, CSS Color Module Level 3 */\n\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  __prototype.rgb = function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l <= .5 ? l * (1 + s) : l + s - l * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2)\n    );\n  };\n\n  var hsl = function(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hsl) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Color)) h = color(h);\n        if (h) {\n          if (h instanceof Hsl) return h;\n          h = h.rgb();\n          var r = h.r / 255,\n              g = h.g / 255,\n              b = h.b / 255,\n              min = Math.min(r, g, b),\n              max = Math.max(r, g, b),\n              range = max - min;\n          l = (max + min) / 2;\n          if (range) {\n            s = l < .5 ? range / (max + min) : range / (2 - max - min);\n            if (r === max) h = (g - b) / range + (g < b) * 6;\n            else if (g === max) h = (b - r) / range + 2;\n            else h = (r - g) / range + 4;\n            h *= 60;\n          } else {\n            h = NaN;\n            s = l > 0 && l < 1 ? 0 : h;\n          }\n        } else {\n          h = s = l = NaN;\n        }\n      }\n    }\n    return new Hsl(h, s, l);\n  }\n\n  var reHex3 = /^#([0-9a-f]{3})$/,\n      reHex6 = /^#([0-9a-f]{6})$/,\n      reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/,\n      reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/,\n      reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\n  var color = function(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf))) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? rgb(m[1], m[2], m[3]) // rgb(255,0,0)\n        : (m = reRgbPercent.exec(format)) ? rgb(m[1] * 2.55, m[2] * 2.55, m[3] * 2.55) // rgb(100%,0%,0%)\n        : (m = reHslPercent.exec(format)) ? hsl(m[1], m[2] * .01, m[3] * .01) // hsl(120,50%,50%)\n        : named.has(format) ? rgbn(named.get(format))\n        : null;\n  }// Done lazily to avoid circular dependency between Color, Rgb and Hsl.\n\n  color.prototype = Color.prototype;\n  rgb.prototype = Rgb.prototype;\n  hsl.prototype = Hsl.prototype;\n\n  function Lab(l, a, b) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n  }\n\n  var ___prototype = Lab.prototype = new Color;\n\n  var Kn = 18;\n\n  ___prototype.brighter = function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  ___prototype.darker = function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b);\n  };\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  var Xn = 0.950470, // D65 standard referent\n      Yn = 1,\n      Zn = 1.088830,\n      t0 = 4 / 29,\n      t1 = 6 / 29,\n      t2 = 3 * t1 * t1,\n      t3 = t1 * t1 * t1;\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  ___prototype.rgb = function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z)\n    );\n  };\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  var deg2rad = Math.PI / 180;\n\n  function Hcl(h, c, l) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n  }\n\n  var ____prototype = Hcl.prototype = new Color;\n\n  ____prototype.brighter = function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k));\n  };\n\n  ____prototype.darker = function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k));\n  };\n\n  ____prototype.rgb = function() {\n    return lab(this).rgb();\n  };\n\n  var lab = function(l, a, b) {\n    if (arguments.length === 1) {\n      if (l instanceof Lab) {\n        b = l.b;\n        a = l.a;\n        l = l.l;\n      } else if (l instanceof Hcl) {\n        var h = l.h * deg2rad;\n        b = Math.sin(h) * l.c;\n        a = Math.cos(h) * l.c;\n        l = l.l;\n      } else {\n        if (!(l instanceof Rgb)) l = rgb(l);\n        var r = rgb2xyz(l.r),\n            g = rgb2xyz(l.g),\n            b = rgb2xyz(l.b),\n            x = xyz2lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / Xn),\n            y = xyz2lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Yn),\n            z = xyz2lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Zn);\n        b = 200 * (y - z);\n        a = 500 * (x - y);\n        l = 116 * y - 16;\n      }\n    }\n    return new Lab(l, a, b);\n  }\n  lab.prototype = Lab.prototype;\n  var rad2deg = 180 / Math.PI;\n\n  var hcl = function(h, c, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Hcl) {\n        l = h.l;\n        c = h.c;\n        h = h.h;\n      } else {\n        if (!(h instanceof Lab)) h = lab(h);\n        l = h.l;\n        c = Math.sqrt(h.a * h.a + h.b * h.b);\n        h = Math.atan2(h.b, h.a) * rad2deg;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Hcl(h, c, l);\n  }\n  hcl.prototype = Hcl.prototype;\n\n  function Cubehelix(h, s, l) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n  }\n\n  var prototype = Cubehelix.prototype = new Color;\n\n  prototype.brighter = function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  prototype.darker = function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k);\n  };\n\n  var gamma = 1, // Default gamma. TODO Customize.\n      A = -0.14861,\n      B = +1.78277,\n      C = -0.29227,\n      D = -0.90649,\n      E = +1.97294,\n      ED = E * D,\n      EB = E * B,\n      BC_DA = B * C - D * A;\n\n  var cubehelix = function(h, s, l) {\n    if (arguments.length === 1) {\n      if (h instanceof Cubehelix) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n      } else {\n        if (!(h instanceof Rgb)) h = rgb(h);\n        var r = h.r / 255, g = h.g / 255, b = h.b / 255;\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB);\n        var bl = b - l, k = (E * (g - l) - C * bl) / D, lgamma = Math.pow(l, gamma);\n        s = Math.sqrt(k * k + bl * bl) / (E * lgamma * (1 - lgamma)); // NaN if lgamma=0 or lgamma=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n        if (h < 0) h += 360;\n      }\n    }\n    return new Cubehelix(h, s, l);\n  }\n\n  prototype.rgb = function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = Math.pow(this.l, gamma),\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh))\n    );\n  };\n  cubehelix.prototype = Cubehelix.prototype;\n\n  var interpolateCubehelixLong = function(a, b) {\n    a = cubehelix(a);\n    b = cubehelix(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n  var deltaHue = function(h, h0) {\n    var delta = (h - h0) % 360;\n    return delta + (delta > 180 ? -360 : delta < -180 ? 360 : 0);\n  }\n\n  var interpolateCubehelix = function(a, b) {\n    a = cubehelix(a);\n    b = cubehelix(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateHclLong = function(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateHcl = function(a, b) {\n    a = hcl(a);\n    b = hcl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        ac = isNaN(a.c) ? b.c : a.c,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bc = isNaN(b.c) ? 0 : b.c - ac,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.c = ac + bc * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateLab = function(a, b) {\n    a = lab(a);\n    b = lab(b);\n    var al = a.l,\n        aa = a.a,\n        ab = a.b,\n        bl = b.l - al,\n        ba = b.a - aa,\n        bb = b.b - ab;\n    return function(t) {\n      a.l = al + bl * t;\n      a.a = aa + ba * t;\n      a.b = ab + bb * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateHslLong = function(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : b.h - ah,\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateHsl = function(a, b) {\n    a = hsl(a);\n    b = hsl(b);\n    var ah = isNaN(a.h) ? b.h : a.h,\n        as = isNaN(a.s) ? b.s : a.s,\n        al = a.l,\n        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),\n        bs = isNaN(b.s) ? 0 : b.s - as,\n        bl = b.l - al;\n    return function(t) {\n      a.h = ah + bh * t;\n      a.s = as + bs * t;\n      a.l = al + bl * t;\n      return a + \"\";\n    };\n  }\n\n  var interpolateRgb = function(a, b) {\n    a = rgb(a);\n    b = rgb(b);\n    var ar = a.r,\n        ag = a.g,\n        ab = a.b,\n        br = b.r - ar,\n        bg = b.g - ag,\n        bb = b.b - ab;\n    return function(t) {\n      return format(Math.round(ar + br * t), Math.round(ag + bg * t), Math.round(ab + bb * t));\n    };\n  }\n\n  exports.color = color;\n  exports.rgb = rgb;\n  exports.hsl = hsl;\n  exports.lab = lab;\n  exports.hcl = hcl;\n  exports.cubehelix = cubehelix;\n  exports.interpolateRgb = interpolateRgb;\n  exports.interpolateHsl = interpolateHsl;\n  exports.interpolateHslLong = interpolateHslLong;\n  exports.interpolateLab = interpolateLab;\n  exports.interpolateHcl = interpolateHcl;\n  exports.interpolateHclLong = interpolateHclLong;\n  exports.interpolateCubehelix = interpolateCubehelix;\n  exports.interpolateCubehelixLong = interpolateCubehelixLong;\n\n}));","var util = require('../util');\nvar units = require('../time-units');\nvar EPSILON = 1e-15;\n\nfunction bins(opt) {\n  opt = opt || {};\n\n  // determine range\n  var maxb = opt.maxbins || 15,\n      base = opt.base || 10,\n      logb = Math.log(base),\n      div = opt.div || [5, 2],      \n      min = opt.min,\n      max = opt.max,\n      span = max - min,\n      step, level, minstep, precision, v, i, eps;\n\n  if (opt.step) {\n    // if step size is explicitly given, use that\n    step = opt.step;\n  } else if (opt.steps) {\n    // if provided, limit choice to acceptable step sizes\n    step = opt.steps[Math.min(\n      opt.steps.length - 1,\n      bisect(opt.steps, span/maxb, 0, opt.steps.length)\n    )];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = opt.minstep || 0;\n    step = Math.max(\n      minstep,\n      Math.pow(base, Math.round(Math.log(span) / logb) - level)\n    );\n    \n    // increase step size if too many bins\n    do { step *= base; } while (Math.ceil(span/step) > maxb);\n\n    // decrease step size if allowed\n    for (i=0; i<div.length; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  }\n\n  // update precision, min and max\n  v = Math.log(step);\n  precision = v >= 0 ? 0 : ~~(-v / logb) + 1;\n  eps = Math.pow(base, -precision - 1);\n  min = Math.min(min, Math.floor(min / step + eps) * step);\n  max = Math.ceil(max / step) * step;\n\n  return {\n    start: min,\n    stop:  max,\n    step:  step,\n    unit:  {precision: precision},\n    value: value,\n    index: index\n  };\n}\n\nfunction bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (util.cmp(a[mid], x) < 0) { lo = mid + 1; }\n    else { hi = mid; }\n  }\n  return lo;\n}\n\nfunction value(v) {\n  return this.step * Math.floor(v / this.step + EPSILON);\n}\n\nfunction index(v) {\n  return Math.floor((v - this.start) / this.step + EPSILON);\n}\n\nfunction date_value(v) {\n  return this.unit.date(value.call(this, v));\n}\n\nfunction date_index(v) {\n  return index.call(this, this.unit.unit(v));\n}\n\nbins.date = function(opt) {\n  opt = opt || {};\n\n  // find time step, then bin\n  var dmin = opt.min,\n      dmax = opt.max,\n      maxb = opt.maxbins || 20,\n      minb = opt.minbins || 4,\n      span = (+dmax) - (+dmin),\n      unit = opt.unit ? units[opt.unit] : units.find(span, minb, maxb),\n      spec = bins({\n        min:     unit.min != null ? unit.min : unit.unit(dmin),\n        max:     unit.max != null ? unit.max : unit.unit(dmax),\n        maxbins: maxb,\n        minstep: unit.minstep,\n        steps:   unit.step\n      });\n\n  spec.unit = unit;\n  spec.index = date_index;\n  if (!opt.raw) spec.value = date_value;\n  return spec;\n};\n\nmodule.exports = bins;\n","var gen = module.exports = {};\n\ngen.repeat = function(val, n) {\n  var a = Array(n), i;\n  for (i=0; i<n; ++i) a[i] = val;\n  return a;\n};\n\ngen.zeros = function(n) {\n  return gen.repeat(0, n);\n};\n\ngen.range = function(start, stop, step) {\n  if (arguments.length < 3) {\n    step = 1;\n    if (arguments.length < 2) {\n      stop = start;\n      start = 0;\n    }\n  }\n  if ((stop - start) / step == Infinity) throw new Error('Infinite range');\n  var range = [], i = -1, j;\n  if (step < 0) while ((j = start + step * ++i) > stop) range.push(j);\n  else while ((j = start + step * ++i) < stop) range.push(j);\n  return range;\n};\n\ngen.random = {};\n\ngen.random.uniform = function(min, max) {\n  if (max === undefined) {\n    max = min;\n    min = 0;\n  }\n  var d = max - min;\n  var f = function() {\n    return min + d * Math.random();\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.integer = function(a, b) {\n  if (b === undefined) {\n    b = a;\n    a = 0;\n  }\n  var d = b - a;\n  var f = function() {\n    return a + Math.floor(d * Math.random());\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};\n\ngen.random.normal = function(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev || 1;\n  var next;\n  var f = function() {\n    var x = 0, y = 0, rds, c;\n    if (next !== undefined) {\n      x = next;\n      next = undefined;\n      return x;\n    }\n    do {\n      x = Math.random()*2-1;\n      y = Math.random()*2-1;\n      rds = x*x + y*y;\n    } while (rds === 0 || rds > 1);\n    c = Math.sqrt(-2*Math.log(rds)/rds); // Box-Muller transform\n    next = mean + y*c*stdev;\n    return mean + x*c*stdev;\n  };\n  f.samples = function(n) { return gen.zeros(n).map(f); };\n  return f;\n};","var util = require('../util');\n\nvar TYPES = '__types__';\n\nvar PARSERS = {\n  boolean: util.boolean,\n  integer: util.number,\n  number:  util.number,\n  date:    util.date,\n  string:  function(x) { return x==='' ? null : x; }\n};\n\nvar TESTS = {\n  boolean: function(x) { return x==='true' || x==='false' || util.isBoolean(x); },\n  integer: function(x) { return TESTS.number(x) && (x=+x) === ~~x; },\n  number: function(x) { return !isNaN(+x) && !util.isDate(x); },\n  date: function(x) { return !isNaN(Date.parse(x)); }\n};\n\nfunction annotation(data, types) {\n  if (!types) return data && data[TYPES] || null;\n  data[TYPES] = types;\n}\n\nfunction type(values, f) {\n  f = util.$(f);\n  var v, i, n;\n\n  // if data array has type annotations, use them\n  if (values[TYPES]) {\n    v = f(values[TYPES]);\n    if (util.isString(v)) return v;\n  }\n\n  for (i=0, n=values.length; !util.isValid(v) && i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n  }\n\n  return util.isDate(v) ? 'date' :\n    util.isNumber(v)    ? 'number' :\n    util.isBoolean(v)   ? 'boolean' :\n    util.isString(v)    ? 'string' : null;\n}\n\nfunction typeAll(data, fields) {\n  if (!data.length) return;\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    return (types[f] = type(data, f), types);\n  }, {});\n}\n\nfunction infer(values, f) {\n  f = util.$(f);\n  var i, j, v;\n\n  // types to test for, in precedence order\n  var types = ['boolean', 'integer', 'number', 'date'];\n\n  for (i=0; i<values.length; ++i) {\n    // get next value to test\n    v = f ? f(values[i]) : values[i];\n    // test value against remaining types\n    for (j=0; j<types.length; ++j) {\n      if (util.isValid(v) && !TESTS[types[j]](v)) {\n        types.splice(j, 1);\n        j -= 1;\n      }\n    }\n    // if no types left, return 'string'\n    if (types.length === 0) return 'string';\n  }\n\n  return types[0];\n}\n\nfunction inferAll(data, fields) {\n  fields = fields || util.keys(data[0]);\n  return fields.reduce(function(types, f) {\n    var type = infer(data, f);\n    if (PARSERS[type]) types[f] = type;\n    return types;\n  }, {});\n}\n\ntype.annotation = annotation;\ntype.all = typeAll;\ntype.infer = infer;\ntype.inferAll = inferAll;\ntype.parsers = PARSERS;\nmodule.exports = type;","var util = require('./util');\nvar type = require('./import/type');\nvar gen = require('./generate');\nvar stats = {};\n\n// Collect unique values.\n// Output: an array of unique values, in first-observed order\nstats.unique = function(values, f, results) {\n  f = util.$(f);\n  results = results || [];\n  var u = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    results.push(v);\n  }\n  return results;\n};\n\n// Return the length of the input array.\nstats.count = function(values) {\n  return values && values.length || 0;\n};\n\n// Count the number of non-null, non-undefined, non-NaN values.\nstats.count.valid = function(values, f) {\n  f = util.$(f);\n  var v, i, n, valid = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) valid += 1;\n  }\n  return valid;\n};\n\n// Count the number of null or undefined values.\nstats.count.missing = function(values, f) {\n  f = util.$(f);\n  var v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v == null) count += 1;\n  }\n  return count;\n};\n\n// Count the number of distinct values.\n// Null, undefined and NaN are each considered distinct values.\nstats.count.distinct = function(values, f) {\n  f = util.$(f);\n  var u = {}, v, i, n, count = 0;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (v in u) continue;\n    u[v] = 1;\n    count += 1;\n  }\n  return count;\n};\n\n// Construct a map from distinct values to occurrence counts.\nstats.count.map = function(values, f) {\n  f = util.$(f);\n  var map = {}, v, i, n;\n  for (i=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    map[v] = (v in map) ? map[v] + 1 : 1;\n  }\n  return map;\n};\n\n// Compute the median of an array of numbers.\nstats.median = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  return stats.quantile(values, 0.5);\n};\n\n// Computes the quartile boundaries of an array of numbers.\nstats.quartile = function(values, f) {\n  if (f) values = values.map(util.$(f));\n  values = values.filter(util.isValid).sort(util.cmp);\n  var q = stats.quantile;\n  return [q(values, 0.25), q(values, 0.50), q(values, 0.75)];\n};\n\n// Compute the quantile of a sorted array of numbers.\n// Adapted from the D3.js implementation.\nstats.quantile = function(values, f, p) {\n  if (p === undefined) { p = f; f = util.identity; }\n  f = util.$(f);\n  var H = (values.length - 1) * p + 1,\n      h = Math.floor(H),\n      v = +f(values[h - 1]),\n      e = H - h;\n  return e ? v + e * (f(values[h]) - v) : v;\n};\n\n// Compute the sum of an array of numbers.\nstats.sum = function(values, f) {\n  f = util.$(f);\n  for (var sum=0, i=0, n=values.length, v; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) sum += v;\n  }\n  return sum;\n};\n\n// Compute the mean (average) of an array of numbers.\nstats.mean = function(values, f) {\n  f = util.$(f);\n  var mean = 0, delta, i, n, c, v;\n  for (i=0, c=0, n=values.length; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n    }\n  }\n  return mean;\n};\n\n// Compute the sample variance of an array of numbers.\nstats.variance = function(values, f) {\n  f = util.$(f);\n  if (!util.isArray(values) || values.length===0) return 0;\n  var mean = 0, M2 = 0, delta, i, c, v;\n  for (i=0, c=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      delta = v - mean;\n      mean = mean + delta / (++c);\n      M2 = M2 + delta * (v - mean);\n    }\n  }\n  M2 = M2 / (c - 1);\n  return M2;\n};\n\n// Compute the sample standard deviation of an array of numbers.\nstats.stdev = function(values, f) {\n  return Math.sqrt(stats.variance(values, f));\n};\n\n// Compute the Pearson mode skewness ((median-mean)/stdev) of an array of numbers.\nstats.modeskew = function(values, f) {\n  var avg = stats.mean(values, f),\n      med = stats.median(values, f),\n      std = stats.stdev(values, f);\n  return std === 0 ? 0 : (avg - med) / std;\n};\n\n// Find the minimum value in an array.\nstats.min = function(values, f) {\n  return stats.extent(values, f)[0];\n};\n\n// Find the maximum value in an array.\nstats.max = function(values, f) {\n  return stats.extent(values, f)[1];\n};\n\n// Find the minimum and maximum of an array of values.\nstats.extent = function(values, f) {\n  f = util.$(f);\n  var a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) a = v;\n      if (v > b) b = v;\n    }\n  }\n  return [a, b];\n};\n\n// Find the integer indices of the minimum and maximum values.\nstats.extent.index = function(values, f) {\n  f = util.$(f);\n  var x = -1, y = -1, a, b, v, i, n = values.length;\n  for (i=0; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) { a = b = v; x = y = i; break; }\n  }\n  for (; i<n; ++i) {\n    v = f ? f(values[i]) : values[i];\n    if (util.isValid(v)) {\n      if (v < a) { a = v; x = i; }\n      if (v > b) { b = v; y = i; }\n    }\n  }\n  return [x, y];\n};\n\n// Compute the dot product of two arrays of numbers.\nstats.dot = function(values, a, b) {\n  var sum = 0, i, v;\n  if (!b) {\n    if (values.length !== a.length) {\n      throw Error('Array lengths must match.');\n    }\n    for (i=0; i<values.length; ++i) {\n      v = values[i] * a[i];\n      if (!Number.isNaN(v)) sum += v;\n    }\n  } else {\n    a = util.$(a);\n    b = util.$(b);\n    for (i=0; i<values.length; ++i) {\n      v = a(values[i]) * b(values[i]);\n      if (!Number.isNaN(v)) sum += v;\n    }\n  }\n  return sum;\n};\n\n// Compute ascending rank scores for an array of values.\n// Ties are assigned their collective mean rank.\nstats.rank = function(values, f) {\n  f = util.$(f) || util.identity;\n  var a = values.map(function(v, i) {\n      return {idx: i, val: f(v)};\n    })\n    .sort(util.comparator('val'));\n\n  var n = values.length,\n      r = Array(n),\n      tie = -1, p = {}, i, v, mu;\n\n  for (i=0; i<n; ++i) {\n    v = a[i].val;\n    if (tie < 0 && p === v) {\n      tie = i - 1;\n    } else if (tie > -1 && p !== v) {\n      mu = 1 + (i-1 + tie) / 2;\n      for (; tie<i; ++tie) r[a[tie].idx] = mu;\n      tie = -1;\n    }\n    r[a[i].idx] = i + 1;\n    p = v;\n  }\n\n  if (tie > -1) {\n    mu = 1 + (n-1 + tie) / 2;\n    for (; tie<n; ++tie) r[a[tie].idx] = mu;\n  }\n\n  return r;\n};\n\n// Compute the sample Pearson product-moment correlation of two arrays of numbers.\nstats.cor = function(values, a, b) {\n  var fn = b;\n  b = fn ? values.map(util.$(b)) : a;\n  a = fn ? values.map(util.$(a)) : values;\n\n  var dot = stats.dot(a, b),\n      mua = stats.mean(a),\n      mub = stats.mean(b),\n      sda = stats.stdev(a),\n      sdb = stats.stdev(b),\n      n = values.length;\n\n  return (dot - n*mua*mub) / ((n-1) * sda * sdb);\n};\n\n// Compute the Spearman rank correlation of two arrays of values.\nstats.cor.rank = function(values, a, b) {\n  var ra = b ? stats.rank(values, util.$(a)) : stats.rank(values),\n      rb = b ? stats.rank(values, util.$(b)) : stats.rank(a),\n      n = values.length, i, s, d;\n\n  for (i=0, s=0; i<n; ++i) {\n    d = ra[i] - rb[i];\n    s += d * d;\n  }\n\n  return 1 - 6*s / (n * (n*n-1));\n};\n\n// Compute the distance correlation of two arrays of numbers.\n// http://en.wikipedia.org/wiki/Distance_correlation\nstats.cor.dist = function(values, a, b) {\n  var X = b ? values.map(util.$(a)) : values,\n      Y = b ? values.map(util.$(b)) : a;\n\n  var A = stats.dist.mat(X),\n      B = stats.dist.mat(Y),\n      n = A.length,\n      i, aa, bb, ab;\n\n  for (i=0, aa=0, bb=0, ab=0; i<n; ++i) {\n    aa += A[i]*A[i];\n    bb += B[i]*B[i];\n    ab += A[i]*B[i];\n  }\n\n  return Math.sqrt(ab / Math.sqrt(aa*bb));\n};\n\n// Compute the vector distance between two arrays of numbers.\n// Default is Euclidean (exp=2) distance, configurable via exp argument.\nstats.dist = function(values, a, b, exp) {\n  var f = util.isFunction(b) || util.isString(b),\n      X = values,\n      Y = f ? values : a,\n      e = f ? exp : b,\n      L2 = e === 2 || e == null,\n      n = values.length, s = 0, d, i;\n  if (f) {\n    a = util.$(a);\n    b = util.$(b);\n  }\n  for (i=0; i<n; ++i) {\n    d = f ? (a(X[i])-b(Y[i])) : (X[i]-Y[i]);\n    s += L2 ? d*d : Math.pow(Math.abs(d), e);\n  }\n  return L2 ? Math.sqrt(s) : Math.pow(s, 1/e);\n};\n\n// Construct a mean-centered distance matrix for an array of numbers.\nstats.dist.mat = function(X) {\n  var n = X.length,\n      m = n*n,\n      A = Array(m),\n      R = gen.zeros(n),\n      M = 0, v, i, j;\n\n  for (i=0; i<n; ++i) {\n    A[i*n+i] = 0;\n    for (j=i+1; j<n; ++j) {\n      A[i*n+j] = (v = Math.abs(X[i] - X[j]));\n      A[j*n+i] = v;\n      R[i] += v;\n      R[j] += v;\n    }\n  }\n\n  for (i=0; i<n; ++i) {\n    M += R[i];\n    R[i] /= n;\n  }\n  M /= m;\n\n  for (i=0; i<n; ++i) {\n    for (j=i; j<n; ++j) {\n      A[i*n+j] += M - R[i] - R[j];\n      A[j*n+i] = A[i*n+j];\n    }\n  }\n\n  return A;\n};\n\n// Compute the Shannon entropy (log base 2) of an array of counts.\nstats.entropy = function(counts, f) {\n  f = util.$(f);\n  var i, p, s = 0, H = 0, n = counts.length;\n  for (i=0; i<n; ++i) {\n    s += (f ? f(counts[i]) : counts[i]);\n  }\n  if (s === 0) return 0;\n  for (i=0; i<n; ++i) {\n    p = (f ? f(counts[i]) : counts[i]) / s;\n    if (p) H += p * Math.log(p);\n  }\n  return -H / Math.LN2;\n};\n\n// Compute the mutual information between two discrete variables.\n// Returns an array of the form [MI, MI_distance] \n// MI_distance is defined as 1 - I(a,b) / H(a,b).\n// http://en.wikipedia.org/wiki/Mutual_information\nstats.mutual = function(values, a, b, counts) {\n  var x = counts ? values.map(util.$(a)) : values,\n      y = counts ? values.map(util.$(b)) : a,\n      z = counts ? values.map(util.$(counts)) : b;\n\n  var px = {},\n      py = {},\n      n = z.length,\n      s = 0, I = 0, H = 0, p, t, i;\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] = 0;\n    py[y[i]] = 0;\n  }\n\n  for (i=0; i<n; ++i) {\n    px[x[i]] += z[i];\n    py[y[i]] += z[i];\n    s += z[i];\n  }\n\n  t = 1 / (s * Math.LN2);\n  for (i=0; i<n; ++i) {\n    if (z[i] === 0) continue;\n    p = (s * z[i]) / (px[x[i]] * py[y[i]]);\n    I += z[i] * t * Math.log(p);\n    H += z[i] * t * Math.log(z[i]/s);\n  }\n\n  return [I, 1 + I/H];\n};\n\n// Compute the mutual information between two discrete variables.\nstats.mutual.info = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[0];\n};\n\n// Compute the mutual information distance between two discrete variables.\n// MI_distance is defined as 1 - I(a,b) / H(a,b).\nstats.mutual.dist = function(values, a, b, counts) {\n  return stats.mutual(values, a, b, counts)[1];\n};\n\n// Compute a profile of summary statistics for a variable.\nstats.profile = function(values, f) {\n  var mean = 0,\n      valid = 0,\n      missing = 0,\n      distinct = 0,\n      min = null,\n      max = null,\n      M2 = 0,\n      vals = [],\n      u = {}, delta, sd, i, v, x;\n\n  // compute summary stats\n  for (i=0; i<values.length; ++i) {\n    v = f ? f(values[i]) : values[i];\n\n    // update unique values\n    u[v] = (v in u) ? u[v] + 1 : (distinct += 1, 1);\n\n    if (v == null) {\n      ++missing;\n    } else if (util.isValid(v)) {\n      // update stats\n      x = (typeof v === 'string') ? v.length : v;\n      if (min===null || x < min) min = x;\n      if (max===null || x > max) max = x;\n      delta = x - mean;\n      mean = mean + delta / (++valid);\n      M2 = M2 + delta * (x - mean);\n      vals.push(x);\n    }\n  }\n  M2 = M2 / (valid - 1);\n  sd = Math.sqrt(M2);\n\n  // sort values for median and iqr\n  vals.sort(util.cmp);\n\n  return {\n    type:     type(values, f),\n    unique:   u,\n    count:    values.length,\n    valid:    valid,\n    missing:  missing,\n    distinct: distinct,\n    min:      min,\n    max:      max,\n    mean:     mean,\n    stdev:    sd,\n    median:   (v = stats.quantile(vals, 0.5)),\n    q1:       stats.quantile(vals, 0.25),\n    q3:       stats.quantile(vals, 0.75),\n    modeskew: sd === 0 ? 0 : (mean - v) / sd\n  };\n};\n\n// Compute profiles for all variables in a data set.\nstats.summary = function(data, fields) {\n  fields = fields || util.keys(data[0]);\n  var s = fields.map(function(f) {\n    var p = stats.profile(data, util.$(f));\n    return (p.field = f, p);\n  });\n  return (s.__summary__ = true, s);\n};\n\nmodule.exports = stats;","var STEPS = [\n  [31536e6, 5],  // 1-year\n  [7776e6, 4],   // 3-month\n  [2592e6, 4],   // 1-month\n  [12096e5, 3],  // 2-week\n  [6048e5, 3],   // 1-week\n  [1728e5, 3],   // 2-day\n  [864e5, 3],    // 1-day\n  [432e5, 2],    // 12-hour\n  [216e5, 2],    // 6-hour\n  [108e5, 2],    // 3-hour\n  [36e5, 2],     // 1-hour\n  [18e5, 1],     // 30-minute\n  [9e5, 1],      // 15-minute\n  [3e5, 1],      // 5-minute\n  [6e4, 1],      // 1-minute\n  [3e4, 0],      // 30-second\n  [15e3, 0],     // 15-second\n  [5e3, 0],      // 5-second\n  [1e3, 0]       // 1-second\n];\n\nfunction isNumber(d) { return typeof d === 'number'; }\n\nvar entries = [\n  {\n    type: 'second',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M:%S.%L',\n    date: function(d) {\n      return new Date(d * 1e3);\n    },\n    unit: function(d) {\n      return (+d / 1e3);\n    }\n  },\n  {\n    type: 'minute',\n    minstep: 1,\n    format: '%Y %b %-d %H:%M',\n    date: function(d) {\n      return new Date(d * 6e4);\n    },\n    unit: function(d) {\n      return ~~(+d / 6e4);\n    }\n  },\n  {\n    type: 'hour',\n    minstep: 1,\n    format: '%Y %b %-d %H:00',\n    date: function(d) {\n      return new Date(d * 36e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 36e5);\n    }\n  },\n  {\n    type: 'day',\n    minstep: 1,\n    step: [1, 7],\n    format: '%Y %b %-d',\n    date: function(d) {\n      return new Date(d * 864e5);\n    },\n    unit: function(d) {\n      return ~~(+d / 864e5);\n    }\n  },\n  {\n    type: 'month',\n    minstep: 1,\n    step: [1, 3, 6],\n    format: '%b %Y',\n    date: function(d) {\n      return new Date(Date.UTC(~~(d / 12), d % 12, 1));\n    },\n    unit: function(d) {\n      if (isNumber(d)) d = new Date(d);\n      return 12 * d.getUTCFullYear() + d.getUTCMonth();\n    }\n  },\n  {\n    type: 'year',\n    minstep: 1,\n    format: '%Y',\n    date: function(d) {\n      return new Date(Date.UTC(d, 0, 1));\n    },\n    unit: function(d) {\n      return (isNumber(d) ? new Date(d) : d).getUTCFullYear();\n    }\n  }\n];\n\nvar minuteOfHour = {\n  type: 'minuteOfHour',\n  min: 0,\n  max: 59,\n  minstep: 1,\n  format: '%M',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMinutes();\n  }\n};\n\nvar hourOfDay = {\n  type: 'hourOfDay',\n  min: 0,\n  max: 23,\n  minstep: 1,\n  format: '%H',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 1, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCHours();\n  }\n};\n\nvar dayOfWeek = {\n  type: 'dayOfWeek',\n  min: 0,\n  max: 6,\n  step: [1],\n  format: '%a',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, 4 + d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDay();\n  }\n};\n\nvar dayOfMonth = {\n  type: 'dayOfMonth',\n  min: 1,\n  max: 31,\n  step: [1],\n  format: '%-d',\n  date: function(d) {\n    return new Date(Date.UTC(1970, 0, d));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCDate();\n  }\n};\n\nvar monthOfYear = {\n  type: 'monthOfYear',\n  min: 0,\n  max: 11,\n  step: [1],\n  format: '%b',\n  date: function(d) {\n    return new Date(Date.UTC(1970, d % 12, 1));\n  },\n  unit: function(d) {\n    return (isNumber(d) ? new Date(d) : d).getUTCMonth();\n  }\n};\n\nvar units = {\n  'second':       entries[0],\n  'minute':       entries[1],\n  'hour':         entries[2],\n  'day':          entries[3],\n  'month':        entries[4],\n  'year':         entries[5],\n  'minuteOfHour': minuteOfHour,\n  'hourOfDay':    hourOfDay,\n  'dayOfWeek':    dayOfWeek,\n  'dayOfMonth':   dayOfMonth,\n  'monthOfYear':  monthOfYear,\n  'timesteps':    entries\n};\n\nunits.find = function(span, minb, maxb) {\n  var i, len, bins, step = STEPS[0];\n\n  for (i = 1, len = STEPS.length; i < len; ++i) {\n    step = STEPS[i];\n    if (span > step[0]) {\n      bins = span / step[0];\n      if (bins > maxb) {\n        return entries[STEPS[i - 1][1]];\n      }\n      if (bins >= minb) {\n        return entries[step[1]];\n      }\n    }\n  }\n  return entries[STEPS[STEPS.length - 1][1]];\n};\n\nmodule.exports = units;\n","var Buffer = require('buffer').Buffer;\nvar units = require('./time-units');\nvar u = module.exports = {};\n\n// where are we?\n\nu.isNode = typeof process !== 'undefined' &&\n           typeof process.stderr !== 'undefined';\n\n// utility functions\n\nvar FNAME = '__name__';\n\nu.namedfunc = function(name, f) { return (f[FNAME] = name, f); };\n\nu.name = function(f) { return f==null ? null : f[FNAME]; };\n\nu.identity = function(x) { return x; };\n\nu.true = u.namedfunc('true', function() { return true; });\n\nu.false = u.namedfunc('false', function() { return false; });\n\nu.duplicate = function(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nu.equal = function(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n};\n\nu.extend = function(obj) {\n  for (var x, name, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (name in x) { obj[name] = x[name]; }\n  }\n  return obj;\n};\n\nu.length = function(x) {\n  return x != null && x.length != null ? x.length : null;\n};\n\nu.keys = function(x) {\n  var keys = [], k;\n  for (k in x) keys.push(k);\n  return keys;\n};\n\nu.vals = function(x) {\n  var vals = [], k;\n  for (k in x) vals.push(x[k]);\n  return vals;\n};\n\nu.toMap = function(list, f) {\n  return (f = u.$(f)) ?\n    list.reduce(function(obj, x) { return (obj[f(x)] = 1, obj); }, {}) :\n    list.reduce(function(obj, x) { return (obj[x] = 1, obj); }, {});\n};\n\nu.keystr = function(values) {\n  // use to ensure consistent key generation across modules\n  var n = values.length;\n  if (!n) return '';\n  for (var s=String(values[0]), i=1; i<n; ++i) {\n    s += '|' + String(values[i]);\n  }\n  return s;\n};\n\n// type checking functions\n\nvar toString = Object.prototype.toString;\n\nu.isObject = function(obj) {\n  return obj === Object(obj);\n};\n\nu.isFunction = function(obj) {\n  return toString.call(obj) === '[object Function]';\n};\n\nu.isString = function(obj) {\n  return typeof value === 'string' || toString.call(obj) === '[object String]';\n};\n\nu.isArray = Array.isArray || function(obj) {\n  return toString.call(obj) === '[object Array]';\n};\n\nu.isNumber = function(obj) {\n  return typeof obj === 'number' || toString.call(obj) === '[object Number]';\n};\n\nu.isBoolean = function(obj) {\n  return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n};\n\nu.isDate = function(obj) {\n  return toString.call(obj) === '[object Date]';\n};\n\nu.isValid = function(obj) {\n  return obj != null && !Number.isNaN(obj);\n};\n\nu.isBuffer = (Buffer && Buffer.isBuffer) || u.false;\n\n// type coercion functions\n\nu.number = function(s) {\n  return s == null || s === '' ? null : +s;\n};\n\nu.boolean = function(s) {\n  return s == null || s === '' ? null : s==='false' ? false : !!s;\n};\n\nu.date = function(s) {\n  return s == null || s === '' ? null : Date.parse(s);\n};\n\nu.array = function(x) {\n  return x != null ? (u.isArray(x) ? x : [x]) : [];\n};\n\nu.str = function(x) {\n  return u.isArray(x) ? '[' + x.map(u.str) + ']'\n    : u.isObject(x) ? JSON.stringify(x)\n    : u.isString(x) ? ('\\''+util_escape_str(x)+'\\'') : x;\n};\n\nvar escape_str_re = /(^|[^\\\\])'/g;\n\nfunction util_escape_str(x) {\n  return x.replace(escape_str_re, '$1\\\\\\'');\n}\n\n// data access functions\n\nu.field = function(f) {\n  return String(f).split('\\\\.')\n    .map(function(d) { return d.split('.'); })\n    .reduce(function(a, b) {\n      if (a.length) { a[a.length-1] += '.' + b.shift(); }\n      a.push.apply(a, b);\n      return a;\n    }, []);\n};\n\nu.accessor = function(f) {\n  var s;\n  return f==null || u.isFunction(f) ? f :\n    u.namedfunc(f, (s = u.field(f)).length > 1 ?\n      function(x) { return s.reduce(function(x,f) { return x[f]; }, x); } :\n      function(x) { return x[f]; }\n    );\n};\n\nu.$ = u.accessor;\n\nu.mutator = function(f) {\n  var s;\n  return u.isString(f) && (s=u.field(f)).length > 1 ?\n    function(x, v) {\n      for (var i=0; i<s.length-1; ++i) x = x[s[i]];\n      x[s[i]] = v;\n    } :\n    function(x, v) { x[f] = v; };\n};\n\nu.$func = function(name, op) {\n  return function(f) {\n    f = u.$(f) || u.identity;\n    var n = name + (u.name(f) ? '_'+u.name(f) : '');\n    return u.namedfunc(n, function(d) { return op(f(d)); });\n  };\n};\n\nu.$valid  = u.$func('valid', u.isValid);\nu.$length = u.$func('length', u.length);\nu.$year   = u.$func('year', units.year.unit);\nu.$month  = u.$func('month', units.monthOfYear.unit);\nu.$date   = u.$func('date', units.dayOfMonth.unit);\nu.$day    = u.$func('day', units.dayOfWeek.unit);\nu.$hour   = u.$func('hour', units.hourOfDay.unit);\nu.$minute = u.$func('minute', units.minuteOfHour.unit);\n\nu.$in = function(f, values) {\n  f = u.$(f);\n  var map = u.isArray(values) ? u.toMap(values) : values;\n  return function(d) { return !!map[f(d)]; };\n};\n\n// comparison / sorting functions\n\nu.comparator = function(sort) {\n  var sign = [];\n  if (sort === undefined) sort = [];\n  sort = u.array(sort).map(function(f) {\n    var s = 1;\n    if      (f[0] === '-') { s = -1; f = f.slice(1); }\n    else if (f[0] === '+') { s = +1; f = f.slice(1); }\n    sign.push(s);\n    return u.accessor(f);\n  });\n  return function(a,b) {\n    var i, n, f, x, y;\n    for (i=0, n=sort.length; i<n; ++i) {\n      f = sort[i]; x = f(a); y = f(b);\n      if (x < y) return -1 * sign[i];\n      if (x > y) return sign[i];\n    }\n    return 0;\n  };\n};\n\nu.cmp = function(a, b) {\n  if (a < b) {\n    return -1;\n  } else if (a > b) {\n    return 1;\n  } else if (a >= b) {\n    return 0;\n  } else if (a === null && b === null) {\n    return 0;\n  } else if (a === null) {\n    return -1;\n  } else if (b === null) {\n    return 1;\n  }\n  return NaN;\n};\n\nu.numcmp = function(a, b) { return a - b; };\n\nu.stablesort = function(array, sortBy, keyFn) {\n  var indices = array.reduce(function(idx, v, i) {\n    return (idx[keyFn(v)] = i, idx);\n  }, {});\n\n  array.sort(function(a, b) {\n    var sa = sortBy(a),\n        sb = sortBy(b);\n    return sa < sb ? -1 : sa > sb ? 1\n         : (indices[keyFn(a)] - indices[keyFn(b)]);\n  });\n\n  return array;\n};\n\n\n// string functions\n\n// ES6 compatibility per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith#Polyfill\n// We could have used the polyfill code, but lets wait until ES6 becomes a standard first\nu.startsWith = String.prototype.startsWith ?\n  function(string, searchString) {\n    return string.startsWith(searchString);\n  } :\n  function(string, searchString) {\n    return string.lastIndexOf(searchString, 0) === 0;\n  };\n\nu.pad = function(s, length, pos, padchar) {\n  padchar = padchar || \" \";\n  var d = length - s.length;\n  if (d <= 0) return s;\n  switch (pos) {\n    case 'left':\n      return strrep(d, padchar) + s;\n    case 'middle':\n    case 'center':\n      return strrep(Math.floor(d/2), padchar) +\n         s + strrep(Math.ceil(d/2), padchar);\n    default:\n      return s + strrep(d, padchar);\n  }\n};\n\nfunction strrep(n, str) {\n  var s = \"\", i;\n  for (i=0; i<n; ++i) s += str;\n  return s;\n}\n\nu.truncate = function(s, length, pos, word, ellipsis) {\n  var len = s.length;\n  if (len <= length) return s;\n  ellipsis = ellipsis !== undefined ? String(ellipsis) : '\\u2026';\n  var l = Math.max(0, length - ellipsis.length);\n\n  switch (pos) {\n    case 'left':\n      return ellipsis + (word ? truncateOnWord(s,l,1) : s.slice(len-l));\n    case 'middle':\n    case 'center':\n      var l1 = Math.ceil(l/2), l2 = Math.floor(l/2);\n      return (word ? truncateOnWord(s,l1) : s.slice(0,l1)) +\n        ellipsis + (word ? truncateOnWord(s,l2,1) : s.slice(len-l2));\n    default:\n      return (word ? truncateOnWord(s,l) : s.slice(0,l)) + ellipsis;\n  }\n};\n\nfunction truncateOnWord(s, len, rev) {\n  var cnt = 0, tok = s.split(truncate_word_re);\n  if (rev) {\n    s = (tok = tok.reverse())\n      .filter(function(w) { cnt += w.length; return cnt <= len; })\n      .reverse();\n  } else {\n    s = tok.filter(function(w) { cnt += w.length; return cnt <= len; });\n  }\n  return s.length ? s.join('').trim() : tok[0].slice(0, len);\n}\n\nvar truncate_word_re = /([\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u2028\\u2029\\u3000\\uFEFF])/;\n","'use strict';\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  util = require('./util'),\n  vlfield = require('./field'),\n  vlenc = require('./enc'),\n  schema = require('./schema/schema');\n\nmodule.exports = (function() {\n  function Encoding(spec, theme) {\n    var defaults = schema.instantiate(),\n      specExtended = schema.util.merge(defaults, theme || {}, spec) ;\n\n    this._data = specExtended.data;\n    this._marktype = specExtended.marktype;\n    this._enc = specExtended.encoding;\n    this._config = specExtended.config;\n    this._filter = specExtended.filter;\n    // this._vega2 = true;\n  }\n\n  var proto = Encoding.prototype;\n\n  Encoding.fromShorthand = function(shorthand, data, config, theme) {\n    var c = consts.shorthand,\n        split = shorthand.split(c.delim),\n        marktype = split.shift().split(c.assign)[1].trim(),\n        enc = vlenc.fromShorthand(split);\n\n    return new Encoding({\n      data: data,\n      marktype: marktype,\n      encoding: enc,\n      config: config,\n      filter: []\n    }, theme);\n  };\n\n  Encoding.fromSpec = function(spec, theme) {\n    return new Encoding(spec, theme);\n  };\n\n  proto.toShorthand = function() {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + this._marktype +\n      c.delim + vlenc.shorthand(this._enc);\n  };\n\n  Encoding.shorthand = function (spec) {\n    var c = consts.shorthand;\n    return 'mark' + c.assign + spec.marktype +\n      c.delim + vlenc.shorthand(spec.encoding);\n  };\n\n  Encoding.specFromShorthand = function(shorthand, data, config, excludeConfig) {\n    return Encoding.fromShorthand(shorthand, data, config).toSpec(excludeConfig);\n  };\n\n  proto.toSpec = function(excludeConfig, excludeData) {\n    var enc = util.duplicate(this._enc),\n      spec;\n\n    spec = {\n      marktype: this._marktype,\n      encoding: enc,\n      filter: this._filter\n    };\n\n    if (!excludeConfig) {\n      spec.config = util.duplicate(this._config);\n    }\n\n    if (!excludeData) {\n      spec.data = util.duplicate(this._data);\n    }\n\n    // remove defaults\n    var defaults = schema.instantiate();\n    return schema.util.subtract(spec, defaults);\n  };\n\n\n  proto.marktype = function() {\n    return this._marktype;\n  };\n\n  proto.is = function(m) {\n    return this._marktype === m;\n  };\n\n  proto.has = function(encType) {\n    // equivalent to calling vlenc.has(this._enc, encType)\n    return this._enc[encType].name !== undefined;\n  };\n\n  proto.enc = function(et) {\n    return this._enc[et];\n  };\n\n  proto.filter = function() {\n    var filterNull = [],\n      fields = this.fields(),\n      self = this;\n\n    util.forEach(fields, function(fieldList, fieldName) {\n      if (fieldName === '*') return; //count\n\n      if ((self.config('filterNull').Q && fieldList.containsType[Q]) ||\n          (self.config('filterNull').T && fieldList.containsType[T]) ||\n          (self.config('filterNull').O && fieldList.containsType[O]) ||\n          (self.config('filterNull').N && fieldList.containsType[N])) {\n        filterNull.push({\n          operands: [fieldName],\n          operator: 'notNull'\n        });\n      }\n    });\n\n    return filterNull.concat(this._filter);\n  };\n\n  // get \"field\" property for vega\n  proto.field = function(et, nodata, nofn) {\n    if (!this.has(et)) return null;\n    return vlfield.fieldRef(this._enc[et], {\n      nofn: nofn,\n      data: !this._vega2 && !nodata\n    });\n  };\n\n  proto.fieldRef = function(et, opt) {\n    opt = opt || {};\n    opt.data = !this._vega2 && (opt.data !== false);\n    return vlfield.fieldRef(this._enc[et], opt);\n  };\n\n  proto.fieldName = function(et) {\n    return this._enc[et].name;\n  };\n\n  /*\n   * return key-value pairs of field name and list of fields of that field name\n   */\n  proto.fields = function() {\n    return vlenc.fields(this._enc);\n  };\n\n  proto.fieldTitle = function(et) {\n    if (vlfield.isCount(this._enc[et])) {\n      return vlfield.count.displayName;\n    }\n    var timeUnit = this._enc[et].aggregate || this._enc[et].timeUnit || (this._enc[et].bin && 'bin');\n    if (timeUnit) {\n      return timeUnit.toUpperCase() + '(' + this._enc[et].name + ')';\n    } else {\n      return this._enc[et].name;\n    }\n  };\n\n  proto.scale = function(et) {\n    return this._enc[et].scale || {};\n  };\n\n  proto.axis = function(et) {\n    return this._enc[et].axis || {};\n  };\n\n  proto.band = function(et) {\n    return this._enc[et].band || {};\n  };\n\n  proto.bandSize = function(encType, useSmallBand) {\n    useSmallBand = useSmallBand ||\n      //isBandInSmallMultiples\n      (encType === Y && this.has(ROW) && this.has(Y)) ||\n      (encType === X && this.has(COL) && this.has(X));\n\n    // if band.size is explicitly specified, follow the specification, otherwise draw value from config.\n    return this.band(encType).size ||\n      this.config(useSmallBand ? 'smallBandSize' : 'largeBandSize');\n  };\n\n  proto.aggregate = function(et) {\n    return this._enc[et].aggregate;\n  };\n\n  // returns false if binning is disabled, otherwise an object with binning properties\n  proto.bin = function(et) {\n    var bin = this._enc[et].bin;\n    if (bin === {})\n      return false;\n    if (bin === true)\n      return {\n        maxbins: schema.MAXBINS_DEFAULT\n      };\n    return bin;\n  };\n\n  proto.legend = function(et) {\n    return this._enc[et].legend;\n  };\n\n  proto.value = function(et) {\n    return this._enc[et].value;\n  };\n\n  proto.timeUnit = function(et) {\n    return this._enc[et].timeUnit;\n  };\n\n  proto.sort = function(et, stats) {\n    var sort = this._enc[et].sort,\n      enc = this._enc,\n      isTypes = vlfield.isTypes;\n\n    if ((!sort || sort.length===0) &&\n        // FIXME\n        Encoding.toggleSort.support({encoding:this._enc}, stats, true) && //HACK\n        this.config('toggleSort') === Q\n      ) {\n      var qField = isTypes(enc.x, [N, O]) ? enc.y : enc.x;\n\n      if (isTypes(enc[et], [N, O])) {\n        sort = [{\n          name: qField.name,\n          aggregate: qField.aggregate,\n          type: qField.type,\n          reverse: true\n        }];\n      }\n    }\n\n    return sort;\n  };\n\n  proto.length = function() {\n    return util.keys(this._enc).length;\n  };\n\n  proto.map = function(f) {\n    return vlenc.map(this._enc, f);\n  };\n\n  proto.reduce = function(f, init) {\n    return vlenc.reduce(this._enc, f, init);\n  };\n\n  proto.forEach = function(f) {\n    return vlenc.forEach(this._enc, f);\n  };\n\n  proto.type = function(et) {\n    return this.has(et) ? this._enc[et].type : null;\n  };\n\n  proto.role = function(et) {\n    return this.has(et) ? vlfield.role(this._enc[et]) : null;\n  };\n\n  proto.text = function(prop) {\n    var text = this._enc[TEXT].text;\n    return prop ? text[prop] : text;\n  };\n\n  proto.font = function(prop) {\n    var font = this._enc[TEXT].font;\n    return prop ? font[prop] : font;\n  };\n\n  proto.isType = function(et, type) {\n    var field = this.enc(et);\n    return field && vlfield.isType(field, type);\n  };\n\n  proto.isTypes = function(et, type) {\n    var field = this.enc(et);\n    return field && vlfield.isTypes(field, type);\n  };\n\n  Encoding.isOrdinalScale = function(encoding, encType) {\n    return vlfield.isOrdinalScale(encoding.enc(encType));\n  };\n\n  Encoding.isDimension = function(encoding, encType) {\n    return vlfield.isDimension(encoding.enc(encType));\n  };\n\n  Encoding.isMeasure = function(encoding, encType) {\n    return vlfield.isMeasure(encoding.enc(encType));\n  };\n\n  proto.isOrdinalScale = function(encType) {\n    return this.has(encType) && Encoding.isOrdinalScale(this, encType);\n  };\n\n  proto.isDimension = function(encType) {\n    return this.has(encType) && Encoding.isDimension(this, encType);\n  };\n\n  proto.isMeasure = function(encType) {\n    return this.has(encType) && Encoding.isMeasure(this, encType);\n  };\n\n  proto.isAggregate = function() {\n    return vlenc.isAggregate(this._enc);\n  };\n\n  Encoding.isAggregate = function(spec) {\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.alwaysNoOcclusion = function(spec) {\n    // FIXME raw OxQ with # of rows = # of O\n    return vlenc.isAggregate(spec.encoding);\n  };\n\n  Encoding.isStack = function(spec) {\n    // FIXME update this once we have control for stack ...\n    return (spec.marktype === 'bar' || spec.marktype === 'area') &&\n      spec.encoding.color;\n  };\n\n  proto.isStack = function() {\n    // FIXME update this once we have control for stack ...\n    return (this.is('bar') || this.is('area')) && this.has('color');\n  };\n\n  proto.cardinality = function(encType, stats) {\n    return vlfield.cardinality(this.enc(encType), stats, this.config('filterNull'));\n  };\n\n  proto.isRaw = function() {\n    return !this.isAggregate();\n  };\n\n  proto.data = function(name) {\n    return name ? this._data[name] : this._data;\n  };\n\n   // returns whether the encoding has values embedded\n  proto.hasValues = function() {\n    var vals = this.data('values');\n    return vals && vals.length;\n  };\n\n  proto.config = function(name) {\n    return this._config[name];\n  };\n\n  Encoding.transpose = function(spec) {\n    var oldenc = spec.encoding,\n      enc = util.duplicate(spec.encoding);\n    enc.x = oldenc.y;\n    enc.y = oldenc.x;\n    enc.row = oldenc.col;\n    enc.col = oldenc.row;\n    spec.encoding = enc;\n    return spec;\n  };\n\n  // FIXME: REMOVE everything below here\n\n  Encoding.toggleSort = function(spec) {\n    spec.config = spec.config || {};\n    spec.config.toggleSort = spec.config.toggleSort === Q ? N : Q;\n    return spec;\n  };\n\n\n  Encoding.toggleSort.direction = function(spec) {\n    if (!Encoding.toggleSort.support(spec)) { return; }\n    var enc = spec.encoding;\n    return enc.x.type === N ? 'x' : 'y';\n  };\n\n  Encoding.toggleSort.mode = function(spec) {\n    return spec.config.toggleSort;\n  };\n\n  Encoding.toggleSort.support = function(spec, stats) {\n    var enc = spec.encoding,\n      isTypes = vlfield.isTypes;\n\n    if (vlenc.has(enc, ROW) || vlenc.has(enc, COL) ||\n      !vlenc.has(enc, X) || !vlenc.has(enc, Y) ||\n      !Encoding.alwaysNoOcclusion(spec, stats)) {\n      return false;\n    }\n\n    return ( isTypes(enc.x, [N,O]) && vlfield.isMeasure(enc.y)) ? 'x' :\n      ( isTypes(enc.y, [N,O]) && vlfield.isMeasure(enc.x)) ? 'y' : false;\n  };\n\n  Encoding.toggleFilterNullO = function(spec) {\n    spec.config = spec.config || {};\n    spec.config.filterNull = spec.config.filterNull || { //FIXME\n      T: true,\n      Q: true\n    };\n    spec.config.filterNull.O = !spec.config.filterNull.O;\n    return spec;\n  };\n\n  Encoding.toggleFilterNullO.support = function(spec, stats) {\n    var fields = vlenc.fields(spec.encoding);\n    for (var fieldName in fields) {\n      var fieldList = fields[fieldName];\n      if (fieldList.containsType.O && fieldName in stats && stats[fieldName].nulls > 0) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  return Encoding;\n})();\n","'use strict';\n\nrequire('../globals');\n\nvar util = require('../util');\n\nmodule.exports = aggregates;\n\nfunction aggregates(dataTable, encoding, opt) {\n  opt = opt || {};\n\n  var dims = {}, meas = {}, detail = {}, facets = {};\n\n  encoding.forEach(function(field, encType) {\n    if (field.aggregate) {\n      if (field.aggregate === 'count') {\n        meas.count = {op: 'count', field: '*'};\n      }else {\n        meas[field.aggregate + '|'+ field.name] = {\n          op: field.aggregate,\n          field: encoding.fieldRef(encType, {nofn: true})\n        };\n      }\n    } else {\n      dims[field.name] = encoding.field(encType);\n      if (encType == ROW || encType == COL) {\n        facets[field.name] = dims[field.name];\n      }else if (encType !== X && encType !== Y) {\n        detail[field.name] = dims[field.name];\n      }\n    }\n  });\n  dims = util.vals(dims);\n  meas = util.vals(meas);\n\n  if (meas.length > 0) {\n    if (!dataTable.transform) dataTable.transform = [];\n    dataTable.transform.push({\n      type: 'aggregate',\n      groupby: dims,\n      fields: meas\n    });\n  }\n  return {\n    details: util.vals(detail),\n    dims: dims,\n    facets: util.vals(facets),\n    aggregated: meas.length > 0\n  };\n}\n","'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter,\n  getter = util.getter,\n  time = require('./time');\n\nvar axis = module.exports = {};\n\naxis.names = function(props) {\n  return util.keys(util.keys(props).reduce(function(a, x) {\n    var s = props[x].scale;\n    if (s === X || s === Y) a[props[x].scale] = 1;\n    return a;\n  }, {}));\n};\n\naxis.defs = function(names, encoding, layout, stats, opt) {\n  return names.reduce(function(a, name) {\n    a.push(axis.def(name, encoding, layout, stats, opt));\n    return a;\n  }, []);\n};\n\naxis.def = function(name, encoding, layout, stats, opt) {\n  var type = name;\n  var isCol = name == COL, isRow = name == ROW;\n  var rowOffset = axisTitleOffset(encoding, layout, Y) + 20,\n    cellPadding = layout.cellPadding;\n\n\n  if (isCol) type = 'x';\n  if (isRow) type = 'y';\n\n  var def = {\n    type: type,\n    scale: name\n  };\n\n  if (encoding.axis(name).grid) {\n    def.grid = true;\n    def.layer = 'back';\n\n    if (isCol) {\n      // set grid property -- put the lines on the right the cell\n      setter(def, ['properties', 'grid'], {\n        x: {\n          offset: layout.cellWidth * (1+ cellPadding/2.0),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'col'\n        },\n        y: {\n          value: -layout.cellHeight * (cellPadding/2),\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        opacity: { value: encoding.config('cellGridOpacity') }\n      });\n    } else if (isRow) {\n      // set grid property -- put the lines on the top\n      setter(def, ['properties', 'grid'], {\n        y: {\n          offset: -layout.cellHeight * (cellPadding/2),\n          // default value(s) -- vega doesn't do recursive merge\n          scale: 'row'\n        },\n        x: {\n          value: rowOffset\n        },\n        x2: {\n          offset: rowOffset + (layout.cellWidth * 0.05),\n          // default value(s) -- vega doesn't do recursive merge\n          group: 'mark.group.width',\n          mult: 1\n        },\n        stroke: { value: encoding.config('cellGridColor') },\n        opacity: { value: encoding.config('cellGridOpacity') }\n      });\n    } else {\n      setter(def, ['properties', 'grid'], {\n        stroke: { value: encoding.config('gridColor') },\n        opacity: { value: encoding.config('gridOpacity') }\n      });\n    }\n  }\n\n  if (encoding.axis(name).title) {\n    def = axis_title(def, name, encoding, layout, opt);\n  }\n\n  if (isRow || isCol) {\n    setter(def, ['properties', 'ticks'], {\n      opacity: {value: 0}\n    });\n    setter(def, ['properties', 'majorTicks'], {\n      opacity: {value: 0}\n    });\n    setter(def, ['properties', 'axis'], {\n      opacity: {value: 0}\n    });\n  }\n\n  if (isCol) {\n    def.orient = 'top';\n  }\n\n  if (isRow) {\n    def.offset = rowOffset;\n  }\n\n  if (name == X) {\n    if (encoding.has(Y) && encoding.isOrdinalScale(Y) && encoding.cardinality(Y, stats) > 30) {\n      def.orient = 'top';\n    }\n\n    if (encoding.isDimension(X) || encoding.isType(X, T)) {\n      setter(def, ['properties','labels'], {\n        angle: {value: 270},\n        align: {value: 'right'},\n        baseline: {value: 'middle'}\n      });\n    } else { // Q\n      def.ticks = 5;\n    }\n  }\n\n  def = axis_labels(def, name, encoding, layout, opt);\n\n  return def;\n};\n\nfunction axis_title(def, name, encoding, layout, opt) {\n  // jshint unused:false\n\n  var maxlength = null,\n    fieldTitle = encoding.fieldTitle(name);\n  if (name===X) {\n    maxlength = layout.cellWidth / encoding.config('characterWidth');\n  } else if (name === Y) {\n    maxlength = layout.cellHeight / encoding.config('characterWidth');\n  }\n\n  def.title = maxlength ? util.truncate(fieldTitle, maxlength) : fieldTitle;\n\n  if (name === ROW) {\n    setter(def, ['properties','title'], {\n      angle: {value: 0},\n      align: {value: 'right'},\n      baseline: {value: 'middle'},\n      dy: {value: (-layout.height/2) -20}\n    });\n  }\n\n  def.titleOffset = axisTitleOffset(encoding, layout, name);\n  return def;\n}\n\nfunction axis_labels(def, name, encoding, layout, opt) {\n  // jshint unused:false\n\n  var timeUnit;\n  // add custom label for time type\n  if (encoding.isType(name, T) && (timeUnit = encoding.timeUnit(name)) && (time.hasScale(timeUnit))) {\n    setter(def, ['properties','labels','text','scale'], 'time-'+ timeUnit);\n  }\n\n  var textTemplatePath = ['properties','labels','text','template'];\n  if (encoding.axis(name).format) {\n    def.format = encoding.axis(name).format;\n  } else if (encoding.isType(name, Q)) {\n    setter(def, textTemplatePath, '{{data | number:\\'.3s\\'}}');\n  } else if (encoding.isType(name, T)) {\n    if (!encoding.timeUnit(name)) {\n      setter(def, textTemplatePath, '{{data | time:\\'%Y-%m-%d\\'}}');\n    } else if (encoding.timeUnit(name) === 'year') {\n      setter(def, textTemplatePath, '{{data | number:\\'d\\'}}');\n    }\n  } else if (encoding.isTypes(name, [N, O]) && encoding.axis(name).maxLabelLength) {\n    setter(def, textTemplatePath, '{{data | truncate:' + encoding.axis(name).maxLabelLength + '}}');\n  } else {\n    // nothing\n  }\n\n  return def;\n}\n\nfunction axisTitleOffset(encoding, layout, name) {\n  var value = encoding.axis(name).titleOffset;\n  if (value) {\n    return value;\n  }\n  switch (name) {\n    case ROW: return 0;\n    case COL: return 35;\n  }\n  return getter(layout, [name, 'axisTitleOffset']);\n}\n","'use strict';\n\nrequire('../globals');\n\nmodule.exports = binning;\n\nfunction binning(dataTable, encoding, opt) {\n  opt = opt || {};\n\n  if (!dataTable.transform) dataTable.transform = [];\n\n  encoding.forEach(function(field, encType) {\n    if (encoding.bin(encType)) {\n      dataTable.transform.push({\n        type: 'bin',\n        field: encoding.field(encType, false, /*nofn*/ true),\n        output: encoding.field(encType),\n        maxbins: encoding.bin(encType).maxbins\n      });\n    }\n  });\n\n  return dataTable;\n}\n","'use strict';\n\nvar summary = module.exports = require('datalib/src/stats').summary;\n\nrequire('../globals');\n\nvar compiler = module.exports = {};\n\nvar Encoding = require('../Encoding'),\n  axis = compiler.axis = require('./axis'),\n  filter = compiler.filter = require('./filter'),\n  legend = compiler.legend = require('./legend'),\n  marks = compiler.marks = require('./marks'),\n  scale = compiler.scale = require('./scale');\n\ncompiler.aggregate = require('./aggregate');\ncompiler.bin = require('./bin');\ncompiler.facet = require('./facet');\ncompiler.group = require('./group');\ncompiler.layout = require('./layout');\ncompiler.sort = require('./sort');\ncompiler.stack = require('./stack');\ncompiler.style = require('./style');\ncompiler.subfacet = require('./subfacet');\ncompiler.template = require('./template');\ncompiler.time = require('./time');\n\ncompiler.compile = function (spec, stats, theme) {\n  return compiler.compileEncoding(Encoding.fromSpec(spec, theme), stats);\n};\n\ncompiler.shorthand = function (shorthand, stats, config, theme) {\n  return compiler.compileEncoding(Encoding.fromShorthand(shorthand, config, theme), stats);\n};\n\ncompiler.compileEncoding = function (encoding, stats) {\n  // no need to pass stats if you pass in the data\n  if (!stats && encoding.hasValues()) {\n    stats = summary(encoding.data('values')).reduce(function(s, p) {\n      s[p.field] = p;\n      return s;\n    }, {});\n  }\n\n  var layout = compiler.layout(encoding, stats),\n    spec = compiler.template(encoding, layout, stats);\n\n  // .data related stuff\n  var rawTable = spec.data[0],\n    dataTable = spec.data[1];\n\n  rawTable = filter.addFilters(rawTable, encoding); // modify rawTable\n  dataTable = compiler.bin(dataTable, encoding);     // modify dataTable\n  spec = compiler.time(spec, encoding);              // modify dataTable, add scales\n  var aggResult = compiler.aggregate(dataTable, encoding); // modify dataTable\n  var sorting = compiler.sort(spec.data, encoding, stats); // append new data\n\n  // marks\n  var style = compiler.style(encoding, stats),\n    group = spec.marks[0],\n    mark = marks[encoding.marktype()],\n    mdefs = marks.def(mark, encoding, layout, style),\n    mdef = mdefs[0];  // TODO: remove this dirty hack by refactoring the whole flow\n\n  for (var i = 0; i < mdefs.length; i++) {\n    group.marks.push(mdefs[i]);\n  }\n\n  var lineType = marks[encoding.marktype()].line;\n\n  // handle subfacets\n\n  var details = aggResult.details,\n    hasDetails = details && details.length > 0,\n    stack = hasDetails && compiler.stack(spec.data, encoding, mdef, aggResult.facets); // modify spec.data, mdef.{from,properties}\n\n  if (hasDetails && (stack || lineType)) {\n    //subfacet to group stack / line together in one group\n    compiler.subfacet(group, mdef, details, stack, encoding);\n  }\n\n  // auto-sort line/area values\n  //TODO(kanitw): have some config to turn off auto-sort for line (for line chart that encodes temporal information)\n  if (lineType) {\n    var f = (encoding.isMeasure(X) && encoding.isDimension(Y)) ? Y : X;\n    if (!mdef.from) mdef.from = {};\n    // TODO: why - ?\n    mdef.from.transform = [{type: 'sort', by: '-' + encoding.field(f)}];\n  }\n\n  // Small Multiples\n  if (encoding.has(ROW) || encoding.has(COL)) {\n    spec = compiler.facet(group, encoding, layout, style, sorting, spec, mdef, stack, stats);\n    spec.legends = legend.defs(encoding);\n  } else {\n    group.scales = scale.defs(scale.names(mdef.properties.update), encoding, layout, stats, style, sorting, {stack: stack});\n    group.axes = axis.defs(axis.names(mdef.properties.update), encoding, layout, stats);\n    group.legends = legend.defs(encoding);\n  }\n\n  filter.filterLessThanZero(dataTable, encoding);\n\n  return spec;\n};\n\n","'use strict';\n\nrequire('../globals');\n\nvar util = require('../util');\n\nvar axis = require('./axis'),\n  groupdef = require('./group').def,\n  scale = require('./scale');\n\nmodule.exports = faceting;\n\nfunction faceting(group, encoding, layout, style, sorting, spec, mdef, stack, stats) {\n  var enter = group.properties.enter;\n  var facetKeys = [], cellAxes = [], from, axesGrp;\n\n  var hasRow = encoding.has(ROW), hasCol = encoding.has(COL);\n\n  enter.fill = {value: encoding.config('cellBackgroundColor')};\n\n  //move \"from\" to cell level and add facet transform\n  group.from = {data: group.marks[0].from.data};\n\n  // Hack, this needs to be refactored\n  for (var i = 0; i < group.marks.length; i++) {\n    var mark = group.marks[i];\n    if (mark.from.transform) {\n      delete mark.from.data; //need to keep transform for subfacetting case\n    } else {\n      delete mark.from;\n    }\n  }\n\n  if (hasRow) {\n    if (!encoding.isDimension(ROW)) {\n      util.error('Row encoding should be ordinal.');\n    }\n    enter.y = {scale: ROW, field: 'keys.' + facetKeys.length};\n    enter.height = {'value': layout.cellHeight}; // HACK\n\n    facetKeys.push(encoding.field(ROW));\n\n    if (hasCol) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', keys: [encoding.field(COL)]});\n    }\n\n    axesGrp = groupdef('x-axes', {\n        axes: encoding.has(X) ? axis.defs(['x'], encoding, layout, stats) : undefined,\n        x: hasCol ? {scale: COL, field: 'keys.0'} : {value: 0},\n        width: hasCol && {'value': layout.cellWidth}, //HACK?\n        from: from\n      });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push.apply(spec.axes, axis.defs(['row'], encoding, layout, stats));\n  } else { // doesn't have row\n    if (encoding.has(X)) {\n      //keep x axis in the cell\n      cellAxes.push.apply(cellAxes, axis.defs(['x'], encoding, layout, stats));\n    }\n  }\n\n  if (hasCol) {\n    if (!encoding.isDimension(COL)) {\n      util.error('Col encoding should be ordinal.');\n    }\n    enter.x = {scale: COL, field: 'keys.' + facetKeys.length};\n    enter.width = {'value': layout.cellWidth}; // HACK\n\n    facetKeys.push(encoding.field(COL));\n\n    if (hasRow) {\n      from = util.duplicate(group.from);\n      from.transform = from.transform || [];\n      from.transform.unshift({type: 'facet', keys: [encoding.field(ROW)]});\n    }\n\n    axesGrp = groupdef('y-axes', {\n      axes: encoding.has(Y) ? axis.defs(['y'], encoding, layout, stats) : undefined,\n      y: hasRow && {scale: ROW, field: 'keys.0'},\n      x: hasRow && {value: 0},\n      height: hasRow && {'value': layout.cellHeight}, //HACK?\n      from: from\n    });\n\n    spec.marks.unshift(axesGrp); // need to prepend so it appears under the plots\n    (spec.axes = spec.axes || []);\n    spec.axes.push.apply(spec.axes, axis.defs(['col'], encoding, layout, stats));\n  } else { // doesn't have col\n    if (encoding.has(Y)) {\n      cellAxes.push.apply(cellAxes, axis.defs(['y'], encoding, layout, stats));\n    }\n  }\n\n  // assuming equal cellWidth here\n  // TODO: support heterogenous cellWidth (maybe by using multiple scales?)\n  spec.scales = (spec.scales || []).concat(scale.defs(\n    scale.names(enter).concat(scale.names(mdef.properties.update)),\n    encoding,\n    layout,\n    stats,\n    style,\n    sorting,\n    {stack: stack, facet: true}\n  )); // row/col scales + cell scales\n\n  if (cellAxes.length > 0) {\n    group.axes = cellAxes;\n  }\n\n  // add facet transform\n  var trans = (group.from.transform || (group.from.transform = []));\n  trans.unshift({type: 'facet', keys: facetKeys});\n\n  return spec;\n}\n","'use strict';\n\nrequire('../globals');\n\nvar filter = module.exports = {};\n\nvar BINARY = {\n  '>':  true,\n  '>=': true,\n  '=':  true,\n  '!=': true,\n  '<':  true,\n  '<=': true\n};\n\nfilter.addFilters = function(rawTable, encoding) {\n  var filters = encoding.filter();  // apply filters to raw data before aggregation\n\n  if (!rawTable.transform)\n    rawTable.transform = [];\n\n  // add custom filters\n  for (var i in filters) {\n    var filter = filters[i];\n\n    var condition = '';\n    var operator = filter.operator;\n    var operands = filter.operands;\n\n    var d = 'd.' + (encoding._vega2 ? '' : 'data.');\n\n    if (BINARY[operator]) {\n      // expects a field and a value\n      if (operator === '=') {\n        operator = '==';\n      }\n\n      var op1 = operands[0];\n      var op2 = operands[1];\n      condition = d + op1 + operator + op2;\n    } else if (operator === 'notNull') {\n      // expects a number of fields\n      for (var j in operands) {\n        condition += d + operands[j] + '!==null';\n        if (j < operands.length - 1) {\n          condition += ' && ';\n        }\n      }\n    } else {\n      console.warn('Unsupported operator: ', operator);\n    }\n\n    rawTable.transform.push({\n      type: 'filter',\n      test: condition\n    });\n  }\n\n  return rawTable;\n};\n\n// remove less than 0 values if we use log function\nfilter.filterLessThanZero = function(dataTable, encoding) {\n  encoding.forEach(function(field, encType) {\n    if (encoding.scale(encType).type === 'log') {\n      dataTable.transform.push({\n        type: 'filter',\n        test: 'd.' + encoding.field(encType) + '>0'\n      });\n    }\n  });\n};\n\n","'use strict';\n\nmodule.exports = {\n  def: groupdef\n};\n\nfunction groupdef(name, opt) {\n  opt = opt || {};\n  return {\n    _name: name || undefined,\n    type: 'group',\n    from: opt.from,\n    properties: {\n      enter: {\n        x: opt.x || undefined,\n        y: opt.y || undefined,\n        width: opt.width || {group: 'width'},\n        height: opt.height || {group: 'height'}\n      }\n    },\n    scales: opt.scales || undefined,\n    axes: opt.axes || undefined,\n    marks: opt.marks || []\n  };\n}\n","'use strict';\n\nrequire('../globals');\n\nvar util = require('../util'),\n  setter = util.setter;\n\nmodule.exports = vllayout;\n\nfunction vllayout(encoding, stats) {\n  var layout = box(encoding, stats);\n  layout = offset(encoding, stats, layout);\n  return layout;\n}\n\n/*\n  HACK to set chart size\n  NOTE: this fails for plots driven by derived values (e.g., aggregates)\n  One solution is to update Vega to support auto-sizing\n  In the meantime, auto-padding (mostly) does the trick\n */\nfunction box(encoding, stats) {\n  var hasRow = encoding.has(ROW),\n      hasCol = encoding.has(COL),\n      hasX = encoding.has(X),\n      hasY = encoding.has(Y),\n      marktype = encoding.marktype();\n\n  // FIXME/HACK we need to take filter into account\n  var xCardinality = hasX && encoding.isDimension(X) ? encoding.cardinality(X, stats) : 1,\n    yCardinality = hasY && encoding.isDimension(Y) ? encoding.cardinality(Y, stats) : 1;\n\n  var useSmallBand = xCardinality > encoding.config('largeBandMaxCardinality') ||\n    yCardinality > encoding.config('largeBandMaxCardinality');\n\n  var cellWidth, cellHeight, cellPadding = encoding.config('cellPadding');\n\n  // set cellWidth\n  if (hasX) {\n    if (encoding.isOrdinalScale(X)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellWidth = (xCardinality + encoding.band(X).padding) * encoding.bandSize(X, useSmallBand);\n    } else {\n      cellWidth = hasCol || hasRow ? encoding.enc(COL).width :  encoding.config('singleWidth');\n    }\n  } else {\n    if (marktype === TEXT) {\n      cellWidth = encoding.config('textCellWidth');\n    } else {\n      cellWidth = encoding.bandSize(X);\n    }\n  }\n\n  // set cellHeight\n  if (hasY) {\n    if (encoding.isOrdinalScale(Y)) {\n      // for ordinal, hasCol or not doesn't matter -- we scale based on cardinality\n      cellHeight = (yCardinality + encoding.band(Y).padding) * encoding.bandSize(Y, useSmallBand);\n    } else {\n      cellHeight = hasCol || hasRow ? encoding.enc(ROW).height :  encoding.config('singleHeight');\n    }\n  } else {\n    cellHeight = encoding.bandSize(Y);\n  }\n\n  // Cell bands use rangeBands(). There are n-1 padding.  Outerpadding = 0 for cells\n\n  var width = cellWidth, height = cellHeight;\n  if (hasCol) {\n    var colCardinality = encoding.cardinality(COL, stats);\n    width = cellWidth * ((1 + cellPadding) * (colCardinality - 1) + 1);\n  }\n  if (hasRow) {\n    var rowCardinality =  encoding.cardinality(ROW, stats);\n    height = cellHeight * ((1 + cellPadding) * (rowCardinality - 1) + 1);\n  }\n\n  return {\n    // width and height of the whole cell\n    cellWidth: cellWidth,\n    cellHeight: cellHeight,\n    cellPadding: cellPadding,\n    // width and height of the chart\n    width: width,\n    height: height,\n    // information about x and y, such as band size\n    x: {useSmallBand: useSmallBand},\n    y: {useSmallBand: useSmallBand}\n  };\n}\n\nfunction getMaxLength(encoding, stats, et) {\n  // FIXME determine constant for Q and T in a nicer way\n  if (encoding.bin(et)) {\n    return 5;\n  } else if (encoding.isType(et, Q)) {\n    return 10;\n  } else if (encoding.isType(et, T)) {\n    return 15;\n  } else if (encoding.isTypes(et, [N, O]) && encoding.axis(et).maxLabelLength) {\n    return Math.min(stats[encoding.fieldName(et)].max, encoding.axis(et).maxLabelLength);\n  }\n  return stats[encoding.fieldName(et)].max;\n}\n\nfunction offset(encoding, stats, layout) {\n  [X, Y].forEach(function (x) {\n    var maxLength;\n    if (encoding.isDimension(x) || encoding.isType(x, T)) {\n      maxLength =  getMaxLength(encoding, stats, x);\n    } else if (encoding.aggregate(x) === 'count') {\n      //assign default value for count as it won't have stats\n      maxLength =  3;\n    } else if (encoding.isType(x, Q)) {\n      if (x===X) {\n        maxLength = 3;\n      } else { // Y\n        //assume that default formating is always shorter than 7\n        maxLength = Math.min(getMaxLength(encoding, stats, x), 7);\n      }\n    } else {\n      // nothing\n    }\n    setter(layout,[x, 'axisTitleOffset'], encoding.config('characterWidth') *  maxLength + 20);\n  });\n  return layout;\n}\n","'use strict';\n\nrequire('../globals');\n\nvar time = require('./time');\n\nvar legend = module.exports = {};\n\nlegend.defs = function(encoding) {\n  var defs = [];\n  // TODO: support alpha\n\n  if (encoding.has(COLOR) && encoding.legend(COLOR)) {\n    defs.push(legend.def(COLOR, encoding, {\n      fill: COLOR,\n      orient: 'right'\n    }));\n  }\n\n  if (encoding.has(SIZE) && encoding.legend(SIZE)) {\n    defs.push(legend.def(SIZE, encoding, {\n      size: SIZE,\n      orient: defs.length === 1 ? 'left' : 'right'\n    }));\n  }\n\n  if (encoding.has(SHAPE) && encoding.legend(SHAPE)) {\n    if (defs.length === 2) {\n      // TODO: fix this\n      console.error('Vega-lite currently only supports two legends');\n      return defs;\n    }\n    defs.push(legend.def(SHAPE, encoding, {\n      shape: SHAPE,\n      orient: defs.length === 1 ? 'left' : 'right'\n    }));\n  }\n\n  return defs;\n};\n\nlegend.def = function(name, encoding, props) {\n  var def = props, timeUnit;\n\n  def.title = encoding.fieldTitle(name);\n\n  if (encoding.isType(name, T) && (timeUnit = encoding.timeUnit(name)) &&\n    time.hasScale(timeUnit)) {\n    var properties = def.properties = def.properties || {},\n      labels = properties.labels = properties.labels || {},\n      text = labels.text = labels.text || {};\n\n    text.scale = 'time-'+ timeUnit;\n  }\n\n  return def;\n};\n","'use strict';\n\nrequire('../globals');\n\nvar marks = module.exports = {};\n\nmarks.def = function(mark, encoding, layout, style) {\n  var defs = [];\n\n  // to add a background to text, we need to add it before the text\n  if (encoding.marktype() === TEXT && encoding.has(COLOR)) {\n    var bg = {\n      x: {value: 0},\n      y: {value: 0},\n      x2: {value: layout.cellWidth},\n      y2: {value: layout.cellHeight},\n      fill: {scale: COLOR, field: encoding.field(COLOR)}\n    };\n    defs.push({\n      type: 'rect',\n      from: {data: TABLE},\n      properties: {enter: bg, update: bg}\n    });\n  }\n\n  // add the mark def for the main thing\n  var p = mark.prop(encoding, layout, style);\n  defs.push({\n    type: mark.type,\n    from: {data: TABLE},\n    properties: {enter: p, update: p}\n  });\n\n  return defs;\n};\n\nmarks.bar = {\n  type: 'rect',\n  stack: true,\n  prop: bar_props,\n  requiredEncoding: ['x', 'y'],\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1}\n};\n\nmarks.line = {\n  type: 'line',\n  line: true,\n  prop: line_props,\n  requiredEncoding: ['x', 'y'],\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1, detail:1}\n};\n\nmarks.area = {\n  type: 'area',\n  stack: true,\n  line: true,\n  requiredEncoding: ['x', 'y'],\n  prop: area_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1}\n};\n\nmarks.tick = {\n  type: 'rect',\n  prop: tick_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, color: 1, alpha: 1, detail: 1}\n};\n\nmarks.circle = {\n  type: 'symbol',\n  prop: filled_point_props('circle'),\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1, detail: 1}\n};\n\nmarks.square = {\n  type: 'symbol',\n  prop: filled_point_props('square'),\n  supportedEncoding: marks.circle.supportedEncoding\n};\n\nmarks.point = {\n  type: 'symbol',\n  prop: point_props,\n  supportedEncoding: {row: 1, col: 1, x: 1, y: 1, size: 1, color: 1, alpha: 1, shape: 1, detail: 1}\n};\n\nmarks.text = {\n  type: 'text',\n  prop: text_props,\n  requiredEncoding: ['text'],\n  supportedEncoding: {row: 1, col: 1, size: 1, color: 1, alpha: 1, text: 1}\n};\n\nfunction bar_props(e, layout, style) {\n  // jshint unused:false\n\n  var p = {};\n\n  // x's and width\n  if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (!e.has(Y) || e.isDimension(Y)) {\n      p.x2 = {value: 0};\n    }\n  } else {\n    if (e.has(X)) { // is ordinal\n       p.xc = {scale: X, field: e.field(X)};\n    } else {\n       p.x = {value: 0, offset: e.config('singleBarOffset')};\n    }\n  }\n\n  // width\n  if (!p.x2) {\n    if (!e.has(X) || e.isOrdinalScale(X)) { // no X or X is ordinal\n      if (e.has(SIZE)) {\n        p.width = {scale: SIZE, field: e.field(SIZE)};\n      } else {\n        p.width = {\n          value: e.bandSize(X, layout.x.useSmallBand),\n          offset: -1\n        };\n      }\n    } else { // X is Quant or Time Scale\n      p.width = {value: 2};\n    }\n  }\n\n  // y's & height\n  if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    p.y2 = {group: 'height'};\n  } else {\n    if (e.has(Y)) { // is ordinal\n      p.yc = {scale: Y, field: e.field(Y)};\n    } else {\n      p.y2 = {group: 'height', offset: -e.config('singleBarOffset')};\n    }\n\n    if (e.has(SIZE)) {\n      p.height = {scale: SIZE, field: e.field(SIZE)};\n    } else {\n      p.height = {\n        value: e.bandSize(Y, layout.y.useSmallBand),\n        offset: -1\n      };\n    }\n  }\n\n\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  return p;\n}\n\nfunction point_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.size = {scale: SIZE, field: e.field(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.size = {value: e.value(SIZE)};\n  }\n\n  // shape\n  if (e.has(SHAPE)) {\n    p.shape = {scale: SHAPE, field: e.field(SHAPE)};\n  } else if (!e.has(SHAPE)) {\n    p.shape = {value: e.value(SHAPE)};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.stroke = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.stroke = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else if (!e.has(COLOR)) {\n    p.opacity = {value: style.opacity};\n  }\n\n  p.strokeWidth = {value: e.config('strokeWidth')};\n\n  return p;\n}\n\nfunction line_props(e,layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {group: 'height'};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.stroke = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.stroke = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  p.strokeWidth = {value: e.config('strokeWidth')};\n\n  return p;\n}\n\nfunction area_props(e, layout, style) {\n  // jshint unused:false\n  var p = {};\n\n  // x\n  if (e.isMeasure(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (e.isDimension(Y)) {\n      p.x2 = {scale: X, value: 0};\n      p.orient = {value: 'horizontal'};\n    }\n  } else if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.isMeasure(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    p.y2 = {scale: Y, value: 0};\n  } else if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else {\n    p.y = {group: 'height'};\n  }\n\n  // stroke\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else if (!e.has(COLOR)) {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  }\n\n  return p;\n}\n\nfunction tick_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n    if (e.isDimension(X)) {\n      p.x.offset = -e.bandSize(X, layout.x.useSmallBand) / 3;\n    }\n  } else if (!e.has(X)) {\n    p.x = {value: 0};\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n    if (e.isDimension(Y)) {\n      p.y.offset = -e.bandSize(Y, layout.y.useSmallBand) / 3;\n    }\n  } else if (!e.has(Y)) {\n    p.y = {value: 0};\n  }\n\n  // width\n  if (!e.has(X) || e.isDimension(X)) {\n    p.width = {value: e.bandSize(X, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.width = {value: 1};\n  }\n\n  // height\n  if (!e.has(Y) || e.isDimension(Y)) {\n    p.height = {value: e.bandSize(Y, layout.y.useSmallBand) / 1.5};\n  } else {\n    p.height = {value: 1};\n  }\n\n  // fill\n  if (e.has(COLOR)) {\n    p.fill = {scale: COLOR, field: e.field(COLOR)};\n  } else {\n    p.fill = {value: e.value(COLOR)};\n  }\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else if (!e.has(COLOR)) {\n    p.opacity = {value: style.opacity};\n  }\n\n  return p;\n}\n\nfunction filled_point_props(shape) {\n  return function(e, layout, style) {\n    var p = {};\n\n    // x\n    if (e.has(X)) {\n      p.x = {scale: X, field: e.field(X)};\n    } else if (!e.has(X)) {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n\n    // y\n    if (e.has(Y)) {\n      p.y = {scale: Y, field: e.field(Y)};\n    } else if (!e.has(Y)) {\n      p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n    }\n\n    // size\n    if (e.has(SIZE)) {\n      p.size = {scale: SIZE, field: e.field(SIZE)};\n    } else if (!e.has(X)) {\n      p.size = {value: e.value(SIZE)};\n    }\n\n    // shape\n    p.shape = {value: shape};\n\n    // fill\n    if (e.has(COLOR)) {\n      p.fill = {scale: COLOR, field: e.field(COLOR)};\n    } else if (!e.has(COLOR)) {\n      p.fill = {value: e.value(COLOR)};\n    }\n\n    // alpha\n    if (e.has(ALPHA)) {\n      p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n    } else if (e.value(ALPHA) !== undefined) {\n      p.opacity = {value: e.value(ALPHA)};\n    } else if (!e.has(COLOR)) {\n      p.opacity = {value: style.opacity};\n    }\n\n    return p;\n  };\n}\n\nfunction text_props(e, layout, style) {\n  var p = {};\n\n  // x\n  if (e.has(X)) {\n    p.x = {scale: X, field: e.field(X)};\n  } else if (!e.has(X)) {\n    if (e.has(TEXT) && e.isType(TEXT, Q)) {\n      p.x = {value: layout.cellWidth-5};\n    } else {\n      p.x = {value: e.bandSize(X, layout.x.useSmallBand) / 2};\n    }\n  }\n\n  // y\n  if (e.has(Y)) {\n    p.y = {scale: Y, field: e.field(Y)};\n  } else if (!e.has(Y)) {\n    p.y = {value: e.bandSize(Y, layout.y.useSmallBand) / 2};\n  }\n\n  // size\n  if (e.has(SIZE)) {\n    p.fontSize = {scale: SIZE, field: e.field(SIZE)};\n  } else if (!e.has(SIZE)) {\n    p.fontSize = {value: e.font('size')};\n  }\n\n  // fill\n  // color should be set to background\n  p.fill = {value: 'black'};\n\n  // alpha\n  if (e.has(ALPHA)) {\n    p.opacity = {scale: ALPHA, field: e.field(ALPHA)};\n  } else if (e.value(ALPHA) !== undefined) {\n    p.opacity = {value: e.value(ALPHA)};\n  } else {\n    p.opacity = {value: style.opacity};\n  }\n\n  // text\n  if (e.has(TEXT)) {\n    if (e.isType(TEXT, Q)) {\n      p.text = {template: '{{' + e.field(TEXT) + ' | number:\\'.3s\\'}}'};\n      p.align = {value: 'right'};\n    } else {\n      p.text = {field: e.field(TEXT)};\n    }\n  } else {\n    p.text = {value: 'Abc'};\n  }\n\n  p.font = {value: e.font('family')};\n  p.fontWeight = {value: e.font('weight')};\n  p.fontStyle = {value: e.font('style')};\n  p.baseline = {value: e.text('baseline')};\n\n  return p;\n}\n","'use strict';\nrequire('../globals');\nvar util = require('../util'),\n  time = require('./time'),\n  colorbrewer = require('colorbrewer'),\n  interpolateLab = require('d3-color').interpolateLab;\n\nvar scale = module.exports = {};\n\nscale.names = function(props) {\n  return util.keys(util.keys(props).reduce(function(a, x) {\n    if (props[x] && props[x].scale) a[props[x].scale] = 1;\n    return a;\n  }, {}));\n};\n\nscale.defs = function(names, encoding, layout, stats, style, sorting, opt) {\n  opt = opt || {};\n\n  return names.reduce(function(a, name) {\n    var s = {\n      name: name,\n      type: scale.type(name, encoding),\n      domain: scale.domain(name, encoding, sorting, opt)\n    };\n    if (s.type === 'ordinal' && !encoding.bin(name) && encoding.sort(name).length === 0) {\n      s.sort = true;\n    }\n\n    scale_range(s, encoding, layout, stats, style, opt);\n\n    return (a.push(s), a);\n  }, []);\n};\n\nscale.type = function(name, encoding) {\n\n  switch (encoding.type(name)) {\n    case N: //fall through\n    case O: return 'ordinal';\n    case T:\n      var timeUnit = encoding.timeUnit(name);\n      return (timeUnit && time.scale.type(timeUnit, name)) || 'time';\n    case Q:\n      if (encoding.bin(name)) {\n        return name === COLOR ? 'linear' : 'ordinal';\n      }\n      return encoding.scale(name).type;\n  }\n};\n\nscale.domain = function (name, encoding, sorting, opt) {\n  if (encoding.isType(name, T)) {\n    var range = time.scale.domain(encoding.timeUnit(name), name);\n    if(range) return range;\n  }\n\n  if (name == opt.stack) {\n    return {\n      data: STACKED,\n      field: encoding.fieldRef(name, {\n        data: !encoding._vega2,\n        prefn: (opt.facet ? 'max_' : '') + 'sum_'\n      })\n    };\n  }\n  return {data: sorting.getDataset(name), field: encoding.field(name)};\n};\n\n\nfunction scale_range(s, encoding, layout, stats, style, opt) {\n  // jshint unused:false\n  var spec = encoding.scale(s.name);\n  switch (s.name) {\n    case X:\n      if (s.type === 'ordinal') {\n        s.bandWidth = encoding.bandSize(X, layout.x.useSmallBand);\n      } else {\n        s.range = layout.cellWidth ? [0, layout.cellWidth] : 'width';\n\n        if (encoding.isType(s.name,T) && encoding.timeUnit(s.name) === 'year') {\n          s.zero = false;\n        } else {\n          s.zero = spec.zero === undefined ? true : spec.zero;\n        }\n\n        s.reverse = spec.reverse;\n      }\n      s.round = true;\n      if (s.type === 'time') {\n        s.nice = encoding.timeUnit(s.name);\n      }else {\n        s.nice = true;\n      }\n      break;\n    case Y:\n      if (s.type === 'ordinal') {\n        s.bandWidth = encoding.bandSize(Y, layout.y.useSmallBand);\n      } else {\n        s.range = layout.cellHeight ? [layout.cellHeight, 0] : 'height';\n\n        if (encoding.isType(s.name,T) && encoding.timeUnit(s.name) === 'year') {\n          s.zero = false;\n        } else {\n          s.zero = spec.zero === undefined ? true : spec.zero;\n        }\n\n        s.reverse = spec.reverse;\n      }\n\n      s.round = true;\n\n      if (s.type === 'time') {\n        s.nice = encoding.timeUnit(s.name) || encoding.config('timeScaleNice');\n      }else {\n        s.nice = true;\n      }\n      break;\n    case ROW: // support only ordinal\n      s.bandWidth = layout.cellHeight;\n      s.round = true;\n      s.nice = true;\n      break;\n    case COL: // support only ordinal\n      s.bandWidth = layout.cellWidth;\n      s.round = true;\n      s.nice = true;\n      break;\n    case SIZE:\n      if (encoding.is('bar')) {\n        // FIXME this is definitely incorrect\n        // but let's fix it later since bar size is a bad encoding anyway\n        s.range = [3, Math.max(encoding.bandSize(X), encoding.bandSize(Y))];\n      } else if (encoding.is(TEXT)) {\n        s.range = [8, 40];\n      } else { //point\n        var bandSize = Math.min(encoding.bandSize(X), encoding.bandSize(Y)) - 1;\n        s.range = [10, 0.8 * bandSize*bandSize];\n      }\n      s.round = true;\n      s.zero = false;\n      break;\n    case SHAPE:\n      s.range = 'shapes';\n      break;\n    case COLOR:\n      s.range = scale.color(s, encoding, stats);\n      break;\n    case ALPHA:\n      s.range = [0.2, 1.0];\n      break;\n    default:\n      throw new Error('Unknown encoding name: '+ s.name);\n  }\n\n  switch (s.name) {\n    case ROW:\n    case COL:\n      s.padding = encoding.config('cellPadding');\n      s.outerPadding = 0;\n      break;\n    case X:\n    case Y:\n      if (s.type === 'ordinal') { //&& !s.bandWidth\n        s.points = true;\n        s.padding = encoding.band(s.name).padding;\n      }\n  }\n}\n\nscale.color = function(s, encoding, stats) {\n  var range = encoding.scale(COLOR).range,\n    cardinality = encoding.cardinality(COLOR, stats),\n    type = encoding.type(COLOR);\n\n  if (range === undefined) {\n    var ordinalPalette = encoding.config('ordinalPalette');\n    if (s.type === 'ordinal') {\n      if (type === N) {\n        // use categorical color scale\n        if (cardinality <= 10) {\n          range = encoding.config('c10palette');\n        } else {\n          range = encoding.config('c20palette');\n        }\n      } else {\n        if (cardinality <= 2) {\n          range = [colorbrewer[ordinalPalette][3][0], colorbrewer[ordinalPalette][3][2]];\n        } else {\n          range = ordinalPalette;\n        }\n      }\n    } else { //time or quantitative\n      var palette = colorbrewer[ordinalPalette][9];\n      range = [palette[0], palette[8]];\n      s.zero = false;\n    }\n  }\n  return scale.color.palette(range, cardinality, type);\n};\n\nscale.color.palette = function(range, cardinality, type) {\n  switch (range) {\n    case 'category10k':\n      // tableau's category 10, ordered by perceptual kernel study results\n      // https://github.com/uwdata/perceptual-kernels\n      return ['#2ca02c', '#e377c2', '#7f7f7f', '#17becf', '#8c564b', '#d62728', '#bcbd22', '#9467bd', '#ff7f0e', '#1f77b4'];\n\n    // d3/tableau category10/20/20b/20c\n    case 'category10':\n      return ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'];\n\n    case 'category20':\n      return ['#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78', '#2ca02c', '#98df8a', '#d62728', '#ff9896', '#9467bd', '#c5b0d5', '#8c564b', '#c49c94', '#e377c2', '#f7b6d2', '#7f7f7f', '#c7c7c7', '#bcbd22', '#dbdb8d', '#17becf', '#9edae5'];\n\n    case 'category20b':\n      return ['#393b79', '#5254a3', '#6b6ecf', '#9c9ede', '#637939', '#8ca252', '#b5cf6b', '#cedb9c', '#8c6d31', '#bd9e39', '#e7ba52', '#e7cb94', '#843c39', '#ad494a', '#d6616b', '#e7969c', '#7b4173', '#a55194', '#ce6dbd', '#de9ed6'];\n\n    case 'category20c':\n      return ['#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n  }\n\n  if (range in colorbrewer) {\n    var palette = colorbrewer[range],\n      ps = 5;\n\n    // if cardinality pre-defined, use it.\n    if (cardinality in palette) return palette[cardinality];\n\n    // if not, use the highest cardinality one for nominal\n    if (type === N) {\n      return palette[Math.max.apply(null, util.keys(palette))];\n    }\n\n    // otherwise, interpolate\n    return scale.color.interpolate(palette[ps][0], palette[ps][ps-1], cardinality);\n  }\n\n  return range;\n};\n\nscale.color.interpolate = function (start, end, cardinality) {\n  var interpolator = interpolateLab(start, end);\n  return util.range(cardinality).map(function(i) { return interpolator(i*1.0/(cardinality-1)); });\n};\n\n","'use strict';\n\nrequire('../globals');\n\nvar vlfield = require('../field');\n\nmodule.exports = addSortTransforms;\n\n// adds new transforms that produce sorted fields\nfunction addSortTransforms(data, encoding, stats, opt) {\n  // jshint unused:false\n\n  var datasetMapping = {};\n  var counter = 0;\n\n  encoding.forEach(function(field, encType) {\n    var sortBy = encoding.sort(encType, stats);\n    if (sortBy.length > 0) {\n      var fields = sortBy.map(function(d) {\n        return {\n          op: d.aggregate,\n          field: vlfield.fieldRef(d, {nofn: true, data: !encoding._vega2})\n        };\n      });\n\n      var byClause = sortBy.map(function(d) {\n        var reverse = (d.reverse ? '-' : '');\n        return reverse + vlfield.fieldRef(d, {data: !encoding._vega2});\n      });\n\n      var dataName = 'sorted' + counter++;\n\n      var transforms = [\n        {\n          type: 'aggregate',\n          groupby: [ encoding.fieldRef(encType) ],\n          fields: fields\n        },\n        {\n          type: 'sort',\n          by: byClause\n        }\n      ];\n\n      data.push({\n        name: dataName,\n        source: RAW,\n        transform: transforms\n      });\n\n      datasetMapping[encType] = dataName;\n    }\n  });\n\n  return {\n    getDataset: function(encType) {\n      var data = datasetMapping[encType];\n      if (!data) {\n        return TABLE;\n      }\n      return data;\n    }\n  };\n}\n\n","'use strict';\n\nrequire('../globals');\n\nvar  marks = require('./marks');\n\nmodule.exports = stacking;\n\nfunction stacking(data, encoding, mdef, facets) {\n  if (!marks[encoding.marktype()].stack) return false;\n\n  // TODO: add || encoding.has(LOD) here once LOD is implemented\n  if (!encoding.has(COLOR)) return false;\n\n  var dim=null, val=null, idx =null,\n    isXMeasure = encoding.isMeasure(X),\n    isYMeasure = encoding.isMeasure(Y);\n\n  if (isXMeasure && !isYMeasure) {\n    dim = Y;\n    val = X;\n    idx = 0;\n  } else if (isYMeasure && !isXMeasure) {\n    dim = X;\n    val = Y;\n    idx = 1;\n  } else {\n    return null; // no stack encoding\n  }\n\n  // add transform to compute sums for scale\n  var stacked = {\n    name: STACKED,\n    source: TABLE,\n    transform: [{\n      type: 'aggregate',\n      groupby: [encoding.field(dim)].concat(facets), // dim and other facets\n      fields: [{op: 'sum', field: encoding.field(val)}] // TODO check if field with aggregate is correct?\n    }]\n  };\n\n  if (facets && facets.length > 0) {\n    stacked.transform.push({ //calculate max for each facet\n      type: 'aggregate',\n      groupby: facets,\n      fields: [{\n        op: 'max',\n        field: encoding.fieldName(val, {fn: 'sum'})\n      }]\n    });\n  }\n\n  data.push(stacked);\n\n  // add stack transform to mark\n  mdef.from.transform = [{\n    type: 'stack',\n    point: encoding.field(dim),\n    height: encoding.field(val),\n    output: {y1: val, y0: val + '2'}\n  }];\n\n  // TODO: This is super hack-ish -- consolidate into modular mark properties?\n  mdef.properties.update[val] = mdef.properties.enter[val] = {scale: val, field: val};\n  mdef.properties.update[val + '2'] = mdef.properties.enter[val + '2'] = {scale: val, field: val + '2'};\n\n  return val; //return stack encoding\n}\n","'use strict';\n\nrequire('../globals');\n\nvar vlfield = require('../field');\n\nmodule.exports = function(encoding, stats) {\n  return {\n    opacity: estimateOpacity(encoding, stats),\n  };\n};\n\nfunction estimateOpacity(encoding,stats) {\n  if (!stats) {\n    return 1;\n  }\n\n  var numPoints = 0;\n\n  if (encoding.isAggregate()) { // aggregate plot\n    numPoints = 1;\n\n    //  get number of points in each \"cell\"\n    //  by calculating product of cardinality\n    //  for each non faceting and non-ordinal X / Y fields\n    //  note that ordinal x,y are not include since we can\n    //  consider that ordinal x are subdividing the cell into subcells anyway\n    encoding.forEach(function(field, encType) {\n\n      if (encType !== ROW && encType !== COL &&\n          !((encType === X || encType === Y) &&\n          vlfield.isOrdinalScale(field))\n        ) {\n        numPoints *= encoding.cardinality(encType, stats);\n      }\n    });\n\n  } else { // raw plot\n    numPoints = stats.count;\n\n    // small multiples divide number of points\n    var numMultiples = 1;\n    if (encoding.has(ROW)) {\n      numMultiples *= encoding.cardinality(ROW, stats);\n    }\n    if (encoding.has(COL)) {\n      numMultiples *= encoding.cardinality(COL, stats);\n    }\n    numPoints /= numMultiples;\n  }\n\n  var opacity = 0;\n  if (numPoints < 20) {\n    opacity = 1;\n  } else if (numPoints < 200) {\n    opacity = 0.7;\n  } else if (numPoints < 1000 || encoding.is('tick')) {\n    opacity = 0.6;\n  } else {\n    opacity = 0.3;\n  }\n\n  return opacity;\n}\n\n","'use strict';\n\nrequire('../globals');\n\nvar groupdef = require('./group').def;\n\nmodule.exports = subfaceting;\n\nfunction subfaceting(group, mdef, details, stack, encoding) {\n  var m = group.marks,\n    g = groupdef('subfacet', {marks: m});\n\n  group.marks = [g];\n  g.from = mdef.from;\n  delete mdef.from;\n\n  //TODO test LOD -- we should support stack / line without color (LOD) field\n  var trans = (g.from.transform || (g.from.transform = []));\n  trans.unshift({type: 'facet', keys: details});\n\n  if (stack && encoding.has(COLOR)) {\n    trans.unshift({type: 'sort', by: encoding.field(COLOR)});\n  }\n}\n","'use strict';\n\nrequire('../globals');\n\nvar groupdef = require('./group').def,\n  vlfield = require('../field');\n\nmodule.exports = template;\n\nfunction template(encoding, layout, stats) {\n  // jshint unused:false\n\n  var data = {name: RAW, format: {}},\n    table = {name: TABLE, source: RAW},\n    dataUrl = encoding.data('url'),\n    dataType = encoding.data('formatType'),\n    values = encoding.data('values');\n\n  if (encoding.hasValues()) {\n    data.values = values;\n  } else {\n    data.url = dataUrl;\n    data.format.type = dataType;\n  }\n\n  encoding.forEach(function(field, encType) {\n    var name;\n    if (field.type == T) {\n      data.format.parse = data.format.parse || {};\n      data.format.parse[field.name] = 'date';\n    } else if (field.type == Q) {\n      data.format.parse = data.format.parse || {};\n      if (vlfield.isCount(field)) {\n        name = 'count';\n      } else {\n        name = field.name;\n      }\n      data.format.parse[name] = 'number';\n    }\n  });\n\n  return {\n    width: layout.width,\n    height: layout.height,\n    padding: 'auto',\n    data: [data, table],\n    marks: [groupdef('cell', {\n      width: layout.cellWidth ? {value: layout.cellWidth} : undefined,\n      height: layout.cellHeight ? {value: layout.cellHeight} : undefined\n    })]\n  };\n}\n","'use strict';\n\nvar util = require('../util');\n\nmodule.exports = time;\n\nfunction time(spec, encoding, opt) { // FIXME refactor to reduce side effect #276\n  // jshint unused:false\n  var timeFields = {}, timeUnits = {};\n\n  // find unique formula transformation and bin function\n  encoding.forEach(function(field, encType) {\n    if (field.type === T && field.timeUnit) {\n      timeFields[encoding.field(encType)] = {\n        field: field,\n        encType: encType\n      };\n      timeUnits[field.timeUnit] = true;\n    }\n  });\n\n  // add formula transform\n  var data = spec.data[1],\n    transform = data.transform = data.transform || [];\n\n  for (var f in timeFields) {\n    var tf = timeFields[f];\n    time.transform(transform, encoding, tf.encType, tf.field);\n  }\n\n  // add scales\n  var scales = spec.scales = spec.scales || [];\n  for (var timeUnit in timeUnits) {\n    time.scale(scales, timeUnit, encoding);\n  }\n  return spec;\n}\n\n\n\ntime.cardinality = function(field, stats, filterNull, type) {\n  var timeUnit = field.timeUnit;\n  switch (timeUnit) {\n    case 'seconds': return 60;\n    case 'minutes': return 60;\n    case 'hours': return 24;\n    case 'day': return 7;\n    case 'date': return 31;\n    case 'month': return 12;\n    case 'year':\n      var stat = stats[field.name],\n        yearstat = stats['year_'+field.name];\n\n      if (!yearstat) { return null; }\n\n      return yearstat.distinct -\n        (stat.nulls > 0 && filterNull[type] ? 1 : 0);\n  }\n\n  return null;\n};\n\nfunction fieldFn(func, field) {\n  return 'utc' + func + '(d.data.'+ field.name +')';\n}\n\n/**\n * @return {String} date binning formula of the given field\n */\ntime.formula = function(field) {\n  return fieldFn(field.timeUnit, field);\n};\n\n/** add formula transforms to data */\ntime.transform = function(transform, encoding, encType, field) {\n  transform.push({\n    type: 'formula',\n    field: encoding.field(encType),\n    expr: time.formula(field)\n  });\n};\n\n/** append custom time scales for axis label */\ntime.scale = function(scales, timeUnit, encoding) {\n  var labelLength = encoding.config('timeScaleLabelLength');\n  // TODO add option for shorter scale / custom range\n  switch (timeUnit) {\n    case 'day':\n      scales.push({\n        name: 'time-'+timeUnit,\n        type: 'ordinal',\n        domain: util.range(0, 7),\n        range: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map(\n          function(s) { return s.substr(0, labelLength);}\n        )\n      });\n      break;\n    case 'month':\n      scales.push({\n        name: 'time-'+timeUnit,\n        type: 'ordinal',\n        domain: util.range(0, 12),\n        range: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'].map(\n            function(s) { return s.substr(0, labelLength);}\n          )\n      });\n      break;\n  }\n};\n\ntime.isOrdinalFn = function(timeUnit) {\n  switch (timeUnit) {\n    case 'seconds':\n    case 'minutes':\n    case 'hours':\n    case 'day':\n    case 'date':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n\ntime.scale.type = function(timeUnit, name) {\n  if (name === COLOR) {\n    return 'linear'; // this has order\n  }\n\n  return time.isOrdinalFn(timeUnit) || name === COL || name === ROW ? 'ordinal' : 'linear';\n};\n\ntime.scale.domain = function(timeUnit, name) {\n  var isColor = name === COLOR;\n  switch (timeUnit) {\n    case 'seconds':\n    case 'minutes': return isColor ? [0,59] : util.range(0, 60);\n    case 'hours': return isColor ? [0,23] : util.range(0, 24);\n    case 'day': return isColor ? [0,6] : util.range(0, 7);\n    case 'date': return isColor ? [1,31] : util.range(1, 32);\n    case 'month': return isColor ? [0,11] : util.range(0, 12);\n  }\n  return null;\n};\n\n/** whether a particular time function has custom scale for labels implemented in time.scale */\ntime.hasScale = function(timeUnit) {\n  switch (timeUnit) {\n    case 'day':\n    case 'month':\n      return true;\n  }\n  return false;\n};\n\n\n","'use strict';\n\nrequire('./globals');\n\nvar consts = module.exports = {};\n\nconsts.encodingTypes = [X, Y, ROW, COL, SIZE, SHAPE, COLOR, ALPHA, TEXT, DETAIL];\n\nconsts.shorthand = {\n  delim:  '|',\n  assign: '=',\n  type:   ',',\n  func:   '_'\n};\n","'use strict';\n\nrequire('./globals');\n\nvar stats = require('datalib/src/stats');\n\nvar vldata = module.exports = {};\n\n/** Mapping from datalib's inferred type to Vega-lite's type */\nvldata.types = {\n  'boolean': N,\n  'number': Q,\n  'integer': Q,\n  'date': T,\n  'string': N\n};\n\nvldata.stats = function(data) {\n  var summary = stats.summary(data);\n\n  return summary.reduce(function(s, profile) {\n    s[profile.field] = profile;\n    return s;\n  }, {count: data.length});\n};","// utility for enc\n\n'use strict';\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  vlfield = require('./field'),\n  util = require('./util'),\n  schema = require('./schema/schema'),\n  encTypes = schema.encTypes;\n\nvar vlenc = module.exports = {};\n\nvlenc.countRetinal = function(enc) {\n  var count = 0;\n  if (enc.color) count++;\n  if (enc.alpha) count++;\n  if (enc.size) count++;\n  if (enc.shape) count++;\n  return count;\n};\n\nvlenc.has = function(enc, encType) {\n  var fieldDef = enc && enc[encType];\n  return fieldDef && fieldDef.name;\n};\n\nvlenc.isAggregate = function(enc) {\n  for (var k in enc) {\n    if (vlenc.has(enc, k) && enc[k].aggregate) {\n      return true;\n    }\n  }\n  return false;\n};\n\nvlenc.forEach = function(enc, f) {\n  var i = 0;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      f(enc[k], k, i++);\n    }\n  });\n};\n\nvlenc.map = function(enc, f) {\n  var arr = [];\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      arr.push(f(enc[k], k, enc));\n    }\n  });\n  return arr;\n};\n\nvlenc.reduce = function(enc, f, init) {\n  var r = init;\n  encTypes.forEach(function(k) {\n    if (vlenc.has(enc, k)) {\n      r = f(r, enc[k], k,  enc);\n    }\n  });\n  return r;\n};\n\n/*\n * return key-value pairs of field name and list of fields of that field name\n */\nvlenc.fields = function(enc) {\n  return vlenc.reduce(enc, function (m, field) {\n    var fieldList = m[field.name] = m[field.name] || [],\n      containsType = fieldList.containsType = fieldList.containsType || {};\n\n    if (fieldList.indexOf(field) === -1) {\n      fieldList.push(field);\n      // augment the array with containsType.Q / O / N / T\n      containsType[field.type] = true;\n    }\n    return m;\n  }, {});\n};\n\nvlenc.shorthand = function(enc) {\n  return vlenc.map(enc, function(field, et) {\n    return et + c.assign + vlfield.shorthand(field);\n  }).join(c.delim);\n};\n\nvlenc.fromShorthand = function(shorthand) {\n  var enc = util.isArray(shorthand) ? shorthand : shorthand.split(c.delim);\n  return enc.reduce(function(m, e) {\n    var split = e.split(c.assign),\n        enctype = split[0].trim(),\n        field = split[1];\n\n    m[enctype] = vlfield.fromShorthand(field);\n    return m;\n  }, {});\n};","'use strict';\n\n// utility for field\n\nrequire('./globals');\n\nvar consts = require('./consts'),\n  c = consts.shorthand,\n  time = require('./compiler/time'),\n  util = require('./util'),\n  schema = require('./schema/schema');\n\nvar vlfield = module.exports = {};\n\n/**\n * @param field\n * @param opt\n *   opt.nofn -- exclude bin, aggregate, timeUnit\n *   opt.data - include 'data.'\n *   opt.fn - replace fn with custom function prefix\n *   opt.prefn - prepend fn with custom function prefix\n\n * @return {[type]}       [description]\n */\nvlfield.fieldRef = function(field, opt) {\n  opt = opt || {};\n\n  var f = (opt.data ? 'data.' : '') + (opt.prefn || ''),\n    nofn = opt.nofn || opt.fn,\n    name = field.name;\n\n  if (vlfield.isCount(field)) {\n    return f + 'count';\n  } else if (!nofn && field.bin) {\n    return f + 'bin_' + name;\n  } else if (!nofn && field.aggregate) {\n    return f + field.aggregate + '_' + name;\n  } else if (!nofn && field.timeUnit) {\n    return f + field.timeUnit + '_' + name;\n  } else if (opt.fn) {\n    return f + opt.fn + '_' + name;\n  } else {\n    return f + name;\n  }\n};\n\nvlfield.shorthand = function(f) {\n  var c = consts.shorthand;\n  return (f.aggregate ? f.aggregate + c.func : '') +\n    (f.timeUnit ? f.timeUnit + c.func : '') +\n    (f.bin ? 'bin' + c.func : '') +\n    (f.name || '') + c.type + f.type;\n};\n\nvlfield.shorthands = function(fields, delim) {\n  delim = delim || c.delim;\n  return fields.map(vlfield.shorthand).join(delim);\n};\n\nvlfield.fromShorthand = function(shorthand) {\n  var split = shorthand.split(c.type), i;\n  var o = {\n    name: split[0].trim(),\n    type: split[1].trim()\n  };\n\n  // check aggregate type\n  for (i in schema.aggregate.enum) {\n    var a = schema.aggregate.enum[i];\n    if (o.name.indexOf(a + '_') === 0) {\n      o.name = o.name.substr(a.length + 1);\n      if (a == 'count' && o.name.length === 0) o.name = '*';\n      o.aggregate = a;\n      break;\n    }\n  }\n\n  // check time timeUnit\n  for (i in schema.timefns) {\n    var tu = schema.timefns[i];\n    if (o.name && o.name.indexOf(tu + '_') === 0) {\n      o.name = o.name.substr(o.length + 1);\n      o.timeUnit = tu;\n      break;\n    }\n  }\n\n  // check bin\n  if (o.name && o.name.indexOf('bin_') === 0) {\n    o.name = o.name.substr(4);\n    o.bin = true;\n  }\n\n  return o;\n};\n\nvar typeOrder = {\n  N: 0,\n  O: 1,\n  G: 2,\n  T: 3,\n  Q: 4\n};\n\nvlfield.order = {};\n\nvlfield.order.type = function(field) {\n  if (field.aggregate==='count') return 4;\n  return typeOrder[field.type];\n};\n\nvlfield.order.typeThenName = function(field) {\n  return vlfield.order.type(field) + '_' +\n    (field.aggregate === 'count' ? '~' : field.name.toLowerCase());\n    // ~ is the last character in ASCII\n};\n\nvlfield.order.original = function() {\n  return 0; // no swap will occur\n};\n\nvlfield.order.name = function(field) {\n  return field.name;\n};\n\nvlfield.order.typeThenCardinality = function(field, stats){\n  return stats[field.name].distinct;\n};\n\nvar isType = vlfield.isType = function (fieldDef, type) {\n  return fieldDef.type === type;\n};\n\nvar isTypes = vlfield.isTypes = function (fieldDef, types) {\n  for (var t=0; t<types.length; t++) {\n    if(fieldDef.type === types[t]) return true;\n  }\n  return false;\n};\n\n/*\n * Most fields that use ordinal scale are dimensions.\n * However, YEAR(T), YEARMONTH(T) use time scale, not ordinal but are dimensions too.\n */\nvlfield.isOrdinalScale = function(field) {\n  return  isTypes(field, [N, O]) || field.bin ||\n    ( isType(field, T) && field.timeUnit && time.isOrdinalFn(field.timeUnit) );\n};\n\nfunction isDimension(field) {\n  return  isTypes(field, [N, O]) || !!field.bin ||\n    ( isType(field, T) && !!field.timeUnit );\n}\n\n/**\n * For encoding, use encoding.isDimension() to avoid confusion.\n * Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.isDimension = function(field) {\n  return field && isDimension(field);\n};\n\nvlfield.isMeasure = function(field) {\n  return field && !isDimension(field);\n};\n\nvlfield.role = function(field) {\n  return isDimension(field) ? 'dimension' : 'measure';\n};\n\nvlfield.count = function() {\n  return {name:'*', aggregate: 'count', type: Q, displayName: vlfield.count.displayName};\n};\n\nvlfield.count.displayName = 'Number of Records';\n\nvlfield.isCount = function(field) {\n  return field.aggregate === 'count';\n};\n\n/**\n * For encoding, use encoding.cardinality() to avoid confusion.  Or use Encoding.isType if your field is from Encoding (and thus have numeric data type).\n * otherwise, do not specific isType so we can use the default isTypeName here.\n */\nvlfield.cardinality = function(field, stats, filterNull) {\n  // FIXME need to take filter into account\n\n  var stat = stats[field.name];\n  var type = field.type;\n\n  filterNull = filterNull || {};\n\n  if (field.bin) {\n    var bins = util.getbins(stat, field.bin.maxbins || schema.MAXBINS_DEFAULT);\n    return (bins.stop - bins.start) / bins.step;\n  }\n  if (isType(field, T)) {\n    var cardinality = time.cardinality(field, stats, filterNull, type);\n    if(cardinality !== null) return cardinality;\n    //otherwise use calculation below\n  }\n  if (field.aggregate) {\n    return 1;\n  }\n\n  // remove null\n  return stat.distinct -\n    (stat.nulls > 0 && filterNull[type] ? 1 : 0);\n};\n","'use strict';\n\n// declare global constant\nvar g = global || window;\n\ng.TABLE = 'table';\ng.RAW = 'raw';\ng.STACKED = 'stacked';\ng.INDEX = 'index';\n\ng.X = 'x';\ng.Y = 'y';\ng.ROW = 'row';\ng.COL = 'col';\ng.SIZE = 'size';\ng.SHAPE = 'shape';\ng.COLOR = 'color';\ng.ALPHA = 'alpha';\ng.TEXT = 'text';\ng.DETAIL = 'detail';\n\ng.N = 'N';\ng.O = 'O';\ng.Q = 'Q';\ng.T = 'T';\n","// Package of defining Vega-lite Specification's json schema\n'use strict';\n\nrequire('../globals');\n\nvar schema = module.exports = {},\n  util = require('../util'),\n  toMap = util.toMap,\n  colorbrewer = require('colorbrewer');\n\nschema.util = require('./schemautil');\n\nschema.marktype = {\n  type: 'string',\n  enum: ['point', 'tick', 'bar', 'line', 'area', 'circle', 'square', 'text']\n};\n\nschema.aggregate = {\n  type: 'string',\n  enum: ['avg', 'sum', 'median', 'min', 'max', 'count'],\n  supportedEnums: {\n    Q: ['avg', 'median', 'sum', 'min', 'max', 'count'],\n    O: ['median','min','max'],\n    N: [],\n    T: ['avg', 'median', 'min', 'max'],\n    '': ['count']\n  },\n  supportedTypes: toMap([Q, N, O, T, ''])\n};\nschema.band = {\n  type: 'object',\n  properties: {\n    size: {\n      type: 'integer',\n      minimum: 0\n    },\n    padding: {\n      type: 'integer',\n      minimum: 0,\n      default: 1\n    }\n  }\n};\n\nschema.getSupportedRole = function(encType) {\n  return schema.schema.properties.encoding.properties[encType].supportedRole;\n};\n\nschema.timeUnits = ['year', 'month', 'day', 'date', 'hours', 'minutes', 'seconds'];\n\nschema.defaultTimeFn = 'month';\n\nschema.timeUnit = {\n  type: 'string',\n  enum: schema.timeUnits,\n  supportedTypes: toMap([T])\n};\n\n//TODO(kanitw): add other type of function here\n\nschema.scale_type = {\n  type: 'string',\n  enum: ['linear', 'log', 'pow', 'sqrt', 'quantile'],\n  default: 'linear',\n  supportedTypes: toMap([Q])\n};\n\nschema.field = {\n  type: 'object',\n  properties: {\n    name: {\n      type: 'string'\n    }\n  }\n};\n\nvar clone = util.duplicate;\nvar merge = schema.util.merge;\n\nschema.MAXBINS_DEFAULT = 15;\n\nvar bin = {\n  type: ['boolean', 'object'],\n  default: false,\n  properties: {\n    maxbins: {\n      type: 'integer',\n      default: schema.MAXBINS_DEFAULT,\n      minimum: 2\n    }\n  },\n  supportedTypes: toMap([Q]) // TODO: add O after finishing #81\n};\n\nvar typicalField = merge(clone(schema.field), {\n  type: 'object',\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T]\n    },\n    aggregate: schema.aggregate,\n    timeUnit: schema.timeUnit,\n    bin: bin,\n    scale: {\n      type: 'object',\n      properties: {\n        type: schema.scale_type,\n        reverse: {\n          type: 'boolean',\n          default: false,\n          supportedTypes: toMap([Q, T])\n        },\n        zero: {\n          type: 'boolean',\n          description: 'Include zero',\n          default: true,\n          supportedTypes: toMap([Q, T])\n        },\n        nice: {\n          type: 'string',\n          enum: ['second', 'minute', 'hour', 'day', 'week', 'month', 'year'],\n          supportedTypes: toMap([T])\n        }\n      }\n    }\n  }\n});\n\nvar onlyOrdinalField = merge(clone(schema.field), {\n  type: 'object',\n  supportedRole: {\n    dimension: true\n  },\n  properties: {\n    type: {\n      type: 'string',\n      enum: [N, O, Q, T] // ordinal-only field supports Q when bin is applied and T when time unit is applied.\n    },\n    timeUnit: schema.timeUnit,\n    bin: bin,\n    aggregate: {\n      type: 'string',\n      enum: ['count'],\n      supportedTypes: toMap([N, O]) // FIXME this looks weird to me\n    }\n  }\n});\n\nvar axisMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true},\n  properties: {\n    axis: {\n      type: 'object',\n      properties: {\n        grid: {\n          type: 'boolean',\n          default: true,\n          description: 'A flag indicate if gridlines should be created in addition to ticks.'\n        },\n        title: {\n          type: 'boolean',\n          default: true,\n          description: 'A title for the axis.'\n        },\n        titleOffset: {\n          type: 'integer',\n          default: undefined,  // auto\n          description: 'A title offset value for the axis.'\n        },\n        format: {\n          type: 'string',\n          default: undefined,  // auto\n          description: 'The formatting pattern for axis labels.'\n        },\n        maxLabelLength: {\n          type: 'integer',\n          default: 25,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        }\n      }\n    }\n  }\n};\n\nvar sortMixin = {\n  type: 'object',\n  properties: {\n    sort: {\n      type: 'array',\n      default: [],\n      items: {\n        type: 'object',\n        supportedTypes: toMap([N, O]),\n        required: ['name', 'aggregate'],\n        name: {\n          type: 'string'\n        },\n        aggregate: {\n          type: 'string',\n          enum: ['avg', 'sum', 'min', 'max', 'count']\n        },\n        reverse: {\n          type: 'boolean',\n          default: false\n        }\n      }\n    }\n  }\n};\n\nvar bandMixin = {\n  type: 'object',\n  properties: {\n    band: schema.band\n  }\n};\n\nvar legendMixin = {\n  type: 'object',\n  properties: {\n    legend: {\n      type: 'boolean',\n      default: true\n    }\n  }\n};\n\nvar textMixin = {\n  type: 'object',\n  supportedMarktypes: {'text': true},\n  properties: {\n    text: {\n      type: 'object',\n      properties: {\n        align: {\n          type: 'string',\n          default: 'left'\n        },\n        baseline: {\n          type: 'string',\n          default: 'middle'\n        },\n        margin: {\n          type: 'integer',\n          default: 4,\n          minimum: 0\n        }\n      }\n    },\n    font: {\n      type: 'object',\n      properties: {\n        weight: {\n          type: 'string',\n          enum: ['normal', 'bold'],\n          default: 'normal'\n        },\n        size: {\n          type: 'integer',\n          default: 10,\n          minimum: 0\n        },\n        family: {\n          type: 'string',\n          default: 'Helvetica Neue'\n        },\n        style: {\n          type: 'string',\n          default: 'normal',\n          enum: ['normal', 'italic']\n        }\n      }\n    }\n  }\n};\n\nvar sizeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, bar: true, circle: true, square: true, text: true},\n  properties: {\n    value: {\n      type: 'integer',\n      default: 30,\n      minimum: 0\n    }\n  }\n};\n\nvar colorMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true},\n  properties: {\n    value: {\n      type: 'string',\n      role: 'color',\n      default: 'steelblue'\n    },\n    scale: {\n      type: 'object',\n      properties: {\n        range: {\n          type: ['string', 'array']\n        }\n      }\n    }\n  }\n};\n\nvar alphaMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, 'text': true},\n  properties: {\n    value: {\n      type: 'number',\n      default: undefined,  // auto\n      minimum: 0,\n      maximum: 1\n    }\n  }\n};\n\nvar shapeMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, circle: true, square: true},\n  properties: {\n    value: {\n      type: 'string',\n      enum: ['circle', 'square', 'cross', 'diamond', 'triangle-up', 'triangle-down'],\n      default: 'circle'\n    }\n  }\n};\n\nvar detailMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, line: true, circle: true, square: true}\n};\n\nvar rowMixin = {\n  properties: {\n    height: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    },\n    grid: {\n      type: 'boolean',\n      default: true,\n      description: 'A flag indicate if gridlines should be created in addition to ticks.'\n    },\n  }\n};\n\nvar colMixin = {\n  properties: {\n    width: {\n      type: 'number',\n      minimum: 0,\n      default: 150\n    },\n    axis: {\n      properties: {\n        maxLabelLength: {\n          type: 'integer',\n          default: 12,\n          minimum: 0,\n          description: 'Truncate labels that are too long.'\n        }\n      }\n    }\n  }\n};\n\nvar facetMixin = {\n  type: 'object',\n  supportedMarktypes: {point: true, tick: true, bar: true, line: true, area: true, circle: true, square: true, text: true},\n  properties: {\n    padding: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.1\n    }\n  }\n};\n\nvar requiredNameType = {\n  required: ['name', 'type']\n};\n\nvar multiRoleField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: true\n  }\n});\n\nvar quantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true,\n    dimension: 'ordinal-only' // using alpha / size to encoding category lead to order interpretation\n  }\n});\n\nvar onlyQuantitativeField = merge(clone(typicalField), {\n  supportedRole: {\n    measure: true\n  }\n});\n\nvar x = merge(clone(multiRoleField), axisMixin, bandMixin, requiredNameType, sortMixin);\nvar y = clone(x);\n\nvar facet = merge(clone(onlyOrdinalField), requiredNameType, facetMixin, sortMixin);\nvar row = merge(clone(facet), axisMixin, rowMixin);\nvar col = merge(clone(facet), axisMixin, colMixin);\n\nvar size = merge(clone(quantitativeField), legendMixin, sizeMixin, sortMixin);\nvar color = merge(clone(multiRoleField), legendMixin, colorMixin, sortMixin);\nvar alpha = merge(clone(quantitativeField), alphaMixin, sortMixin);\nvar shape = merge(clone(onlyOrdinalField), legendMixin, shapeMixin, sortMixin);\nvar detail = merge(clone(onlyOrdinalField), detailMixin, sortMixin);\n\n// we only put aggregated measure in pivot table\nvar text = merge(clone(onlyQuantitativeField), textMixin, sortMixin);\n\n// TODO add label\n\nvar filter = {\n  type: 'array',\n  items: {\n    type: 'object',\n    properties: {\n      operands: {\n        type: 'array',\n        items: {\n          type: ['string', 'boolean', 'integer', 'number']\n        }\n      },\n      operator: {\n        type: 'string',\n        enum: ['>', '>=', '=', '!=', '<', '<=', 'notNull']\n      }\n    }\n  }\n};\n\nvar data = {\n  type: 'object',\n  properties: {\n    // data source\n    formatType: {\n      type: 'string',\n      enum: ['json', 'csv'],\n      default: 'json'\n    },\n    url: {\n      type: 'string',\n      default: undefined\n    },\n    values: {\n      type: 'array',\n      default: undefined,\n      description: 'Pass array of objects instead of a url to a file.',\n      items: {\n        type: 'object',\n        additionalProperties: true\n      }\n    }\n  }\n};\n\nvar config = {\n  type: 'object',\n  properties: {\n    // template\n    width: {\n      type: 'integer',\n      default: undefined\n    },\n    height: {\n      type: 'integer',\n      default: undefined\n    },\n    viewport: {\n      type: 'array',\n      items: {\n        type: 'integer'\n      },\n      default: undefined\n    },\n    gridColor: {\n      type: 'string',\n      role: 'color',\n      default: 'black'\n    },\n    gridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.08\n    },\n\n    // filter null\n    filterNull: {\n      type: 'object',\n      properties: {\n        O: {type:'boolean', default: false},\n        Q: {type:'boolean', default: true},\n        T: {type:'boolean', default: true}\n      }\n    },\n    toggleSort: {\n      type: 'string',\n      default: O\n    },\n\n    // single plot\n    singleHeight: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    singleWidth: {\n      // will be overwritten by bandWidth * (cardinality + padding)\n      type: 'integer',\n      default: 200,\n      minimum: 0\n    },\n    // band size\n    largeBandSize: {\n      type: 'integer',\n      default: 21,\n      minimum: 0\n    },\n    smallBandSize: {\n      //small multiples or single plot with high cardinality\n      type: 'integer',\n      default: 12,\n      minimum: 0\n    },\n    largeBandMaxCardinality: {\n      type: 'integer',\n      default: 10\n    },\n    // small multiples\n    cellPadding: {\n      type: 'number',\n      default: 0.1\n    },\n    cellGridColor: {\n      type: 'string',\n      role: 'color',\n      default: 'black'\n    },\n    cellGridOpacity: {\n      type: 'number',\n      minimum: 0,\n      maximum: 1,\n      default: 0.15\n    },\n    cellBackgroundColor: {\n      type: 'string',\n      role: 'color',\n      default: 'transparent'\n    },\n    textCellWidth: {\n      type: 'integer',\n      default: 90,\n      minimum: 0\n    },\n\n    // marks\n    strokeWidth: {\n      type: 'integer',\n      default: 2,\n      minimum: 0\n    },\n    singleBarOffset: {\n      type: 'integer',\n      default: 5,\n      minimum: 0\n    },\n\n    // color\n    c10palette: {\n      type: 'string',\n      default: 'category10',\n      enum: [\n        // Tableau\n        'category10', 'category10k',\n        // Color Brewer\n        'Pastel1', 'Pastel2', 'Set1', 'Set2', 'Set3'\n      ]\n    },\n    c20palette: {\n      type: 'string',\n      default: 'category20',\n      enum: ['category20', 'category20b', 'category20c']\n    },\n    ordinalPalette: {\n      type: 'string',\n      default: 'BuGn',\n      enum: util.keys(colorbrewer)\n    },\n\n    // scales\n    timeScaleLabelLength: {\n      type: 'integer',\n      default: 3,\n      minimum: 0\n    },\n    // other\n    characterWidth: {\n      type: 'integer',\n      default: 6\n    }\n  }\n};\n\n/** @type Object Schema of a vega-lite specification */\nschema.schema = {\n  $schema: 'http://json-schema.org/draft-04/schema#',\n  description: 'Schema for Vega-lite specification',\n  type: 'object',\n  required: ['marktype', 'encoding', 'data'],\n  properties: {\n    data: data,\n    marktype: schema.marktype,\n    encoding: {\n      type: 'object',\n      properties: {\n        x: x,\n        y: y,\n        row: row,\n        col: col,\n        size: size,\n        color: color,\n        alpha: alpha,\n        shape: shape,\n        text: text,\n        detail: detail\n      }\n    },\n    filter: filter,\n    config: config\n  }\n};\n\nschema.encTypes = util.keys(schema.schema.properties.encoding.properties);\n\n/** Instantiate a verbose vl spec from the schema */\nschema.instantiate = function() {\n  return schema.util.instantiate(schema.schema);\n};\n","'use strict';\n\nvar schemautil = module.exports = {},\n  util = require('../util');\n\nvar isEmpty = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\nschemautil.extend = function(instance, schema) {\n  return schemautil.merge(schemautil.instantiate(schema), instance);\n};\n\n// instantiate a schema\nschemautil.instantiate = function(schema) {\n  var val;\n  if (schema === undefined) {\n    return undefined;\n  } else if ('default' in schema) {\n    val = schema.default;\n    return util.isObject(val) ? util.duplicate(val) : val;\n  } else if (schema.type === 'object') {\n    var instance = {};\n    for (var name in schema.properties) {\n      val = schemautil.instantiate(schema.properties[name]);\n      if (val !== undefined) {\n        instance[name] = val;\n      }\n    }\n    return instance;\n  } else if (schema.type === 'array') {\n    return [];\n  }\n  return undefined;\n};\n\n// remove all defaults from an instance\nschemautil.subtract = function(instance, defaults) {\n  var changes = {};\n  for (var prop in instance) {\n    var def = defaults[prop];\n    var ins = instance[prop];\n    // Note: does not properly subtract arrays\n    if (!defaults || def !== ins) {\n      if (typeof ins === 'object' && !util.isArray(ins) && def) {\n        var c = schemautil.subtract(ins, def);\n        if (!isEmpty(c))\n          changes[prop] = c;\n      } else if (!util.isArray(ins) || ins.length > 0) {\n        changes[prop] = ins;\n      }\n    }\n  }\n  return changes;\n};\n\nschemautil.merge = function(/*dest*, src0, src1, ...*/){\n  var dest = arguments[0];\n  for (var i=1 ; i<arguments.length; i++) {\n    dest = merge(dest, arguments[i]);\n  }\n  return dest;\n};\n\n// recursively merges src into dest\nfunction merge(dest, src) {\n  if (typeof src !== 'object' || src === null) {\n    return dest;\n  }\n\n  for (var p in src) {\n    if (!src.hasOwnProperty(p)) {\n      continue;\n    }\n    if (src[p] === undefined) {\n      continue;\n    }\n    if (typeof src[p] !== 'object' || src[p] === null) {\n      dest[p] = src[p];\n    } else if (typeof dest[p] !== 'object' || dest[p] === null) {\n      dest[p] = merge(src[p].constructor === Array ? [] : {}, src[p]);\n    } else {\n      merge(dest[p], src[p]);\n    }\n  }\n  return dest;\n}","'use strict';\n\nvar util = module.exports = require('datalib/src/util');\n\nutil.extend(util, require('datalib/src/generate'));\nutil.extend(util, require('datalib/src/stats'));\nutil.bin = require('datalib/src/bins/bins');\n\nutil.isin = function(item, array) {\n  return array.indexOf(item) !== -1;\n};\n\nutil.forEach = function(obj, f, thisArg) {\n  if (obj.forEach) {\n    obj.forEach.call(thisArg, f);\n  } else {\n    for (var k in obj) {\n      f.call(thisArg, obj[k], k , obj);\n    }\n  }\n};\n\nutil.reduce = function(obj, f, init, thisArg) {\n  if (obj.reduce) {\n    return obj.reduce.call(thisArg, f, init);\n  } else {\n    for (var k in obj) {\n      init = f.call(thisArg, init, obj[k], k, obj);\n    }\n    return init;\n  }\n};\n\nutil.map = function(obj, f, thisArg) {\n  if (obj.map) {\n    return obj.map.call(thisArg, f);\n  } else {\n    var output = [];\n    for (var k in obj) {\n      output.push( f.call(thisArg, obj[k], k, obj));\n    }\n  }\n};\n\nutil.any = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (f(arr[k], k, i++)) return true;\n  }\n  return false;\n};\n\nutil.all = function(arr, f) {\n  var i = 0, k;\n  for (k in arr) {\n    if (!f(arr[k], k, i++)) return false;\n  }\n  return true;\n};\n\nutil.getbins = function(stats, maxbins) {\n  return util.bin({\n    min: stats.min,\n    max: stats.max,\n    maxbins: maxbins\n  });\n};\n\n/**\n * x[p[0]]...[p[n]] = val\n * @param noaugment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.setter = function(x, p, val, noaugment) {\n  for (var i=0; i<p.length-1; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  x[p[i]] = val;\n};\n\n\n/**\n * returns x[p[0]]...[p[n]]\n * @param augment determine whether new object should be added f\n * or non-existing properties along the path\n */\nutil.getter = function(x, p, noaugment) {\n  for (var i=0; i<p.length; ++i) {\n    if (!noaugment && !(p[i] in x)){\n      x = x[p[i]] = {};\n    } else {\n      x = x[p[i]];\n    }\n  }\n  return x;\n};\n\nutil.error = function(msg) {\n  console.error('[VL Error]', msg);\n};\n\n"],"sourceRoot":"/source/"}